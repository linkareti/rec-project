version: '3.5'
services:
  elab-client-webswing:
    container_name: rec.client
    image: ${repo}/${simplifiedGroupId}/rec.client-${webswing.version}-${openjdk.version}:${project.version}
    restart: unless-stopped
    environment:
      XDG_RUNTIME_DIR: '/opt/webswing/.cache/xdgr'
    labels:
      - "traefik.docker.network=server"
      # HTTP (80)
      - "traefik.http.routers.webswing-http.entrypoints=web"
      - "traefik.http.routers.webswing-http.rule=PathPrefix(`/tiro_v1.0`)"
      - "traefik.http.routers.webswing-http.middlewares=webswing-http-redir"
      - "traefik.http.services.webswing-http.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.webswing-http-redir.redirectscheme.scheme=https"
      - "traefik.http.services.webswing-http.loadbalancer.healthcheck.path=/tiro_v1.0"
      # HTTPS (443)
      - "traefik.http.routers.webswing-https.entrypoints=web-secure"
      - "traefik.http.routers.webswing-https.rule=PathPrefix(`/tiro_v1.0`)"
      - "traefik.http.routers.webswing-https.tls=true"
    networks:
      - server
  
  webswing-admin:
    image: ${repo}/${simplifiedGroupId}/rec.client-admin-${webswing.version}-${openjdk.version}:${project.version}
    restart: unless-stopped
    environment:
      WEBSWING_HOST: elab-client-webswing
      WEBSWING_WEBSOCKET_PORT: 8080
      WEBSWING_SHARED_LOG_DIR: /var/opt/logs
      WEBSWING_PUBLIC_URL: https://elab.dev.linkare.com
    networks:
      - server

  elab-server-payara:
    image: ${repo}/${simplifiedGroupId}/rec.web-${payara.docker.version}:${project.version}
    environment:
      DEVELOPMENT_MODE: ${development.mode}
      PAYARA_ARGS: "--debug"
    volumes:
      # Allow real-time refresh (with rec.web build)
      - ${project.build.directory}/resources/autodeploy:/autodeploy
    networks:
      - server
    labels:
      - "traefik.docker.network=server"

  rec-database:
    image: ${repo}/${simplifiedGroupId}/rec.database:${project.version}
    ports:
      - "13306:3306"
    #restart: "none"
    networks:
      - server

  elab-multicast:
    container_name: rec.multicast
    healthcheck:
      test: pgrep java
      interval: 30s
      timeout: 1s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    environment:
      APPNAME: 'basic'
      APPUSER: 'elab'
      WORKDIR: '/home/elab/rec-deployment/basic'
      LABORATORY_NAMES: 'basic'
    image: ${repo}/${simplifiedGroupId}/rec.multicast-${openjdk.version}:${project.version}
    networks:
      - server
  
  elab-hardwareserver:
    container_name: rec.hardwareserver
    image: ${repo}/${simplifiedGroupId}/base-images/openjdk-${openjdk.docker.version}:${project.version}
    healthcheck:
      test: pgrep java
      interval: 30s
      timeout: 1s
      retries: 3
      start_period: 30s
    volumes:
      - ${project.build.directory}/resources/hardwareserver:/startup.d/
    networks:
      - server
    environment:
      CONTAINERS_MULTICAST: 'elab-multicast:9001'
      EXPERIMENT_NAMES: 'vtiroHardwareServer'

  # elab-streamer-server:
  #   image: ${repo}/${simplifiedGroupId}/base-images/streamer:${project.version}
  #   ports:
  #     - "8554:8554"

  rec-upgrade-db:
    image: ${repo}/${simplifiedGroupId}/rec.upgrade-db-${liquibase.version}:${project.version}
    environment:
      #- DUMP_SQL=""
      #- FORCE_UNLOCK=""
      #- RESET_CKSUMS=""
      - DB_CONTEXT=dev
    networks:
      - server

  reverse-proxy:
    image: ${repo}/${simplifiedGroupId}/base-images/traefik-${traefik.version}:${project.version}
    networks:
      - server
      
secrets:
   dbrec.secret:
     file: ${project.build.directory}/resources/rec-db.secret
   rdb.secret:
     file: ${project.build.directory}/resources/root-db.secret
   as_mail.secret:
     file: ${project.build.directory}/resources/asadmin_mail.secret
   as_recdb.secret:
     file: ${project.build.directory}/resources/asadmin_recdb.secret

networks:
  server:
    name: server