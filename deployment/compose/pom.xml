<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.linkare</groupId>
        <artifactId>elab</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>compose</artifactId>
    <packaging>pom</packaging>

    <name>Docker compose runnables</name>
    <description>Docker compose runnables</description>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>create-stack-runner-local</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <executable>docker-compose</executable>
                            <commandlineArgs> -f docker-compose-template.yml -f docker-compose-local.yml --log-level ERROR config </commandlineArgs>
                            <outputFile>${project.build.directory}/docker-compose-runner.yml</outputFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-stack-runner-dev</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <executable>docker-compose</executable>
                            <commandlineArgs> -f docker-compose-template.yml -f docker-compose-dev.yml --log-level ERROR config </commandlineArgs>
                            <outputFile>${project.build.directory}/docker-compose-runner-dev.yml</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <id>copy-thirdparty-dependencies</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <!-- FIXME - Temporary setup for using locally -->
                                <artifactItem>
                                    <groupId>com.linkare</groupId>
                                    <artifactId>builder</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>multicast</classifier>
                                    <type>zip</type>
                                    <destFileName>multicast.zip</destFileName>
                                    <outputDirectory>${project.build.directory}/resources/multicast</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.linkare</groupId>
                                    <artifactId>builder</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>hardwareserver</classifier>
                                    <type>zip</type>
                                    <destFileName>hardwareserver.zip</destFileName>
                                    <outputDirectory>${project.build.directory}/resources/hardwareserver</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>