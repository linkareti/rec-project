<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.linkare</groupId>
        <artifactId>elab</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>compose</artifactId>
    <packaging>pom</packaging>

    <name>Docker compose runnables</name>
    <description>Docker compose runnables</description>

    <dependencies>
        <dependency>
            <groupId>com.linkare</groupId>
            <artifactId>rec.web</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.linkare</groupId>
            <artifactId>builder</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-stack-runner-dev</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <executable>docker-compose</executable>
                            <commandlineArgs> -f docker-compose-template.yml -f docker-compose-dev.yml --log-level ERROR config </commandlineArgs>
                            <outputFile>${project.build.directory}/docker-compose-runner-dev.yml</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-thirdparty-dependencies</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <!-- FIXME - Temporary setup for using locally -->
                                <artifactItem>
                                    <groupId>com.linkare</groupId>
                                    <artifactId>builder</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>multicast</classifier>
                                    <type>zip</type>
                                    <destFileName>multicast.zip</destFileName>
                                    <outputDirectory>${project.build.directory}/resources/multicast</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.linkare</groupId>
                                    <artifactId>builder</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>hardwareserver</classifier>
                                    <type>zip</type>
                                    <destFileName>hardwareserver.zip</destFileName>
                                    <outputDirectory>${project.build.directory}/resources/hardwareserver</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-thirdparty-dependencies</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.linkare</groupId>
                                    <artifactId>rec.web</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                    <classifier>client-config</classifier>
                                    <outputDirectory>${project.build.directory}/payara/resources</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.linkare</groupId>
                                    <artifactId>rec.web</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                    <classifier>autodeploy</classifier>
                                    <outputDirectory>${project.build.directory}/resources/autodeploy</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>noPurge</id>
            <activation>
                <property>
                    <name>hot.deploy.enabled</name>
                </property>
            </activation>
            <properties>
                <development.mode>1</development.mode>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>clean-docker</id>
            <activation>
                <property>
                    <name>skipDockerBuild</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>clean-auto-deploy-file</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>docker</executable>
                                    <commandlineArgs>exec -ti rec.web rm -f /opt/payara/appserver/glassfish/domains/production/autodeploy/.autodeploystatus/rec.web.war</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>local</id>
            <activation>
                <property>
                    <name>build.environment</name>
                    <value>local</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-stack-runner-local</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <executable>docker-compose</executable>
                                    <commandlineArgs> -f docker-compose-template.yml -f docker-compose-local.yml --log-level ERROR config </commandlineArgs>
                                    <outputFile>${project.build.directory}/docker-compose-runner.yml</outputFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>local-client</id>
            <activation>
                <property>
                    <name>build.environment</name>
                    <value>local-client</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-stack-runner-local-client</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <executable>docker-compose</executable>
                                    <commandlineArgs> -f docker-compose-template.yml -f docker-compose-local.yml -f docker-compose-client-local.yml --log-level ERROR config </commandlineArgs>
                                    <outputFile>${project.build.directory}/docker-compose-runner.yml</outputFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>