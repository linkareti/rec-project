/*
 * Laffy - Swing Look and Feel Sampler
 * Copyright (C) Sun Microsystems
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 */

package org.jdesktop.laffy.sliders;

import org.jdesktop.laffy.I18nResourceHandler;
import org.jdesktop.laffy.OptionsSettablePanel;

import java.awt.Color;

/** @author Jasper Potts */
public class VerticalSliderPanel extends OptionsSettablePanel {

    private final Color DEFAULT_BACKGROUND;
    private final boolean DEFAULT_OPAQUE;

    /** Creates new form ProgressPanel */
    public VerticalSliderPanel() {
        initComponents();
        DEFAULT_BACKGROUND = jSlider1.getBackground();
        DEFAULT_OPAQUE = jSlider1.isOpaque();
    }

    // =================================================================================================================
    // OptionsSettablePanel Methods

    @Override public void setForceComponentsBackgroundColor(boolean force) {
        System.out.println("ButtonPanel.setForceComponetsbackgroundRed " + force);
        Color c = force ? FORCED_BACKGROUND : DEFAULT_BACKGROUND;
//        boolean o = force ? true : DEFAULT_OPAQUE;
        jSlider1.setBackground(c);
        jSlider10.setBackground(c);
        jSlider11.setBackground(c);
        jSlider12.setBackground(c);
        jSlider13.setBackground(c);
        jSlider14.setBackground(c);
        jSlider15.setBackground(c);
        jSlider16.setBackground(c);
        jSlider2.setBackground(c);
        jSlider3.setBackground(c);
        jSlider4.setBackground(c);
        jSlider5.setBackground(c);
        jSlider6.setBackground(c);
        jSlider7.setBackground(c);
        jSlider8.setBackground(c);
        jSlider9.setBackground(c);
//        jSlider1.setOpaque(o);
//        jSlider10.setOpaque(o);
//        jSlider11.setOpaque(o);
//        jSlider12.setOpaque(o);
//        jSlider13.setOpaque(o);
//        jSlider14.setOpaque(o);
//        jSlider15.setOpaque(o);
//        jSlider16.setOpaque(o);
//        jSlider2.setOpaque(o);
//        jSlider3.setOpaque(o);
//        jSlider4.setOpaque(o);
//        jSlider5.setOpaque(o);
//        jSlider6.setOpaque(o);
//        jSlider7.setOpaque(o);
//        jSlider8.setOpaque(o);
//        jSlider9.setOpaque(o);
    }

    @Override public void setForceComponentsNonOpaque(boolean force) {
        setBackground(force ? Color.GREEN : DEFAULT_BACKGROUND);
        boolean o = force ? false : DEFAULT_OPAQUE;
        jSlider1.setOpaque(o);
        jSlider10.setOpaque(o);
        jSlider11.setOpaque(o);
        jSlider12.setOpaque(o);
        jSlider13.setOpaque(o);
        jSlider14.setOpaque(o);
        jSlider15.setOpaque(o);
        jSlider16.setOpaque(o);
        jSlider2.setOpaque(o);
        jSlider3.setOpaque(o);
        jSlider4.setOpaque(o);
        jSlider5.setOpaque(o);
        jSlider6.setOpaque(o);
        jSlider7.setOpaque(o);
        jSlider8.setOpaque(o);
        jSlider9.setOpaque(o);
    }

    // =================================================================================================================
    // Netbeans Code

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jSlider3 = new javax.swing.JSlider();
        jSlider4 = new javax.swing.JSlider();
        jSlider5 = new javax.swing.JSlider();
        jSlider6 = new javax.swing.JSlider();
        jSlider7 = new javax.swing.JSlider();
        jSlider8 = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        jSlider9 = new javax.swing.JSlider();
        jSlider10 = new javax.swing.JSlider();
        jSlider11 = new javax.swing.JSlider();
        jSlider12 = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        jSlider13 = new javax.swing.JSlider();
        jSlider14 = new javax.swing.JSlider();
        jSlider15 = new javax.swing.JSlider();
        jSlider16 = new javax.swing.JSlider();

        setLayout(new java.awt.GridBagLayout());

        jLabel8.setFont(jLabel8.getFont().deriveFont(jLabel8.getFont().getStyle() | java.awt.Font.BOLD,
                jLabel8.getFont().getSize() - 2));
        jLabel8.setForeground(java.awt.Color.darkGray);
        jLabel8.setText(I18nResourceHandler.getMessage("Normal"));
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        add(jLabel8, gridBagConstraints);

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() | java.awt.Font.BOLD,
                jLabel2.getFont().getSize() - 2));
        jLabel2.setForeground(java.awt.Color.darkGray);
        jLabel2.setText(I18nResourceHandler.getMessage("Focused"));
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        add(jLabel2, gridBagConstraints);

        jLabel3.setFont(jLabel3.getFont().deriveFont(jLabel3.getFont().getStyle() | java.awt.Font.BOLD,
                jLabel3.getFont().getSize() - 2));
        jLabel3.setForeground(java.awt.Color.darkGray);
        jLabel3.setText(I18nResourceHandler.getMessage("Ticks_&_Labels"));
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        add(jLabel3, gridBagConstraints);

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() | java.awt.Font.BOLD,
                jLabel4.getFont().getSize() - 2));
        jLabel4.setForeground(java.awt.Color.darkGray);
        jLabel4.setText(I18nResourceHandler.getMessage("Custom_Colors"));
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        add(jLabel4, gridBagConstraints);

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD,
                jLabel1.getFont().getSize() - 2));
        jLabel1.setForeground(java.awt.Color.darkGray);
        jLabel1.setText(I18nResourceHandler.getMessage("Normal"));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 2, 4, 2);
        add(jLabel1, gridBagConstraints);

        jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getStyle() | java.awt.Font.BOLD,
                jLabel6.getFont().getSize() - 2));
        jLabel6.setForeground(java.awt.Color.darkGray);
        jLabel6.setText(I18nResourceHandler.getMessage("100%"));
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 2, 4, 2);
        add(jLabel6, gridBagConstraints);

        jSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider1, gridBagConstraints);

        jSlider2.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider2.setValue(100);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider2, gridBagConstraints);

        jSlider3.setOrientation(javax.swing.JSlider.VERTICAL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider3, gridBagConstraints);

        jSlider4.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider4.setValue(100);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider4, gridBagConstraints);

        jSlider5.setMajorTickSpacing(50);
        jSlider5.setMinorTickSpacing(25);
        jSlider5.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider5.setPaintLabels(true);
        jSlider5.setPaintTicks(true);
        jSlider5.setSnapToTicks(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider5, gridBagConstraints);

        jSlider6.setMajorTickSpacing(50);
        jSlider6.setMinorTickSpacing(25);
        jSlider6.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider6.setPaintLabels(true);
        jSlider6.setPaintTicks(true);
        jSlider6.setSnapToTicks(true);
        jSlider6.setValue(100);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider6, gridBagConstraints);

        jSlider7.setBackground(java.awt.Color.gray);
        jSlider7.setForeground(java.awt.Color.red);
        jSlider7.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider7.setPaintLabels(true);
        jSlider7.setPaintTicks(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider7, gridBagConstraints);

        jSlider8.setBackground(java.awt.Color.gray);
        jSlider8.setForeground(java.awt.Color.red);
        jSlider8.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider8.setPaintLabels(true);
        jSlider8.setPaintTicks(true);
        jSlider8.setValue(100);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider8, gridBagConstraints);

        jLabel7.setFont(jLabel7.getFont().deriveFont(jLabel7.getFont().getStyle() | java.awt.Font.BOLD,
                jLabel7.getFont().getSize() - 2));
        jLabel7.setForeground(java.awt.Color.darkGray);
        jLabel7.setText(I18nResourceHandler.getMessage("Disabled"));
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 2, 4, 2);
        add(jLabel7, gridBagConstraints);

        jSlider9.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider9.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider9, gridBagConstraints);

        jSlider10.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider10.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider10, gridBagConstraints);

        jSlider11.setMajorTickSpacing(50);
        jSlider11.setMinorTickSpacing(25);
        jSlider11.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider11.setPaintLabels(true);
        jSlider11.setPaintTicks(true);
        jSlider11.setSnapToTicks(true);
        jSlider11.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider11, gridBagConstraints);

        jSlider12.setBackground(java.awt.Color.gray);
        jSlider12.setForeground(java.awt.Color.red);
        jSlider12.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider12.setPaintLabels(true);
        jSlider12.setPaintTicks(true);
        jSlider12.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider12, gridBagConstraints);

        jLabel9.setFont(jLabel9.getFont().deriveFont(jLabel9.getFont().getStyle() | java.awt.Font.BOLD,
                jLabel9.getFont().getSize() - 2));
        jLabel9.setForeground(java.awt.Color.darkGray);
        jLabel9.setText(I18nResourceHandler.getMessage("0%"));
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 2, 4, 2);
        add(jLabel9, gridBagConstraints);

        jSlider13.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider13.setValue(0);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider13, gridBagConstraints);

        jSlider14.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider14.setValue(0);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider14, gridBagConstraints);

        jSlider15.setMajorTickSpacing(50);
        jSlider15.setMinorTickSpacing(25);
        jSlider15.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider15.setPaintLabels(true);
        jSlider15.setPaintTicks(true);
        jSlider15.setSnapToTicks(true);
        jSlider15.setValue(0);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider15, gridBagConstraints);

        jSlider16.setBackground(java.awt.Color.gray);
        jSlider16.setForeground(java.awt.Color.red);
        jSlider16.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider16.setPaintLabels(true);
        jSlider16.setPaintTicks(true);
        jSlider16.setValue(0);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(jSlider16, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider10;
    private javax.swing.JSlider jSlider11;
    private javax.swing.JSlider jSlider12;
    private javax.swing.JSlider jSlider13;
    private javax.swing.JSlider jSlider14;
    private javax.swing.JSlider jSlider15;
    private javax.swing.JSlider jSlider16;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JSlider jSlider4;
    private javax.swing.JSlider jSlider5;
    private javax.swing.JSlider jSlider6;
    private javax.swing.JSlider jSlider7;
    private javax.swing.JSlider jSlider8;
    private javax.swing.JSlider jSlider9;
    // End of variables declaration//GEN-END:variables

}
