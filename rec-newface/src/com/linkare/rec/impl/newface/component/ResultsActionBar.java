/*
 * ExperimentActionBar.java created on May 20, 2009
 *
 * Copyright 2009 HFernandes. All rights reserved.
 * HFernandes PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 */

package com.linkare.rec.impl.newface.component;

import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.util.logging.Logger;

import javax.swing.JComponent;

/**
 * 
 * @author hfernandes
 */
public class ResultsActionBar extends javax.swing.JPanel {

	private static final Logger log = Logger.getLogger(ResultsActionBar.class.getName());

	private JComponent activeExpDataDisplay;

	/** Creates new form ExperimentActionBar */
	public ResultsActionBar() {
		initComponents();
	}

	public void setPlayStopButtonEnabled(boolean enabled) {
		btnPlayStop.setEnabled(enabled);
	}

        public void setPlayStopButtonVisible(boolean visible) {
		btnPlayStop.setVisible(visible);
	}

	public boolean isPlayStopButtonEnabled() {
		return btnPlayStop.isEnabled();
	}

	public void setActiveExpDataDisplay(JComponent activeExpDataDisplay) {
		this.activeExpDataDisplay = activeExpDataDisplay;
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPlayStop = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCopy = new javax.swing.JButton();
        btnSelectAll = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(32767, 40));
        setName("Form"); // NOI18N
        setOpaque(false);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.linkare.rec.impl.newface.ReCApplication.class).getContext().getResourceMap(ResultsActionBar.class);
        btnPlayStop.setBackground(resourceMap.getColor("btnPlayStop.background")); // NOI18N
        btnPlayStop.setIcon(resourceMap.getIcon("btnPlayStop.icon")); // NOI18N
        btnPlayStop.setText(resourceMap.getString("btnPlayStop.text")); // NOI18N
        btnPlayStop.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4));
        btnPlayStop.setBorderPainted(false);
        btnPlayStop.setName("btnPlayStop"); // NOI18N
        btnPlayStop.setOpaque(false);

        btnPrint.setBackground(resourceMap.getColor("btnPlayStop.background")); // NOI18N
        btnPrint.setIcon(resourceMap.getIcon("btnPrint.icon")); // NOI18N
        btnPrint.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4));
        btnPrint.setBorderPainted(false);
        btnPrint.setName("btnPrint"); // NOI18N
        btnPrint.setOpaque(false);
        btnPrint.setPressedIcon(resourceMap.getIcon("btnPrint.pressedIcon")); // NOI18N
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnSave.setBackground(resourceMap.getColor("btnPlayStop.background")); // NOI18N
        btnSave.setIcon(resourceMap.getIcon("btnSave.icon")); // NOI18N
        btnSave.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4));
        btnSave.setBorderPainted(false);
        btnSave.setName("btnSave"); // NOI18N
        btnSave.setOpaque(false);
        btnSave.setPressedIcon(resourceMap.getIcon("btnSave.pressedIcon")); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCopy.setBackground(resourceMap.getColor("btnPlayStop.background")); // NOI18N
        btnCopy.setIcon(resourceMap.getIcon("btnCopy.icon")); // NOI18N
        btnCopy.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4));
        btnCopy.setBorderPainted(false);
        btnCopy.setName("btnCopy"); // NOI18N
        btnCopy.setOpaque(false);
        btnCopy.setPressedIcon(resourceMap.getIcon("btnCopy.pressedIcon")); // NOI18N
        btnCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopyActionPerformed(evt);
            }
        });

        btnSelectAll.setBackground(resourceMap.getColor("btnPlayStop.background")); // NOI18N
        btnSelectAll.setIcon(resourceMap.getIcon("btnSelectAll.icon")); // NOI18N
        btnSelectAll.setBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4));
        btnSelectAll.setBorderPainted(false);
        btnSelectAll.setName("btnSelectAll"); // NOI18N
        btnSelectAll.setOpaque(false);
        btnSelectAll.setPressedIcon(resourceMap.getIcon("btnSelectAll.pressedIcon")); // NOI18N
        btnSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnPlayStop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCopy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSelectAll)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
            .addComponent(btnPrint, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
            .addComponent(btnPlayStop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnCopy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
            .addComponent(btnSelectAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

	private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
		if (activeExpDataDisplay instanceof Printable) {
			PrinterJob job = PrinterJob.getPrinterJob();
			PageFormat pf = job.defaultPage();
			pf.setOrientation(PageFormat.PORTRAIT);
			PageFormat pf2 = job.pageDialog(pf);
			if (pf2 != pf) {
				job.setPrintable((Printable) activeExpDataDisplay, pf2);
				if (job.printDialog()) {
					try {
						job.print();
					} catch (PrinterException e) {
						javax.swing.JOptionPane.showMessageDialog(this, e);
					}
				}
			}
		} else {
			log.warning("The active data display is not printable: " + activeExpDataDisplay.getName());
		}
	}//GEN-LAST:event_btnPrintActionPerformed

	// TODO The folowing actions must be implemented. Check the experiments code.
	// @see GDataTable

	private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
	//		javax.swing.JFileChooser jFileChooserSave = new javax.swing.JFileChooser();
	//
	//		ExtensionFilter textExtension = new ExtensionFilter("csv", "ext");
	//
	//		textExtension.setDescription("Comma separated files");
	//		jFileChooserSave.setAcceptAllFileFilterUsed(false);
	//		jFileChooserSave.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
	//		jFileChooserSave.setFileFilter(textExtension);
	//
	//		int returnValue = jFileChooserSave.showSaveDialog(this);
	//		String extension = null;
	//		if (returnValue == jFileChooserSave.APPROVE_OPTION) {
	//			extension = textExtension.getExtension();
	//		}
	//		String path = jFileChooserSave.getSelectedFile().getPath();
	//		if (path.endsWith(extension)) {
	//			path = path.substring(0, path.length() - 4);
	//		}
	//		File saveFile = new File(path + "." + extension);
	//		saveTable(saveFile, false);
	}//GEN-LAST:event_btnSaveActionPerformed

	//	public void saveTable(File saveFile, boolean append) {
	//		try {
	//			Writer fileWriter = new OutputStreamWriter(new FileOutputStream(saveFile, append));
	//			final String LS = System.getProperty("line.separator");
	//			final String COMMA = ",";
	//			final String QUOTE = "\"";
	//			// java.io.FileWriter fileWriter = new java.io.FileWriter(saveFile,
	//			// append);
	//			for (int headerCol = 0; headerCol < dataTable.getColumnCount(); headerCol++) {
	//				fileWriter.write(QUOTE + dataTable.getColumnName(headerCol) + QUOTE);
	//				fileWriter.write(COMMA);
	//			}
	//			fileWriter.write(LS);
	//			for (int row = 0; row < dataTable.getRowCount(); row++) {
	//				for (int col = 0; col < dataTable.getColumnCount(); col++) {
	//					fileWriter.write(QUOTE + new String().valueOf(dataTable.getValueAt(row, col)) + QUOTE);
	//					fileWriter.write(COMMA);
	//				}
	//				fileWriter.write(LS);
	//			}
	//			fileWriter.flush();
	//			fileWriter.close();
	//		} catch (java.io.IOException ioe) {
	//			System.out.println("Error while trying to save data to file: " + ioe);
	//		}
	//	}

	private void btnCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopyActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_btnCopyActionPerformed

	private void btnSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectAllActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_btnSelectAllActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCopy;
    private javax.swing.JButton btnPlayStop;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSelectAll;
    // End of variables declaration//GEN-END:variables

}
