/*
 * FITSDisplay.java
 *
 * Created on February 2, 2005, 4:57 PM
 */

package pt.utl.ist.elab.client.telescopio.displays;

/**
 *
 * @author Andr√© Neto - LEFT - IST
 */

import com.linkare.rec.impl.client.experiment.DataDisplayEnum;
import javax.swing.JFileChooser;

import com.linkare.rec.impl.i18n.ReCResourceBundle;

import eap.fitsbrowser.FITSFileDisplay;

public class FITSOpen extends javax.swing.JPanel implements com.linkare.rec.impl.client.experiment.ExpDataDisplay,
		com.linkare.rec.impl.client.experiment.ExpDataModelListener {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8513993408293072015L;

	/** Creates new form FITSDisplay */
	public FITSOpen() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents()//GEN-BEGIN:initComponents
	{
		final java.awt.GridBagConstraints gridBagConstraints;

		jTabbedPaneOpen = new javax.swing.JTabbedPane();
		jPanel1 = new javax.swing.JPanel();
		jButtonOpen = new javax.swing.JButton();

		setLayout(new java.awt.BorderLayout());

		jPanel1.setLayout(new java.awt.GridBagLayout());

		jButtonOpen.setText(ReCResourceBundle.findStringOrDefault("telescopio$rec.exp.telescopio.lbl.open","telescopio$rec.exp.telescopio.lbl.open"));
		jButtonOpen.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(final java.awt.event.ActionEvent evt) {
				jButtonOpenActionPerformed(evt);
			}
		});

		jPanel1.add(jButtonOpen, new java.awt.GridBagConstraints());

		jTabbedPaneOpen.addTab(ReCResourceBundle.findStringOrDefault("telescopio$rec.exp.telescopio.lbl.open","telescopio$rec.exp.telescopio.lbl.open"), jPanel1);

		add(jTabbedPaneOpen, java.awt.BorderLayout.CENTER);

	}//GEN-END:initComponents

	private void jButtonOpenActionPerformed(final java.awt.event.ActionEvent evt)// GEN-FIRST:event_jButtonOpenActionPerformed
	{// GEN-HEADEREND:event_jButtonOpenActionPerformed

		final javax.swing.JFileChooser openChooser = new javax.swing.JFileChooser();
		final int res = openChooser.showOpenDialog(null);

		if (res == JFileChooser.APPROVE_OPTION) {
			final java.io.File f = openChooser.getSelectedFile();
			final FITSFileDisplay ffd = new FITSFileDisplay();
			jTabbedPaneOpen.add(f.getName(), ffd);
			try {
				ffd.load(f);
			} catch (final java.io.IOException ioe) {
				ioe.printStackTrace();
			}
		}
	}// GEN-LAST:event_jButtonOpenActionPerformed

	private void saveToFile(final java.io.File fName, final byte[] data) {
		try {
			final java.io.FileOutputStream fos = new java.io.FileOutputStream(fName);
			fos.write(data);
			fos.close();
		} catch (final java.io.IOException ioe) {
			ioe.printStackTrace();
		}
	}

	private java.io.File showSaveDialog() {
		final javax.swing.JFileChooser saveDialog = new javax.swing.JFileChooser();
		final int option = saveDialog.showSaveDialog(null);
		if (option == JFileChooser.APPROVE_OPTION) {
			return saveDialog.getSelectedFile();
		}

		return null;
	}

	@Override
	public void dataModelEnded() {
	}

	@Override
	public void dataModelError() {
	}

	@Override
	public void dataModelStarted() {
	}

	@Override
	public void dataModelStartedNoData() {
	}

	@Override
	public void dataModelStoped() {
	}

	@Override
	public void dataModelWaiting() {
	}

	@Override
	public javax.swing.JComponent getDisplay() {
		return this;
	}

	@Override
	public javax.swing.Icon getIcon() {
		return new javax.swing.ImageIcon(getClass().getResource(
				"/pt/utl/ist/elab/client/telescopio/resources/telescopio_iconified.png"));
	}

	@Override
	public javax.swing.JMenuBar getMenuBar() {
		return null;
	}

	@Override
	public javax.swing.JToolBar getToolBar() {
		return null;
	}

	private final int dark = -1;
	private final int image = -1;
	private final int flat = -1;

	@Override
	public void newSamples(final com.linkare.rec.impl.client.experiment.NewExpDataEvent evt) {
	}

	private com.linkare.rec.impl.client.experiment.ExpDataModel model = null;

	@Override
	public void setExpDataModel(final com.linkare.rec.impl.client.experiment.ExpDataModel model) {
		if (this.model != null) {
			model.removeExpDataModelListener(this);
		}

		this.model = model;

		if (this.model != null) {
			this.model.addExpDataModelListener(this);
		}
	}

	@Override
	public String getName() {
		return ReCResourceBundle.findStringOrDefault("telescopio$rec.exp.display.telescopio.title.3", "FITS Open");
	}

	public static void main(final String args[]) {
		ReCResourceBundle.loadResourceBundle("telescopio",
				"recresource:///pt/utl/ist/elab/client/telescopio/resources/messages");
		final javax.swing.JFrame dummy = new javax.swing.JFrame();
		final FITSOpen p = new FITSOpen();
		dummy.getContentPane().add(p, java.awt.BorderLayout.CENTER);
		dummy.pack();
		dummy.show();
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButtonOpen;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JTabbedPane jTabbedPaneOpen;
	// End of variables declaration//GEN-END:variables
    @Override
    public DataDisplayEnum getDisplayType() {
        return DataDisplayEnum.FILE;
    }

}
