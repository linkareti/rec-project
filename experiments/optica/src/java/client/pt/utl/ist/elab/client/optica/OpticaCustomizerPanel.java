/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OpticaCustomizerPanel.java
 *
 * Created on 09-Nov-2010, 11:29:48
 */
package pt.utl.ist.elab.client.optica;

import java.util.Dictionary;
import java.util.Hashtable;

import javax.swing.JFormattedTextField;
import javax.swing.JLabel;

import com.linkare.rec.data.config.HardwareAcquisitionConfig;
import com.linkare.rec.data.metadata.HardwareInfo;
import com.linkare.rec.impl.client.customizer.ICustomizerListener;
import com.linkare.rec.impl.i18n.ReCResourceBundle;

/**
 *
 * @author npadriano
 */
public class OpticaCustomizerPanel extends javax.swing.JPanel implements com.linkare.rec.impl.client.customizer.ICustomizer {

    /** Generated UID */
	private static final long serialVersionUID = -6367415208236048245L;

	/** Creates new form OpticaCustomizerPanel */
    public OpticaCustomizerPanel() {
        initComponents();

        initComponentsManual();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupCalibration = new javax.swing.ButtonGroup();
        buttonGroupEnergyConservationIsPolarization = new javax.swing.ButtonGroup();
        jTabbedPaneOptica = new javax.swing.JTabbedPane();
        jPanelSnell = new javax.swing.JPanel();
        jPanelSnellAngleVariation = new javax.swing.JPanel();
        jSliderSnellAngleVarationMin = new javax.swing.JSlider();
        jSliderSnellAngleVarationMax = new javax.swing.JSlider();
        jLabelSnellAngleVaration = new javax.swing.JLabel();
        jFormattedTextFieldSnellAngleVarationMax = new javax.swing.JFormattedTextField();
        jFormattedTextFieldSnellAngleVarationMin = new javax.swing.JFormattedTextField();
        jPanelSnellDelta = new javax.swing.JPanel();
        jSliderSnellDelta = new javax.swing.JSlider();
        jLabelSnellDelta = new javax.swing.JLabel();
        jFormattedTextFieldSnellDelta = new javax.swing.JFormattedTextField();
        jPanelSnellDelay = new javax.swing.JPanel();
        jSliderSnellDelay = new javax.swing.JSlider();
        jLabelSnellDelay = new javax.swing.JLabel();
        jFormattedTextFieldSnellDelay = new javax.swing.JFormattedTextField();
        jPanelEnergyConservation = new javax.swing.JPanel();
        jPanelEnergyConservationPexiglass = new javax.swing.JPanel();
        jSliderEnergyConservationPexiglass = new javax.swing.JSlider();
        jFormattedTextFieldEnergyConservationPexiglass = new javax.swing.JFormattedTextField();
        jPanelEnergyConservationPolarization = new javax.swing.JPanel();
        jSliderEnergyConservationPolarization = new javax.swing.JSlider();
        jFormattedTextFieldEnergyConservationPolarization = new javax.swing.JFormattedTextField();
        jPanelEnergyConservationIsPolarization = new javax.swing.JPanel();
        jRadioButtonEnergyConservationIsPolarizationYes = new javax.swing.JRadioButton();
        jRadioButtonEnergyConservationIsPolarizationNo = new javax.swing.JRadioButton();
        jPanelCriticalAngle = new javax.swing.JPanel();
        jPanelCriticalAngleVariation = new javax.swing.JPanel();
        jSliderCriticalAngleVarationMin = new javax.swing.JSlider();
        jSliderCriticalAngleVarationMax = new javax.swing.JSlider();
        jLabelCriticalAngleVaration = new javax.swing.JLabel();
        jFormattedTextFieldCriticalAngleVarationMax = new javax.swing.JFormattedTextField();
        jFormattedTextFieldCriticalAngleVarationMin = new javax.swing.JFormattedTextField();
        jPanelCriticalAngleDelta = new javax.swing.JPanel();
        jSliderCriticalAngleDelta = new javax.swing.JSlider();
        jLabelCriticalAngleDelta = new javax.swing.JLabel();
        jFormattedTextFieldCriticalAngleDelta = new javax.swing.JFormattedTextField();
        jPanelBrewsterAngle = new javax.swing.JPanel();
        jPanelBrewsterAngleVariation = new javax.swing.JPanel();
        jSliderBrewsterAngleVarationMin = new javax.swing.JSlider();
        jSliderBrewsterAngleVarationMax = new javax.swing.JSlider();
        jLabelBrewsterAngleVaration = new javax.swing.JLabel();
        jFormattedTextFieldBrewsterAngleVarationMax = new javax.swing.JFormattedTextField();
        jFormattedTextFieldBrewsterAngleVarationMin = new javax.swing.JFormattedTextField();
        jPanelBrewsterAngleDelta = new javax.swing.JPanel();
        jSliderBrewsterAngleDelta = new javax.swing.JSlider();
        jLabelBrewsterAngleDelta = new javax.swing.JLabel();
        jFormattedTextFieldBrewsterAngleDelta = new javax.swing.JFormattedTextField();
        jPanelBrewsterAnglePolarization = new javax.swing.JPanel();
        jSliderBrewsterAnglePolarization = new javax.swing.JSlider();
        jFormattedTextFieldBrewsterAnglePolarization = new javax.swing.JFormattedTextField();
        jPanelCalibration = new javax.swing.JPanel();
        jPanelCalibrationButtons = new javax.swing.JPanel();
        jRadioButtonCalibrationPexiglass = new javax.swing.JRadioButton();
        jRadioButtonCalibrationSensor = new javax.swing.JRadioButton();
        jPanelControlButtons = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jButtonDefaultConfig = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(350, 490));
        setName("OpticaCustomizer"); // NOI18N
        setPreferredSize(new java.awt.Dimension(350, 490));

        jTabbedPaneOptica.setName("jTabbedPaneOptica"); // NOI18N
        jTabbedPaneOptica.setPreferredSize(new java.awt.Dimension(350, 417));

        jPanelSnell.setName("jPanelSnell"); // NOI18N
        jPanelSnell.setPreferredSize(new java.awt.Dimension(350, 372));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.linkare.rec.impl.newface.ReCApplication.class).getContext().getResourceMap(OpticaCustomizerPanel.class);
        jPanelSnellAngleVariation.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelSnellAngleVariation.border.title"))); // NOI18N
        jPanelSnellAngleVariation.setName("jPanelSnellAngleVariation"); // NOI18N
        jPanelSnellAngleVariation.setPreferredSize(new java.awt.Dimension(330, 126));

        jSliderSnellAngleVarationMin.setMajorTickSpacing(900);
        jSliderSnellAngleVarationMin.setMaximum(3600);
        jSliderSnellAngleVarationMin.setMinorTickSpacing(2);
        jSliderSnellAngleVarationMin.setPaintLabels(true);
        jSliderSnellAngleVarationMin.setSnapToTicks(true);
        jSliderSnellAngleVarationMin.setValue(0);
        jSliderSnellAngleVarationMin.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderSnellAngleVarationMin.setName("jSliderSnellAngleVarationMin"); // NOI18N
        jSliderSnellAngleVarationMin.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderSnellAngleVarationMin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderSnellAngleVarationMinStateChanged(evt);
            }
        });

        jSliderSnellAngleVarationMax.setMajorTickSpacing(900);
        jSliderSnellAngleVarationMax.setMaximum(3600);
        jSliderSnellAngleVarationMax.setMinorTickSpacing(2);
        jSliderSnellAngleVarationMax.setPaintLabels(true);
        jSliderSnellAngleVarationMax.setSnapToTicks(true);
        jSliderSnellAngleVarationMax.setValue(3600);
        jSliderSnellAngleVarationMax.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderSnellAngleVarationMax.setName("jSliderSnellAngleVarationMax"); // NOI18N
        jSliderSnellAngleVarationMax.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderSnellAngleVarationMax.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderSnellAngleVarationMaxStateChanged(evt);
            }
        });

        jLabelSnellAngleVaration.setForeground(resourceMap.getColor("jLabelSnellAngleVaration.foreground")); // NOI18N
        jLabelSnellAngleVaration.setText(resourceMap.getString("jLabelSnellAngleVaration.text")); // NOI18N
        jLabelSnellAngleVaration.setEnabled(false);
        jLabelSnellAngleVaration.setName("jLabelSnellAngleVaration"); // NOI18N

        jFormattedTextFieldSnellAngleVarationMax.setText(resourceMap.getString("jFormattedTextFieldSnellAngleVarationMax.text")); // NOI18N
        jFormattedTextFieldSnellAngleVarationMax.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldSnellAngleVarationMax.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldSnellAngleVarationMax.setName("jFormattedTextFieldSnellAngleVarationMax"); // NOI18N
        jFormattedTextFieldSnellAngleVarationMax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldSnellAngleVarationMaxFocusLost(evt);
            }
        });

        jFormattedTextFieldSnellAngleVarationMin.setText(resourceMap.getString("jFormattedTextFieldSnellAngleVarationMin.text")); // NOI18N
        jFormattedTextFieldSnellAngleVarationMin.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldSnellAngleVarationMin.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldSnellAngleVarationMin.setName("jFormattedTextFieldSnellAngleVarationMin"); // NOI18N
        jFormattedTextFieldSnellAngleVarationMin.setPreferredSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldSnellAngleVarationMin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldSnellAngleVarationMinFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelSnellAngleVariationLayout = new javax.swing.GroupLayout(jPanelSnellAngleVariation);
        jPanelSnellAngleVariation.setLayout(jPanelSnellAngleVariationLayout);
        jPanelSnellAngleVariationLayout.setHorizontalGroup(
            jPanelSnellAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSnellAngleVariationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSnellAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSnellAngleVariationLayout.createSequentialGroup()
                        .addComponent(jSliderSnellAngleVarationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldSnellAngleVarationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelSnellAngleVaration, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelSnellAngleVariationLayout.createSequentialGroup()
                        .addComponent(jSliderSnellAngleVarationMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldSnellAngleVarationMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSnellAngleVariationLayout.setVerticalGroup(
            jPanelSnellAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSnellAngleVariationLayout.createSequentialGroup()
                .addGroup(jPanelSnellAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSnellAngleVariationLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSliderSnellAngleVarationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSnellAngleVariationLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jFormattedTextFieldSnellAngleVarationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanelSnellAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelSnellAngleVariationLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSliderSnellAngleVarationMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelSnellAngleVariationLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldSnellAngleVarationMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jLabelSnellAngleVaration)
                .addGap(24, 24, 24))
        );

        jPanelSnellDelta.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelSnellDelta.border.title"))); // NOI18N
        jPanelSnellDelta.setName("jPanelSnellDelta"); // NOI18N
        jPanelSnellDelta.setPreferredSize(new java.awt.Dimension(330, 95));

        jSliderSnellDelta.setMajorTickSpacing(900);
        jSliderSnellDelta.setMaximum(3600);
        jSliderSnellDelta.setMinimum(2);
        jSliderSnellDelta.setMinorTickSpacing(2);
        jSliderSnellDelta.setPaintLabels(true);
        jSliderSnellDelta.setSnapToTicks(true);
        jSliderSnellDelta.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderSnellDelta.setName("jSliderSnellDelta"); // NOI18N
        jSliderSnellDelta.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderSnellDelta.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderSnellDeltaStateChanged(evt);
            }
        });

        jLabelSnellDelta.setForeground(resourceMap.getColor("jLabelSnellDelta.foreground")); // NOI18N
        jLabelSnellDelta.setText(resourceMap.getString("jLabelSnellDelta.text")); // NOI18N
        jLabelSnellDelta.setEnabled(false);
        jLabelSnellDelta.setName("jLabelSnellDelta"); // NOI18N

        jFormattedTextFieldSnellDelta.setText(resourceMap.getString("jFormattedTextFieldSnellDelta.text")); // NOI18N
        jFormattedTextFieldSnellDelta.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldSnellDelta.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldSnellDelta.setName("jFormattedTextFieldSnellDelta"); // NOI18N
        jFormattedTextFieldSnellDelta.setPreferredSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldSnellDelta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldSnellDeltaFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelSnellDeltaLayout = new javax.swing.GroupLayout(jPanelSnellDelta);
        jPanelSnellDelta.setLayout(jPanelSnellDeltaLayout);
        jPanelSnellDeltaLayout.setHorizontalGroup(
            jPanelSnellDeltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSnellDeltaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSnellDeltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSnellDeltaLayout.createSequentialGroup()
                        .addComponent(jSliderSnellDelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldSnellDelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelSnellDelta, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSnellDeltaLayout.setVerticalGroup(
            jPanelSnellDeltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSnellDeltaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSnellDeltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSliderSnellDelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldSnellDelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelSnellDelta)
                .addContainerGap())
        );

        jPanelSnellDelay.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelSnellDelay.border.title"))); // NOI18N
        jPanelSnellDelay.setName("jPanelSnellDelay"); // NOI18N
        jPanelSnellDelay.setPreferredSize(new java.awt.Dimension(330, 95));

        jSliderSnellDelay.setMajorTickSpacing(2);
        jSliderSnellDelay.setMaximum(5);
        jSliderSnellDelay.setMinimum(1);
        jSliderSnellDelay.setMinorTickSpacing(1);
        jSliderSnellDelay.setPaintLabels(true);
        jSliderSnellDelay.setSnapToTicks(true);
        jSliderSnellDelay.setValue(1);
        jSliderSnellDelay.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderSnellDelay.setName("jSliderSnellDelay"); // NOI18N
        jSliderSnellDelay.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderSnellDelay.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderSnellDelayStateChanged(evt);
            }
        });

        jLabelSnellDelay.setForeground(resourceMap.getColor("jLabelSnellDelay.foreground")); // NOI18N
        jLabelSnellDelay.setText(resourceMap.getString("jLabelSnellDelay.text")); // NOI18N
        jLabelSnellDelay.setEnabled(false);
        jLabelSnellDelay.setName("jLabelSnellDelay"); // NOI18N

        jFormattedTextFieldSnellDelay.setText(resourceMap.getString("jFormattedTextFieldSnellDelay.text")); // NOI18N
        jFormattedTextFieldSnellDelay.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldSnellDelay.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldSnellDelay.setName("jFormattedTextFieldSnellDelay"); // NOI18N
        jFormattedTextFieldSnellDelay.setPreferredSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldSnellDelay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldSnellDelayFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelSnellDelayLayout = new javax.swing.GroupLayout(jPanelSnellDelay);
        jPanelSnellDelay.setLayout(jPanelSnellDelayLayout);
        jPanelSnellDelayLayout.setHorizontalGroup(
            jPanelSnellDelayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSnellDelayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSnellDelayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSnellDelayLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jSliderSnellDelay, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFormattedTextFieldSnellDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelSnellDelay, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSnellDelayLayout.setVerticalGroup(
            jPanelSnellDelayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSnellDelayLayout.createSequentialGroup()
                .addGroup(jPanelSnellDelayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSnellDelayLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jFormattedTextFieldSnellDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSnellDelayLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSliderSnellDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelSnellDelay)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelSnellLayout = new javax.swing.GroupLayout(jPanelSnell);
        jPanelSnell.setLayout(jPanelSnellLayout);
        jPanelSnellLayout.setHorizontalGroup(
            jPanelSnellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSnellLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSnellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelSnellAngleVariation, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelSnellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanelSnellDelta, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanelSnellDelay, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelSnellLayout.setVerticalGroup(
            jPanelSnellLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSnellLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelSnellAngleVariation, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelSnellDelta, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelSnellDelay, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneOptica.addTab(resourceMap.getString("jPanelSnell.TabConstraints.tabTitle"), jPanelSnell); // NOI18N

        jPanelEnergyConservation.setName("jPanelEnergyConservation"); // NOI18N

        jPanelEnergyConservationPexiglass.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelEnergyConservationPexiglass.border.title"))); // NOI18N
        jPanelEnergyConservationPexiglass.setName("jPanelEnergyConservationPexiglass"); // NOI18N

        jSliderEnergyConservationPexiglass.setMajorTickSpacing(900);
        jSliderEnergyConservationPexiglass.setMaximum(3600);
        jSliderEnergyConservationPexiglass.setMinorTickSpacing(2);
        jSliderEnergyConservationPexiglass.setPaintLabels(true);
        jSliderEnergyConservationPexiglass.setSnapToTicks(true);
        jSliderEnergyConservationPexiglass.setValue(0);
        jSliderEnergyConservationPexiglass.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderEnergyConservationPexiglass.setName("jSliderEnergyConservationPexiglass"); // NOI18N
        jSliderEnergyConservationPexiglass.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderEnergyConservationPexiglass.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderEnergyConservationPexiglassStateChanged(evt);
            }
        });

        jFormattedTextFieldEnergyConservationPexiglass.setText(resourceMap.getString("jFormattedTextFieldEnergyConservationPexiglass.text")); // NOI18N
        jFormattedTextFieldEnergyConservationPexiglass.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldEnergyConservationPexiglass.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldEnergyConservationPexiglass.setName("jFormattedTextFieldEnergyConservationPexiglass"); // NOI18N
        jFormattedTextFieldEnergyConservationPexiglass.setPreferredSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldEnergyConservationPexiglass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldEnergyConservationPexiglassFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelEnergyConservationPexiglassLayout = new javax.swing.GroupLayout(jPanelEnergyConservationPexiglass);
        jPanelEnergyConservationPexiglass.setLayout(jPanelEnergyConservationPexiglassLayout);
        jPanelEnergyConservationPexiglassLayout.setHorizontalGroup(
            jPanelEnergyConservationPexiglassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnergyConservationPexiglassLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSliderEnergyConservationPexiglass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextFieldEnergyConservationPexiglass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelEnergyConservationPexiglassLayout.setVerticalGroup(
            jPanelEnergyConservationPexiglassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnergyConservationPexiglassLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSliderEnergyConservationPexiglass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEnergyConservationPexiglassLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jFormattedTextFieldEnergyConservationPexiglass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jPanelEnergyConservationPolarization.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelEnergyConservationPolarization.border.title"))); // NOI18N
        jPanelEnergyConservationPolarization.setName("jPanelEnergyConservationPolarization"); // NOI18N

        jSliderEnergyConservationPolarization.setMajorTickSpacing(225);
        jSliderEnergyConservationPolarization.setMaximum(900);
        jSliderEnergyConservationPolarization.setMinorTickSpacing(2);
        jSliderEnergyConservationPolarization.setPaintLabels(true);
        jSliderEnergyConservationPolarization.setSnapToTicks(true);
        jSliderEnergyConservationPolarization.setValue(0);
        jSliderEnergyConservationPolarization.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderEnergyConservationPolarization.setName("jSliderEnergyConservationPolarization"); // NOI18N
        jSliderEnergyConservationPolarization.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderEnergyConservationPolarization.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderEnergyConservationPolarizationStateChanged(evt);
            }
        });

        jFormattedTextFieldEnergyConservationPolarization.setText(resourceMap.getString("jFormattedTextFieldEnergyConservationPolarization.text")); // NOI18N
        jFormattedTextFieldEnergyConservationPolarization.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldEnergyConservationPolarization.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldEnergyConservationPolarization.setName("jFormattedTextFieldEnergyConservationPolarization"); // NOI18N
        jFormattedTextFieldEnergyConservationPolarization.setPreferredSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldEnergyConservationPolarization.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldEnergyConservationPolarizationFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelEnergyConservationPolarizationLayout = new javax.swing.GroupLayout(jPanelEnergyConservationPolarization);
        jPanelEnergyConservationPolarization.setLayout(jPanelEnergyConservationPolarizationLayout);
        jPanelEnergyConservationPolarizationLayout.setHorizontalGroup(
            jPanelEnergyConservationPolarizationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnergyConservationPolarizationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSliderEnergyConservationPolarization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextFieldEnergyConservationPolarization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelEnergyConservationPolarizationLayout.setVerticalGroup(
            jPanelEnergyConservationPolarizationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnergyConservationPolarizationLayout.createSequentialGroup()
                .addGroup(jPanelEnergyConservationPolarizationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEnergyConservationPolarizationLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSliderEnergyConservationPolarization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelEnergyConservationPolarizationLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jFormattedTextFieldEnergyConservationPolarization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelEnergyConservationIsPolarization.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelEnergyConservationIsPolarization.border.title"))); // NOI18N
        jPanelEnergyConservationIsPolarization.setName("jPanelEnergyConservationIsPolarization"); // NOI18N

        buttonGroupEnergyConservationIsPolarization.add(jRadioButtonEnergyConservationIsPolarizationYes);
        jRadioButtonEnergyConservationIsPolarizationYes.setSelected(true);
        jRadioButtonEnergyConservationIsPolarizationYes.setText(resourceMap.getString("jRadioButtonEnergyConservationIsPolarizationYes.text")); // NOI18N
        jRadioButtonEnergyConservationIsPolarizationYes.setName("jRadioButtonEnergyConservationIsPolarizationYes"); // NOI18N

        buttonGroupEnergyConservationIsPolarization.add(jRadioButtonEnergyConservationIsPolarizationNo);
        jRadioButtonEnergyConservationIsPolarizationNo.setText(resourceMap.getString("jRadioButtonEnergyConservationIsPolarizationNo.text")); // NOI18N
        jRadioButtonEnergyConservationIsPolarizationNo.setName("jRadioButtonEnergyConservationIsPolarizationNo"); // NOI18N

        javax.swing.GroupLayout jPanelEnergyConservationIsPolarizationLayout = new javax.swing.GroupLayout(jPanelEnergyConservationIsPolarization);
        jPanelEnergyConservationIsPolarization.setLayout(jPanelEnergyConservationIsPolarizationLayout);
        jPanelEnergyConservationIsPolarizationLayout.setHorizontalGroup(
            jPanelEnergyConservationIsPolarizationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnergyConservationIsPolarizationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEnergyConservationIsPolarizationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonEnergyConservationIsPolarizationYes)
                    .addComponent(jRadioButtonEnergyConservationIsPolarizationNo))
                .addContainerGap(263, Short.MAX_VALUE))
        );
        jPanelEnergyConservationIsPolarizationLayout.setVerticalGroup(
            jPanelEnergyConservationIsPolarizationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnergyConservationIsPolarizationLayout.createSequentialGroup()
                .addComponent(jRadioButtonEnergyConservationIsPolarizationYes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonEnergyConservationIsPolarizationNo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelEnergyConservationLayout = new javax.swing.GroupLayout(jPanelEnergyConservation);
        jPanelEnergyConservation.setLayout(jPanelEnergyConservationLayout);
        jPanelEnergyConservationLayout.setHorizontalGroup(
            jPanelEnergyConservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEnergyConservationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelEnergyConservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelEnergyConservationIsPolarization, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelEnergyConservationPexiglass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelEnergyConservationPolarization, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelEnergyConservationLayout.setVerticalGroup(
            jPanelEnergyConservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEnergyConservationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelEnergyConservationPexiglass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelEnergyConservationPolarization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelEnergyConservationIsPolarization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );

        jTabbedPaneOptica.addTab(resourceMap.getString("jPanelEnergyConservation.TabConstraints.tabTitle"), jPanelEnergyConservation); // NOI18N

        jPanelCriticalAngle.setName("jPanelCriticalAngle"); // NOI18N

        jPanelCriticalAngleVariation.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelCriticalAngleVariation.border.title"))); // NOI18N
        jPanelCriticalAngleVariation.setName("jPanelCriticalAngleVariation"); // NOI18N
        jPanelCriticalAngleVariation.setPreferredSize(new java.awt.Dimension(330, 126));

        jSliderCriticalAngleVarationMin.setMajorTickSpacing(900);
        jSliderCriticalAngleVarationMin.setMaximum(3600);
        jSliderCriticalAngleVarationMin.setMinorTickSpacing(2);
        jSliderCriticalAngleVarationMin.setPaintLabels(true);
        jSliderCriticalAngleVarationMin.setSnapToTicks(true);
        jSliderCriticalAngleVarationMin.setValue(0);
        jSliderCriticalAngleVarationMin.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderCriticalAngleVarationMin.setName("jSliderCriticalAngleVarationMin"); // NOI18N
        jSliderCriticalAngleVarationMin.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderCriticalAngleVarationMin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderCriticalAngleVarationMinStateChanged(evt);
            }
        });

        jSliderCriticalAngleVarationMax.setMajorTickSpacing(900);
        jSliderCriticalAngleVarationMax.setMaximum(3600);
        jSliderCriticalAngleVarationMax.setMinorTickSpacing(2);
        jSliderCriticalAngleVarationMax.setPaintLabels(true);
        jSliderCriticalAngleVarationMax.setSnapToTicks(true);
        jSliderCriticalAngleVarationMax.setValue(3600);
        jSliderCriticalAngleVarationMax.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderCriticalAngleVarationMax.setName("jSliderCriticalAngleVarationMax"); // NOI18N
        jSliderCriticalAngleVarationMax.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderCriticalAngleVarationMax.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderCriticalAngleVarationMaxStateChanged(evt);
            }
        });

        jLabelCriticalAngleVaration.setForeground(resourceMap.getColor("jLabelCriticalAngleVaration.foreground")); // NOI18N
        jLabelCriticalAngleVaration.setText(resourceMap.getString("jLabelCriticalAngleVaration.text")); // NOI18N
        jLabelCriticalAngleVaration.setEnabled(false);
        jLabelCriticalAngleVaration.setName("jLabelCriticalAngleVaration"); // NOI18N

        jFormattedTextFieldCriticalAngleVarationMax.setText(resourceMap.getString("jFormattedTextFieldCriticalAngleVarationMax.text")); // NOI18N
        jFormattedTextFieldCriticalAngleVarationMax.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldCriticalAngleVarationMax.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldCriticalAngleVarationMax.setName("jFormattedTextFieldCriticalAngleVarationMax"); // NOI18N
        jFormattedTextFieldCriticalAngleVarationMax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldCriticalAngleVarationMaxFocusLost(evt);
            }
        });

        jFormattedTextFieldCriticalAngleVarationMin.setText(resourceMap.getString("jFormattedTextFieldCriticalAngleVarationMin.text")); // NOI18N
        jFormattedTextFieldCriticalAngleVarationMin.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldCriticalAngleVarationMin.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldCriticalAngleVarationMin.setName("jFormattedTextFieldCriticalAngleVarationMin"); // NOI18N
        jFormattedTextFieldCriticalAngleVarationMin.setPreferredSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldCriticalAngleVarationMin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldCriticalAngleVarationMinFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelCriticalAngleVariationLayout = new javax.swing.GroupLayout(jPanelCriticalAngleVariation);
        jPanelCriticalAngleVariation.setLayout(jPanelCriticalAngleVariationLayout);
        jPanelCriticalAngleVariationLayout.setHorizontalGroup(
            jPanelCriticalAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCriticalAngleVariationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCriticalAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCriticalAngleVariationLayout.createSequentialGroup()
                        .addComponent(jSliderCriticalAngleVarationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldCriticalAngleVarationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelCriticalAngleVaration, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelCriticalAngleVariationLayout.createSequentialGroup()
                        .addComponent(jSliderCriticalAngleVarationMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldCriticalAngleVarationMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelCriticalAngleVariationLayout.setVerticalGroup(
            jPanelCriticalAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCriticalAngleVariationLayout.createSequentialGroup()
                .addGroup(jPanelCriticalAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCriticalAngleVariationLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSliderCriticalAngleVarationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCriticalAngleVariationLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jFormattedTextFieldCriticalAngleVarationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanelCriticalAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelCriticalAngleVariationLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSliderCriticalAngleVarationMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelCriticalAngleVariationLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldCriticalAngleVarationMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jLabelCriticalAngleVaration)
                .addGap(24, 24, 24))
        );

        jPanelCriticalAngleDelta.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelCriticalAngleDelta.border.title"))); // NOI18N
        jPanelCriticalAngleDelta.setName("jPanelCriticalAngleDelta"); // NOI18N
        jPanelCriticalAngleDelta.setPreferredSize(new java.awt.Dimension(330, 95));

        jSliderCriticalAngleDelta.setMajorTickSpacing(900);
        jSliderCriticalAngleDelta.setMaximum(3600);
        jSliderCriticalAngleDelta.setMinimum(2);
        jSliderCriticalAngleDelta.setMinorTickSpacing(2);
        jSliderCriticalAngleDelta.setPaintLabels(true);
        jSliderCriticalAngleDelta.setSnapToTicks(true);
        jSliderCriticalAngleDelta.setValue(2);
        jSliderCriticalAngleDelta.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderCriticalAngleDelta.setName("jSliderCriticalAngleDelta"); // NOI18N
        jSliderCriticalAngleDelta.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderCriticalAngleDelta.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderCriticalAngleDeltaStateChanged(evt);
            }
        });

        jLabelCriticalAngleDelta.setForeground(resourceMap.getColor("jLabelCriticalAngleDelta.foreground")); // NOI18N
        jLabelCriticalAngleDelta.setText(resourceMap.getString("jLabelCriticalAngleDelta.text")); // NOI18N
        jLabelCriticalAngleDelta.setEnabled(false);
        jLabelCriticalAngleDelta.setName("jLabelCriticalAngleDelta"); // NOI18N

        jFormattedTextFieldCriticalAngleDelta.setText(resourceMap.getString("jFormattedTextFieldCriticalAngleDelta.text")); // NOI18N
        jFormattedTextFieldCriticalAngleDelta.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldCriticalAngleDelta.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldCriticalAngleDelta.setName("jFormattedTextFieldCriticalAngleDelta"); // NOI18N
        jFormattedTextFieldCriticalAngleDelta.setPreferredSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldCriticalAngleDelta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldCriticalAngleDeltaFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelCriticalAngleDeltaLayout = new javax.swing.GroupLayout(jPanelCriticalAngleDelta);
        jPanelCriticalAngleDelta.setLayout(jPanelCriticalAngleDeltaLayout);
        jPanelCriticalAngleDeltaLayout.setHorizontalGroup(
            jPanelCriticalAngleDeltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCriticalAngleDeltaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCriticalAngleDeltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCriticalAngleDeltaLayout.createSequentialGroup()
                        .addComponent(jSliderCriticalAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldCriticalAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelCriticalAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelCriticalAngleDeltaLayout.setVerticalGroup(
            jPanelCriticalAngleDeltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCriticalAngleDeltaLayout.createSequentialGroup()
                .addGroup(jPanelCriticalAngleDeltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCriticalAngleDeltaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSliderCriticalAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCriticalAngleDeltaLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jFormattedTextFieldCriticalAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelCriticalAngleDelta)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelCriticalAngleLayout = new javax.swing.GroupLayout(jPanelCriticalAngle);
        jPanelCriticalAngle.setLayout(jPanelCriticalAngleLayout);
        jPanelCriticalAngleLayout.setHorizontalGroup(
            jPanelCriticalAngleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCriticalAngleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCriticalAngleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelCriticalAngleVariation, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelCriticalAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelCriticalAngleLayout.setVerticalGroup(
            jPanelCriticalAngleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCriticalAngleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCriticalAngleVariation, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelCriticalAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );

        jTabbedPaneOptica.addTab(resourceMap.getString("jPanelCriticalAngle.TabConstraints.tabTitle"), jPanelCriticalAngle); // NOI18N

        jPanelBrewsterAngle.setName("jPanelBrewsterAngle"); // NOI18N

        jPanelBrewsterAngleVariation.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelBrewsterAngleVariation.border.title"))); // NOI18N
        jPanelBrewsterAngleVariation.setName("jPanelBrewsterAngleVariation"); // NOI18N
        jPanelBrewsterAngleVariation.setPreferredSize(new java.awt.Dimension(330, 126));

        jSliderBrewsterAngleVarationMin.setMajorTickSpacing(900);
        jSliderBrewsterAngleVarationMin.setMaximum(3600);
        jSliderBrewsterAngleVarationMin.setMinorTickSpacing(2);
        jSliderBrewsterAngleVarationMin.setPaintLabels(true);
        jSliderBrewsterAngleVarationMin.setSnapToTicks(true);
        jSliderBrewsterAngleVarationMin.setValue(0);
        jSliderBrewsterAngleVarationMin.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderBrewsterAngleVarationMin.setName("jSliderBrewsterAngleVarationMin"); // NOI18N
        jSliderBrewsterAngleVarationMin.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderBrewsterAngleVarationMin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderBrewsterAngleVarationMinStateChanged(evt);
            }
        });

        jSliderBrewsterAngleVarationMax.setMajorTickSpacing(900);
        jSliderBrewsterAngleVarationMax.setMaximum(3600);
        jSliderBrewsterAngleVarationMax.setMinorTickSpacing(2);
        jSliderBrewsterAngleVarationMax.setPaintLabels(true);
        jSliderBrewsterAngleVarationMax.setSnapToTicks(true);
        jSliderBrewsterAngleVarationMax.setValue(3600);
        jSliderBrewsterAngleVarationMax.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderBrewsterAngleVarationMax.setName("jSliderBrewsterAngleVarationMax"); // NOI18N
        jSliderBrewsterAngleVarationMax.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderBrewsterAngleVarationMax.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderBrewsterAngleVarationMaxStateChanged(evt);
            }
        });

        jLabelBrewsterAngleVaration.setForeground(resourceMap.getColor("jLabelBrewsterAngleVaration.foreground")); // NOI18N
        jLabelBrewsterAngleVaration.setText(resourceMap.getString("jLabelBrewsterAngleVaration.text")); // NOI18N
        jLabelBrewsterAngleVaration.setEnabled(false);
        jLabelBrewsterAngleVaration.setName("jLabelBrewsterAngleVaration"); // NOI18N

        jFormattedTextFieldBrewsterAngleVarationMax.setText(resourceMap.getString("jFormattedTextFieldBrewsterAngleVarationMax.text")); // NOI18N
        jFormattedTextFieldBrewsterAngleVarationMax.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldBrewsterAngleVarationMax.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldBrewsterAngleVarationMax.setName("jFormattedTextFieldBrewsterAngleVarationMax"); // NOI18N
        jFormattedTextFieldBrewsterAngleVarationMax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldBrewsterAngleVarationMaxFocusLost(evt);
            }
        });

        jFormattedTextFieldBrewsterAngleVarationMin.setText(resourceMap.getString("jFormattedTextFieldBrewsterAngleVarationMin.text")); // NOI18N
        jFormattedTextFieldBrewsterAngleVarationMin.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldBrewsterAngleVarationMin.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldBrewsterAngleVarationMin.setName("jFormattedTextFieldBrewsterAngleVarationMin"); // NOI18N
        jFormattedTextFieldBrewsterAngleVarationMin.setPreferredSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldBrewsterAngleVarationMin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldBrewsterAngleVarationMinFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelBrewsterAngleVariationLayout = new javax.swing.GroupLayout(jPanelBrewsterAngleVariation);
        jPanelBrewsterAngleVariation.setLayout(jPanelBrewsterAngleVariationLayout);
        jPanelBrewsterAngleVariationLayout.setHorizontalGroup(
            jPanelBrewsterAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBrewsterAngleVariationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBrewsterAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBrewsterAngleVariationLayout.createSequentialGroup()
                        .addComponent(jSliderBrewsterAngleVarationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldBrewsterAngleVarationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelBrewsterAngleVaration, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelBrewsterAngleVariationLayout.createSequentialGroup()
                        .addComponent(jSliderBrewsterAngleVarationMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldBrewsterAngleVarationMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBrewsterAngleVariationLayout.setVerticalGroup(
            jPanelBrewsterAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBrewsterAngleVariationLayout.createSequentialGroup()
                .addGroup(jPanelBrewsterAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBrewsterAngleVariationLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSliderBrewsterAngleVarationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelBrewsterAngleVariationLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jFormattedTextFieldBrewsterAngleVarationMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanelBrewsterAngleVariationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelBrewsterAngleVariationLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSliderBrewsterAngleVarationMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelBrewsterAngleVariationLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldBrewsterAngleVarationMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jLabelBrewsterAngleVaration)
                .addGap(3, 3, 3))
        );

        jPanelBrewsterAngleDelta.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelBrewsterAngleDelta.border.title"))); // NOI18N
        jPanelBrewsterAngleDelta.setName("jPanelBrewsterAngleDelta"); // NOI18N
        jPanelBrewsterAngleDelta.setPreferredSize(new java.awt.Dimension(330, 95));

        jSliderBrewsterAngleDelta.setMajorTickSpacing(900);
        jSliderBrewsterAngleDelta.setMaximum(3600);
        jSliderBrewsterAngleDelta.setMinimum(2);
        jSliderBrewsterAngleDelta.setMinorTickSpacing(2);
        jSliderBrewsterAngleDelta.setPaintLabels(true);
        jSliderBrewsterAngleDelta.setSnapToTicks(true);
        jSliderBrewsterAngleDelta.setValue(2);
        jSliderBrewsterAngleDelta.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderBrewsterAngleDelta.setName("jSliderBrewsterAngleDelta"); // NOI18N
        jSliderBrewsterAngleDelta.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderBrewsterAngleDelta.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderBrewsterAngleDeltaStateChanged(evt);
            }
        });

        jLabelBrewsterAngleDelta.setForeground(resourceMap.getColor("jLabelBrewsterAngleDelta.foreground")); // NOI18N
        jLabelBrewsterAngleDelta.setText(resourceMap.getString("jLabelBrewsterAngleDelta.text")); // NOI18N
        jLabelBrewsterAngleDelta.setEnabled(false);
        jLabelBrewsterAngleDelta.setName("jLabelBrewsterAngleDelta"); // NOI18N

        jFormattedTextFieldBrewsterAngleDelta.setText(resourceMap.getString("jFormattedTextFieldBrewsterAngleDelta.text")); // NOI18N
        jFormattedTextFieldBrewsterAngleDelta.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldBrewsterAngleDelta.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldBrewsterAngleDelta.setName("jFormattedTextFieldBrewsterAngleDelta"); // NOI18N
        jFormattedTextFieldBrewsterAngleDelta.setPreferredSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldBrewsterAngleDelta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldBrewsterAngleDeltaFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelBrewsterAngleDeltaLayout = new javax.swing.GroupLayout(jPanelBrewsterAngleDelta);
        jPanelBrewsterAngleDelta.setLayout(jPanelBrewsterAngleDeltaLayout);
        jPanelBrewsterAngleDeltaLayout.setHorizontalGroup(
            jPanelBrewsterAngleDeltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBrewsterAngleDeltaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBrewsterAngleDeltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBrewsterAngleDeltaLayout.createSequentialGroup()
                        .addComponent(jSliderBrewsterAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldBrewsterAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelBrewsterAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBrewsterAngleDeltaLayout.setVerticalGroup(
            jPanelBrewsterAngleDeltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBrewsterAngleDeltaLayout.createSequentialGroup()
                .addGroup(jPanelBrewsterAngleDeltaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBrewsterAngleDeltaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSliderBrewsterAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelBrewsterAngleDeltaLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jFormattedTextFieldBrewsterAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelBrewsterAngleDelta)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelBrewsterAnglePolarization.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelBrewsterAnglePolarization.border.title"))); // NOI18N
        jPanelBrewsterAnglePolarization.setName("jPanelBrewsterAnglePolarization"); // NOI18N

        jSliderBrewsterAnglePolarization.setMajorTickSpacing(225);
        jSliderBrewsterAnglePolarization.setMaximum(900);
        jSliderBrewsterAnglePolarization.setMinorTickSpacing(2);
        jSliderBrewsterAnglePolarization.setPaintLabels(true);
        jSliderBrewsterAnglePolarization.setSnapToTicks(true);
        jSliderBrewsterAnglePolarization.setValue(0);
        jSliderBrewsterAnglePolarization.setMinimumSize(new java.awt.Dimension(250, 16));
        jSliderBrewsterAnglePolarization.setName("jSliderBrewsterAnglePolarization"); // NOI18N
        jSliderBrewsterAnglePolarization.setPreferredSize(new java.awt.Dimension(250, 42));
        jSliderBrewsterAnglePolarization.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderBrewsterAnglePolarizationStateChanged(evt);
            }
        });

        jFormattedTextFieldBrewsterAnglePolarization.setText(resourceMap.getString("jFormattedTextFieldBrewsterAnglePolarization.text")); // NOI18N
        jFormattedTextFieldBrewsterAnglePolarization.setMaximumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldBrewsterAnglePolarization.setMinimumSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldBrewsterAnglePolarization.setName("jFormattedTextFieldBrewsterAnglePolarization"); // NOI18N
        jFormattedTextFieldBrewsterAnglePolarization.setPreferredSize(new java.awt.Dimension(40, 19));
        jFormattedTextFieldBrewsterAnglePolarization.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldBrewsterAnglePolarizationFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelBrewsterAnglePolarizationLayout = new javax.swing.GroupLayout(jPanelBrewsterAnglePolarization);
        jPanelBrewsterAnglePolarization.setLayout(jPanelBrewsterAnglePolarizationLayout);
        jPanelBrewsterAnglePolarizationLayout.setHorizontalGroup(
            jPanelBrewsterAnglePolarizationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBrewsterAnglePolarizationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSliderBrewsterAnglePolarization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextFieldBrewsterAnglePolarization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBrewsterAnglePolarizationLayout.setVerticalGroup(
            jPanelBrewsterAnglePolarizationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBrewsterAnglePolarizationLayout.createSequentialGroup()
                .addGroup(jPanelBrewsterAnglePolarizationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBrewsterAnglePolarizationLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSliderBrewsterAnglePolarization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelBrewsterAnglePolarizationLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jFormattedTextFieldBrewsterAnglePolarization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelBrewsterAngleLayout = new javax.swing.GroupLayout(jPanelBrewsterAngle);
        jPanelBrewsterAngle.setLayout(jPanelBrewsterAngleLayout);
        jPanelBrewsterAngleLayout.setHorizontalGroup(
            jPanelBrewsterAngleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBrewsterAngleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBrewsterAngleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelBrewsterAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelBrewsterAngleVariation, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelBrewsterAnglePolarization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelBrewsterAngleLayout.setVerticalGroup(
            jPanelBrewsterAngleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBrewsterAngleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelBrewsterAngleVariation, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBrewsterAngleDelta, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBrewsterAnglePolarization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabbedPaneOptica.addTab(resourceMap.getString("jPanelBrewsterAngle.TabConstraints.tabTitle"), jPanelBrewsterAngle); // NOI18N

        jPanelCalibration.setName("jPanelCalibration"); // NOI18N

        jPanelCalibrationButtons.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelCalibrationButtons.border.title"))); // NOI18N
        jPanelCalibrationButtons.setName("jPanelCalibrationButtons"); // NOI18N
        jPanelCalibrationButtons.setPreferredSize(new java.awt.Dimension(330, 83));

        buttonGroupCalibration.add(jRadioButtonCalibrationPexiglass);
        jRadioButtonCalibrationPexiglass.setSelected(true);
        jRadioButtonCalibrationPexiglass.setText(resourceMap.getString("jRadioButtonCalibrationPexiglass.text")); // NOI18N
        jRadioButtonCalibrationPexiglass.setName("jRadioButtonCalibrationPexiglass"); // NOI18N

        buttonGroupCalibration.add(jRadioButtonCalibrationSensor);
        jRadioButtonCalibrationSensor.setText(resourceMap.getString("jRadioButtonCalibrationSensor.text")); // NOI18N
        jRadioButtonCalibrationSensor.setName("jRadioButtonCalibrationSensor"); // NOI18N

        javax.swing.GroupLayout jPanelCalibrationButtonsLayout = new javax.swing.GroupLayout(jPanelCalibrationButtons);
        jPanelCalibrationButtons.setLayout(jPanelCalibrationButtonsLayout);
        jPanelCalibrationButtonsLayout.setHorizontalGroup(
            jPanelCalibrationButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCalibrationButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCalibrationButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonCalibrationPexiglass)
                    .addComponent(jRadioButtonCalibrationSensor))
                .addContainerGap(229, Short.MAX_VALUE))
        );
        jPanelCalibrationButtonsLayout.setVerticalGroup(
            jPanelCalibrationButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCalibrationButtonsLayout.createSequentialGroup()
                .addComponent(jRadioButtonCalibrationPexiglass)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonCalibrationSensor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelCalibrationLayout = new javax.swing.GroupLayout(jPanelCalibration);
        jPanelCalibration.setLayout(jPanelCalibrationLayout);
        jPanelCalibrationLayout.setHorizontalGroup(
            jPanelCalibrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCalibrationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCalibrationButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelCalibrationLayout.setVerticalGroup(
            jPanelCalibrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCalibrationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCalibrationButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(308, Short.MAX_VALUE))
        );

        jTabbedPaneOptica.addTab(resourceMap.getString("jPanelCalibration.TabConstraints.tabTitle"), jPanelCalibration); // NOI18N

        jPanelControlButtons.setName("jPanelControlButtons"); // NOI18N
        jPanelControlButtons.setPreferredSize(new java.awt.Dimension(350, 37));

        jButtonOk.setLabel(resourceMap.getString("Ok.label")); // NOI18N
        jButtonOk.setName("Ok"); // NOI18N
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jButtonCancel.setLabel(resourceMap.getString("Cancel.label")); // NOI18N
        jButtonCancel.setName("Cancel"); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonDefaultConfig.setLabel(resourceMap.getString("DefaultConfig.label")); // NOI18N
        jButtonDefaultConfig.setName("DefaultConfig"); // NOI18N
        jButtonDefaultConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefaultConfigActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelControlButtonsLayout = new javax.swing.GroupLayout(jPanelControlButtons);
        jPanelControlButtons.setLayout(jPanelControlButtonsLayout);
        jPanelControlButtonsLayout.setHorizontalGroup(
            jPanelControlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlButtonsLayout.createSequentialGroup()
                .addComponent(jButtonOk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jButtonDefaultConfig))
        );
        jPanelControlButtonsLayout.setVerticalGroup(
            jPanelControlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlButtonsLayout.createSequentialGroup()
                .addGroup(jPanelControlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOk)
                    .addComponent(jButtonCancel)
                    .addComponent(jButtonDefaultConfig))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonOk.getAccessibleContext().setAccessibleName(resourceMap.getString("Ok.AccessibleContext.accessibleName")); // NOI18N
        jButtonCancel.getAccessibleContext().setAccessibleName(resourceMap.getString("jButtonCancel.AccessibleContext.accessibleName")); // NOI18N
        jButtonDefaultConfig.getAccessibleContext().setAccessibleName(resourceMap.getString("jButtonDefaultConfig.AccessibleContext.accessibleName")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPaneOptica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelControlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPaneOptica, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelControlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        fireICustomizerListenerCanceled();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonDefaultConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefaultConfigActionPerformed
        // tab Snell
        jSliderSnellAngleVarationMin.setValue(0);
        jFormattedTextFieldSnellAngleVarationMin.setText("0.0");
        jSliderSnellAngleVarationMax.setValue(360);
        jFormattedTextFieldSnellAngleVarationMax.setText("360.0");
        jLabelSnellAngleVaration.setEnabled(false);
        jSliderSnellDelta.setValue(2);
        jFormattedTextFieldSnellDelta.setText("0.2");
        jLabelSnellDelta.setEnabled(false);
        jSliderSnellDelay.setValue(1);
        jFormattedTextFieldSnellDelay.setText("1");
        jLabelSnellDelay.setEnabled(false);

        // tab Energy conservation
        jSliderEnergyConservationPexiglass.setValue(0);
        jFormattedTextFieldEnergyConservationPexiglass.setText("0.0");
        jSliderEnergyConservationPolarization.setValue(0);
        jFormattedTextFieldEnergyConservationPolarization.setText("0.0");
        jRadioButtonEnergyConservationIsPolarizationYes.setSelected(true);

        // tab Critical angle
        jSliderCriticalAngleVarationMin.setValue(0);
        jFormattedTextFieldCriticalAngleVarationMin.setText("0.0");
        jSliderCriticalAngleVarationMax.setValue(360);
        jFormattedTextFieldCriticalAngleVarationMax.setText("360.0");
        jLabelCriticalAngleVaration.setEnabled(false);
        jSliderCriticalAngleDelta.setValue(2);
        jFormattedTextFieldCriticalAngleDelta.setText("0.2");
        jLabelCriticalAngleDelta.setEnabled(false);

        // tab Brewster
        jSliderBrewsterAngleVarationMin.setValue(0);
        jFormattedTextFieldBrewsterAngleVarationMin.setText("0.0");
        jSliderBrewsterAngleVarationMax.setValue(360);
        jFormattedTextFieldBrewsterAngleVarationMax.setText("360.0");
        jLabelBrewsterAngleVaration.setEnabled(false);
        jSliderBrewsterAngleDelta.setValue(2);
        jFormattedTextFieldBrewsterAngleDelta.setText("0.2");
        jLabelBrewsterAngleDelta.setEnabled(false);
        jSliderBrewsterAnglePolarization.setValue(0);
        jFormattedTextFieldBrewsterAnglePolarization.setText("0.0");

        // tab Calibration
        jRadioButtonCalibrationPexiglass.setSelected(true);

    }//GEN-LAST:event_jButtonDefaultConfigActionPerformed

    private void jFormattedTextFieldSnellAngleVarationMaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldSnellAngleVarationMaxFocusLost
        formattedMultipliedTextChanged(jSliderSnellAngleVarationMax, jFormattedTextFieldSnellAngleVarationMax);
    }//GEN-LAST:event_jFormattedTextFieldSnellAngleVarationMaxFocusLost

    private void jFormattedTextFieldSnellAngleVarationMinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldSnellAngleVarationMinFocusLost
        formattedMultipliedTextChanged(jSliderSnellAngleVarationMin, jFormattedTextFieldSnellAngleVarationMin);
    }//GEN-LAST:event_jFormattedTextFieldSnellAngleVarationMinFocusLost

    private void jFormattedTextFieldSnellDeltaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldSnellDeltaFocusLost
        formattedMultipliedTextChanged(jSliderSnellDelta, jFormattedTextFieldSnellDelta);
    }//GEN-LAST:event_jFormattedTextFieldSnellDeltaFocusLost

    private void jFormattedTextFieldSnellDelayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldSnellDelayFocusLost
        formattedTextChanged(jSliderSnellDelay, jFormattedTextFieldSnellDelay);
    }//GEN-LAST:event_jFormattedTextFieldSnellDelayFocusLost

    private void jFormattedTextFieldEnergyConservationPexiglassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldEnergyConservationPexiglassFocusLost
        formattedMultipliedTextChanged(jSliderEnergyConservationPexiglass, jFormattedTextFieldEnergyConservationPexiglass);
    }//GEN-LAST:event_jFormattedTextFieldEnergyConservationPexiglassFocusLost

    private void jFormattedTextFieldEnergyConservationPolarizationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldEnergyConservationPolarizationFocusLost
        formattedMultipliedTextChanged(jSliderEnergyConservationPolarization, jFormattedTextFieldEnergyConservationPolarization);
    }//GEN-LAST:event_jFormattedTextFieldEnergyConservationPolarizationFocusLost

    private void jFormattedTextFieldCriticalAngleVarationMaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldCriticalAngleVarationMaxFocusLost
        formattedMultipliedTextChanged(jSliderCriticalAngleVarationMax, jFormattedTextFieldCriticalAngleVarationMax);
    }//GEN-LAST:event_jFormattedTextFieldCriticalAngleVarationMaxFocusLost

    private void jFormattedTextFieldCriticalAngleVarationMinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldCriticalAngleVarationMinFocusLost
        formattedMultipliedTextChanged(jSliderCriticalAngleVarationMin, jFormattedTextFieldCriticalAngleVarationMin);
    }//GEN-LAST:event_jFormattedTextFieldCriticalAngleVarationMinFocusLost

    private void jFormattedTextFieldCriticalAngleDeltaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldCriticalAngleDeltaFocusLost
        formattedMultipliedTextChanged(jSliderCriticalAngleDelta, jFormattedTextFieldCriticalAngleDelta);
    }//GEN-LAST:event_jFormattedTextFieldCriticalAngleDeltaFocusLost

    private void jFormattedTextFieldBrewsterAngleVarationMaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldBrewsterAngleVarationMaxFocusLost
        formattedMultipliedTextChanged(jSliderBrewsterAngleVarationMax, jFormattedTextFieldBrewsterAngleVarationMax);
    }//GEN-LAST:event_jFormattedTextFieldBrewsterAngleVarationMaxFocusLost

    private void jFormattedTextFieldBrewsterAngleVarationMinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldBrewsterAngleVarationMinFocusLost
        formattedMultipliedTextChanged(jSliderBrewsterAngleVarationMin, jFormattedTextFieldBrewsterAngleVarationMin);
    }//GEN-LAST:event_jFormattedTextFieldBrewsterAngleVarationMinFocusLost

    private void jFormattedTextFieldBrewsterAngleDeltaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldBrewsterAngleDeltaFocusLost
        formattedMultipliedTextChanged(jSliderBrewsterAngleDelta, jFormattedTextFieldBrewsterAngleDelta);
    }//GEN-LAST:event_jFormattedTextFieldBrewsterAngleDeltaFocusLost

    private void jFormattedTextFieldBrewsterAnglePolarizationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldBrewsterAnglePolarizationFocusLost
        formattedMultipliedTextChanged(jSliderBrewsterAnglePolarization, jFormattedTextFieldBrewsterAnglePolarization);
    }//GEN-LAST:event_jFormattedTextFieldBrewsterAnglePolarizationFocusLost

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        // TODO FIXME
//		int nsamples = sldNumSamples.getValue() == 0 ? 1 : sldNumSamples.getValue();
//		acqConfig.setTotalSamples(nsamples + 1);
//		acqConfig.getSelectedHardwareParameter("UserPosLow").setParameterValue(
//				"" + ((float) sldPos1.getValue() / 1000.F));
//		acqConfig.getSelectedHardwareParameter("UserPosHigh").setParameterValue(
//				"" + ((float) sldPos2.getValue() / 1000.F));
//		acqConfig.setSelectedFrequency(new Frequency((double) sldFreq.getValue(), hardwareInfo
//				.getHardwareFrequencies(0).getMinimumFrequency().getMultiplier(), hardwareInfo
//				.getHardwareFrequencies(0).getMinimumFrequency().getFrequencyDefType()));
//		fireICustomizerListenerDone();

        // int nsamples = sldNumSamples.getValue() < 10 ? 10 : sldNumSamples.getValue();
    	
    	int nsamples = 0;
    	
    	// inicializar parametros
    	int protocol = 1;
    	float ang1Min = 0;
    	float ang1Max = 360;
    	float deltaAng1 = 0.2f;
    	int delay = 0;
    	int polarizacao = 0;
    	float angPol = 0;
    	int checkBox = 0;
    	
		protocol = jTabbedPaneOptica.getSelectedIndex() + 1;
		
		switch (protocol) {
		case 1:
			ang1Min = (float) jSliderSnellAngleVarationMin.getValue() / 10.F;
			ang1Max = (float) jSliderSnellAngleVarationMax.getValue() / 10.F;
			deltaAng1 = (float) jSliderSnellDelta.getValue() / 10.F;
			
			delay = jSliderSnellDelay.getValue();
			nsamples = (int) ((ang1Max - ang1Min) / deltaAng1);
			break;
			
		case 2:
			ang1Min = (float) jSliderEnergyConservationPexiglass.getValue() / 10.F;
			if (jRadioButtonEnergyConservationIsPolarizationYes.isSelected()) {
				polarizacao = 1;
			} else {
				// valores identicos 'a inicializacao
				polarizacao = 0;
			}
			angPol = (float) jSliderEnergyConservationPolarization.getValue() / 10.F;
			
			nsamples = 1; // TODO FIXME 
			break;
			
		case 3:
			ang1Min = (float) jSliderCriticalAngleVarationMin.getValue() / 10.F;
			ang1Max = (float) jSliderCriticalAngleVarationMax.getValue() / 10.F;
			
//			checkBox // TODO FIXME  
			
			nsamples = (int) ((ang1Max - ang1Min) / deltaAng1); // TODO ?
			break;
			
		case 4:
			ang1Min = (float) jSliderBrewsterAngleVarationMin.getValue() / 10.F;
			ang1Max = (float) jSliderBrewsterAngleVarationMax.getValue() / 10.F;
			angPol = (float) jSliderBrewsterAnglePolarization.getValue() / 10.F;
			
//			checkBox // TODO FIXME
			
			nsamples = (int) ((ang1Max - ang1Min) / deltaAng1); // TODO ?
			break;
			
		case 5:
			ang1Min = 3;
			ang1Max = 1;
			deltaAng1 = 1;
			// valores identicos 'a inicializacao
//			delay = 0;
//			polarizacao = 0;
//			angPol = 0;
//			checkBox = 0;
			nsamples = 0; // TODO verificar viabilidade mas o data collector deve estar 'a espera de ler resultado
			break;

		default:
			// TODO protocolo inválido
			return;
		}

        acqConfig.setTotalSamples(nsamples);
        acqConfig.getSelectedHardwareParameter("protocolo").setParameterValue(String.valueOf(protocol));
        acqConfig.getSelectedHardwareParameter("ang1_min").setParameterValue(String.valueOf(ang1Min));
        acqConfig.getSelectedHardwareParameter("ang1_max").setParameterValue(String.valueOf(ang1Max));
        acqConfig.getSelectedHardwareParameter("delta_ang1").setParameterValue(String.valueOf(deltaAng1));
        acqConfig.getSelectedHardwareParameter("delay").setParameterValue(String.valueOf(delay));
        acqConfig.getSelectedHardwareParameter("polarizacao").setParameterValue(String.valueOf(polarizacao));
        acqConfig.getSelectedHardwareParameter("ang_pol").setParameterValue(String.valueOf(angPol));
        acqConfig.getSelectedHardwareParameter("check_box").setParameterValue(String.valueOf(checkBox));

//		acqConfig.setSelectedFrequency(new Frequency((double) sldFreq.getValue(), hardwareInfo
//				.getHardwareFrequencies(0).getMinimumFrequency().getMultiplier(), hardwareInfo
//				.getHardwareFrequencies(0).getMinimumFrequency().getFrequencyDefType()));

        fireICustomizerListenerDone();
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jSliderSnellAngleVarationMinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderSnellAngleVarationMinStateChanged
        sliderMultipliedChanged(jSliderSnellAngleVarationMin, jFormattedTextFieldSnellAngleVarationMin);
    }//GEN-LAST:event_jSliderSnellAngleVarationMinStateChanged

    private void jSliderSnellAngleVarationMaxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderSnellAngleVarationMaxStateChanged
        sliderMultipliedChanged(jSliderSnellAngleVarationMax, jFormattedTextFieldSnellAngleVarationMax);
    }//GEN-LAST:event_jSliderSnellAngleVarationMaxStateChanged

    private void jSliderSnellDeltaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderSnellDeltaStateChanged
        sliderMultipliedChanged(jSliderSnellDelta, jFormattedTextFieldSnellDelta);
    }//GEN-LAST:event_jSliderSnellDeltaStateChanged

    private void jSliderSnellDelayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderSnellDelayStateChanged
        sliderChanged(jSliderSnellDelay, jFormattedTextFieldSnellDelay);
    }//GEN-LAST:event_jSliderSnellDelayStateChanged

    private void jSliderEnergyConservationPexiglassStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderEnergyConservationPexiglassStateChanged
        sliderMultipliedChanged(jSliderEnergyConservationPexiglass, jFormattedTextFieldEnergyConservationPexiglass);
    }//GEN-LAST:event_jSliderEnergyConservationPexiglassStateChanged

    private void jSliderEnergyConservationPolarizationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderEnergyConservationPolarizationStateChanged
        sliderMultipliedChanged(jSliderEnergyConservationPolarization, jFormattedTextFieldEnergyConservationPolarization);
    }//GEN-LAST:event_jSliderEnergyConservationPolarizationStateChanged

    private void jSliderCriticalAngleVarationMinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderCriticalAngleVarationMinStateChanged
        sliderMultipliedChanged(jSliderCriticalAngleVarationMin, jFormattedTextFieldCriticalAngleVarationMin);
    }//GEN-LAST:event_jSliderCriticalAngleVarationMinStateChanged

    private void jSliderCriticalAngleVarationMaxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderCriticalAngleVarationMaxStateChanged
        sliderMultipliedChanged(jSliderCriticalAngleVarationMax, jFormattedTextFieldCriticalAngleVarationMax);
    }//GEN-LAST:event_jSliderCriticalAngleVarationMaxStateChanged

    private void jSliderCriticalAngleDeltaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderCriticalAngleDeltaStateChanged
        sliderMultipliedChanged(jSliderCriticalAngleDelta, jFormattedTextFieldCriticalAngleDelta);
    }//GEN-LAST:event_jSliderCriticalAngleDeltaStateChanged

    private void jSliderBrewsterAngleVarationMinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderBrewsterAngleVarationMinStateChanged
        sliderMultipliedChanged(jSliderBrewsterAngleVarationMin, jFormattedTextFieldBrewsterAngleVarationMin);
    }//GEN-LAST:event_jSliderBrewsterAngleVarationMinStateChanged

    private void jSliderBrewsterAngleVarationMaxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderBrewsterAngleVarationMaxStateChanged
        sliderMultipliedChanged(jSliderBrewsterAngleVarationMax, jFormattedTextFieldBrewsterAngleVarationMax);
    }//GEN-LAST:event_jSliderBrewsterAngleVarationMaxStateChanged

    private void jSliderBrewsterAngleDeltaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderBrewsterAngleDeltaStateChanged
        sliderMultipliedChanged(jSliderBrewsterAngleDelta, jFormattedTextFieldBrewsterAngleDelta);
    }//GEN-LAST:event_jSliderBrewsterAngleDeltaStateChanged

    private void jSliderBrewsterAnglePolarizationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderBrewsterAnglePolarizationStateChanged
        sliderMultipliedChanged(jSliderBrewsterAnglePolarization, jFormattedTextFieldBrewsterAnglePolarization);
    }//GEN-LAST:event_jSliderBrewsterAnglePolarizationStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupCalibration;
    private javax.swing.ButtonGroup buttonGroupEnergyConservationIsPolarization;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDefaultConfig;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JFormattedTextField jFormattedTextFieldBrewsterAngleDelta;
    private javax.swing.JFormattedTextField jFormattedTextFieldBrewsterAnglePolarization;
    private javax.swing.JFormattedTextField jFormattedTextFieldBrewsterAngleVarationMax;
    private javax.swing.JFormattedTextField jFormattedTextFieldBrewsterAngleVarationMin;
    private javax.swing.JFormattedTextField jFormattedTextFieldCriticalAngleDelta;
    private javax.swing.JFormattedTextField jFormattedTextFieldCriticalAngleVarationMax;
    private javax.swing.JFormattedTextField jFormattedTextFieldCriticalAngleVarationMin;
    private javax.swing.JFormattedTextField jFormattedTextFieldEnergyConservationPexiglass;
    private javax.swing.JFormattedTextField jFormattedTextFieldEnergyConservationPolarization;
    private javax.swing.JFormattedTextField jFormattedTextFieldSnellAngleVarationMax;
    private javax.swing.JFormattedTextField jFormattedTextFieldSnellAngleVarationMin;
    private javax.swing.JFormattedTextField jFormattedTextFieldSnellDelay;
    private javax.swing.JFormattedTextField jFormattedTextFieldSnellDelta;
    private javax.swing.JLabel jLabelBrewsterAngleDelta;
    private javax.swing.JLabel jLabelBrewsterAngleVaration;
    private javax.swing.JLabel jLabelCriticalAngleDelta;
    private javax.swing.JLabel jLabelCriticalAngleVaration;
    private javax.swing.JLabel jLabelSnellAngleVaration;
    private javax.swing.JLabel jLabelSnellDelay;
    private javax.swing.JLabel jLabelSnellDelta;
    private javax.swing.JPanel jPanelBrewsterAngle;
    private javax.swing.JPanel jPanelBrewsterAngleDelta;
    private javax.swing.JPanel jPanelBrewsterAnglePolarization;
    private javax.swing.JPanel jPanelBrewsterAngleVariation;
    private javax.swing.JPanel jPanelCalibration;
    private javax.swing.JPanel jPanelCalibrationButtons;
    private javax.swing.JPanel jPanelControlButtons;
    private javax.swing.JPanel jPanelCriticalAngle;
    private javax.swing.JPanel jPanelCriticalAngleDelta;
    private javax.swing.JPanel jPanelCriticalAngleVariation;
    private javax.swing.JPanel jPanelEnergyConservation;
    private javax.swing.JPanel jPanelEnergyConservationIsPolarization;
    private javax.swing.JPanel jPanelEnergyConservationPexiglass;
    private javax.swing.JPanel jPanelEnergyConservationPolarization;
    private javax.swing.JPanel jPanelSnell;
    private javax.swing.JPanel jPanelSnellAngleVariation;
    private javax.swing.JPanel jPanelSnellDelay;
    private javax.swing.JPanel jPanelSnellDelta;
    private javax.swing.JRadioButton jRadioButtonCalibrationPexiglass;
    private javax.swing.JRadioButton jRadioButtonCalibrationSensor;
    private javax.swing.JRadioButton jRadioButtonEnergyConservationIsPolarizationNo;
    private javax.swing.JRadioButton jRadioButtonEnergyConservationIsPolarizationYes;
    private javax.swing.JSlider jSliderBrewsterAngleDelta;
    private javax.swing.JSlider jSliderBrewsterAnglePolarization;
    private javax.swing.JSlider jSliderBrewsterAngleVarationMax;
    private javax.swing.JSlider jSliderBrewsterAngleVarationMin;
    private javax.swing.JSlider jSliderCriticalAngleDelta;
    private javax.swing.JSlider jSliderCriticalAngleVarationMax;
    private javax.swing.JSlider jSliderCriticalAngleVarationMin;
    private javax.swing.JSlider jSliderEnergyConservationPexiglass;
    private javax.swing.JSlider jSliderEnergyConservationPolarization;
    private javax.swing.JSlider jSliderSnellAngleVarationMax;
    private javax.swing.JSlider jSliderSnellAngleVarationMin;
    private javax.swing.JSlider jSliderSnellDelay;
    private javax.swing.JSlider jSliderSnellDelta;
    private javax.swing.JTabbedPane jTabbedPaneOptica;
    // End of variables declaration//GEN-END:variables

    /**
     * Registers ICustomizerListener to receive events.
     *
     * @param listener The listener to register.
     */
    @Override
    public synchronized void addICustomizerListener(ICustomizerListener listener) {
        if (listenerList == null) {
            listenerList = new javax.swing.event.EventListenerList();
        }
        listenerList.add(ICustomizerListener.class, listener);
    }

    /**
     * Removes ICustomizerListener from the list of listeners.
     *
     * @param listener The listener to remove.
     */
    @Override
    public synchronized void removeICustomizerListener(ICustomizerListener listener) {
        listenerList.remove(ICustomizerListener.class, listener);
    }

    /**
     * Notifies all registered listeners about the event.
     *
     * @param param1 Parameter #1 of the <CODE>EventObject<CODE> constructor.
     */
    private void fireICustomizerListenerCanceled() {
        if (listenerList == null) {
            return;
        }
        Object[] listeners = listenerList.getListenerList();
        for (int i = listeners.length - 2; i >= 0; i -= 2) {
            if (listeners[i] == ICustomizerListener.class) {
                ((ICustomizerListener) listeners[i + 1]).canceled();
            }
        }
    }

    /**
     * Notifies all registered listeners about the event.
     *
     * @param param1 Parameter #1 of the <CODE>EventObject<CODE> constructor.
     */
    private void fireICustomizerListenerDone() {
        if (listenerList == null) {
            return;
        }
        Object[] listeners = listenerList.getListenerList();
        for (int i = listeners.length - 2; i >= 0; i -= 2) {
            if (listeners[i] == ICustomizerListener.class) {

                ((ICustomizerListener) listeners[i + 1]).done();
            }
        }
    }
    private HardwareInfo hardwareInfo = null;
    private HardwareAcquisitionConfig acqConfig = null;

    @Override
    public HardwareAcquisitionConfig getAcquisitionConfig() {
        return acqConfig;
    }

    @Override
    public void setHardwareAcquisitionConfig(HardwareAcquisitionConfig acqConfig) {
        this.acqConfig = acqConfig;
        if (acqConfig != null) {
            System.out.println("OpticaCustomizer.setHardwareAcquisitionConfig(HardwareAcquisitionConfig  acqConfig)");
            System.out.println("acqConfig: [" + acqConfig + "]");

            // TODO
//			int nsamples = acqConfig.getTotalSamples();
//			sldNumSamples.setValue(nsamples);
//			tfNumSamples.setText("" + nsamples);
//
//			int freq = (int) acqConfig.getSelectedFrequency().getFrequency();
//			sldFreq.setValue(freq);
//			tfFreq.setText("" + freq);
//
//			float pos1f = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("UserPosLow"));
//			int pos1 = (int) Math.floor(pos1f * 1000.F);
//			sldPos1.setValue(pos1);
//			tfPos1.setValue(new Float(pos1f));
//
//			float pos2f = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("UserPosHigh"));
//			int pos2 = (int) Math.floor(pos2f * 1000.F);
//			sldPos2.setValue(pos2);
//			tfPos2.setValue(new Float(pos2f));
        }
    }

    @Override
    public void setHardwareInfo(HardwareInfo hardwareInfo) {
        this.hardwareInfo = hardwareInfo;
    }

    protected HardwareInfo getHardwareInfo() {
        return this.hardwareInfo;
    }

    @Override
    public javax.swing.JComponent getCustomizerComponent() {
        return this;
    }

    @Override
    public javax.swing.ImageIcon getCustomizerIcon() {
        return new javax.swing.ImageIcon(getClass().getResource("/pt/utl/ist/elab/client/optica/resources/optica_iconified.gif"));
    }

    @Override
    public String getCustomizerTitle() {
        return ReCResourceBundle.findString("optica$rec.exp.optica.customizer.title");
    }

    @Override
    public javax.swing.JMenuBar getMenuBar() {
        return null;
    }

    private void installDecimalFormatter(JFormattedTextField ftf) {
        /*
        DecimalFormat formatDecimal = new DecimalFormat("0.0");
        formatDecimal.setDecimalSeparatorAlwaysShown(true);
        formatDecimal.setGroupingUsed(false);
        formatDecimal.setMinimumFractionDigits(1);

        NumberFormatter formatter = new NumberFormatter(formatDecimal);
        formatter.setCommitsOnValidEdit(true);
        formatter.setOverwriteMode(true);
        formatter.install(ftf);
         */
    }

    private void installNaturalFormatter(JFormattedTextField ftf) {
        /*
        DecimalFormat naturalFormat = new DecimalFormat("0");
        naturalFormat.setDecimalSeparatorAlwaysShown(false);
        naturalFormat.setGroupingUsed(false);
        naturalFormat.setMinimumFractionDigits(0);

        NumberFormatter formatter = new NumberFormatter(naturalFormat);
        formatter.setCommitsOnValidEdit(true);
        formatter.setOverwriteMode(true);
        formatter.install(ftf);
         */
    }

    private void initComponentsManual() {
        jLabelSnellDelay.setVisible(false);
        jLabelSnellDelta.setVisible(false);

        Dictionary<Integer, JLabel> slidersAngle0360Labels = new Hashtable<Integer, JLabel>();
        slidersAngle0360Labels.put(new Integer(0), new JLabel("0.0"));
        slidersAngle0360Labels.put(new Integer(900), new JLabel("90.0"));
        slidersAngle0360Labels.put(new Integer(1800), new JLabel("180.0"));
        slidersAngle0360Labels.put(new Integer(2700), new JLabel("270.0"));
        slidersAngle0360Labels.put(new Integer(3600), new JLabel("360.0"));

        Dictionary<Integer, JLabel> slidersAngle02360Labels = new Hashtable<Integer, JLabel>();
        slidersAngle02360Labels.put(new Integer(2), new JLabel("0.2"));
        slidersAngle02360Labels.put(new Integer(900), new JLabel("90.0"));
        slidersAngle02360Labels.put(new Integer(1800), new JLabel("180.0"));
        slidersAngle02360Labels.put(new Integer(2700), new JLabel("270.0"));
        slidersAngle02360Labels.put(new Integer(3600), new JLabel("360.0"));

        Dictionary<Integer, JLabel> slidersAngle90Labels = new Hashtable<Integer, JLabel>();
        slidersAngle90Labels.put(new Integer(0), new JLabel("0.0"));
        slidersAngle90Labels.put(new Integer(450), new JLabel("45.0"));
        slidersAngle90Labels.put(new Integer(900), new JLabel("90.0"));

        jSliderSnellAngleVarationMin.setLabelTable(slidersAngle0360Labels);
        jSliderSnellAngleVarationMax.setLabelTable(slidersAngle0360Labels);
        jSliderSnellDelta.setLabelTable(slidersAngle02360Labels);
        installDecimalFormatter(jFormattedTextFieldSnellAngleVarationMin);
        installDecimalFormatter(jFormattedTextFieldSnellAngleVarationMax);
        installDecimalFormatter(jFormattedTextFieldSnellDelta);
        installNaturalFormatter(jFormattedTextFieldSnellDelay);

        jSliderEnergyConservationPexiglass.setLabelTable(slidersAngle0360Labels);
        jSliderEnergyConservationPolarization.setLabelTable(slidersAngle90Labels);
        installDecimalFormatter(jFormattedTextFieldEnergyConservationPexiglass);
        installDecimalFormatter(jFormattedTextFieldEnergyConservationPolarization);

        jSliderCriticalAngleVarationMin.setLabelTable(slidersAngle0360Labels);
        jSliderCriticalAngleVarationMax.setLabelTable(slidersAngle0360Labels);
        jSliderCriticalAngleDelta.setLabelTable(slidersAngle02360Labels);
        installDecimalFormatter(jFormattedTextFieldCriticalAngleVarationMin);
        installDecimalFormatter(jFormattedTextFieldCriticalAngleVarationMax);
        installDecimalFormatter(jFormattedTextFieldCriticalAngleDelta);

        jSliderBrewsterAngleVarationMin.setLabelTable(slidersAngle0360Labels);
        jSliderBrewsterAngleVarationMax.setLabelTable(slidersAngle0360Labels);
        jSliderBrewsterAngleDelta.setLabelTable(slidersAngle02360Labels);
        jSliderBrewsterAnglePolarization.setLabelTable(slidersAngle90Labels);
        installDecimalFormatter(jFormattedTextFieldBrewsterAngleVarationMin);
        installDecimalFormatter(jFormattedTextFieldBrewsterAngleVarationMax);
        installDecimalFormatter(jFormattedTextFieldBrewsterAngleDelta);
        installDecimalFormatter(jFormattedTextFieldBrewsterAnglePolarization);

        // TODO 
        // checkMaxNumSamples();
        // checkMaxTime();
        // checkPosOverlap();

    }

    private void sliderMultipliedChanged(javax.swing.JSlider slider, javax.swing.JFormattedTextField textField) {
        textField.setText(Float.toString((float) slider.getValue() / 10.F));
    }

    private void sliderChanged(javax.swing.JSlider slider, javax.swing.JFormattedTextField textField) {
        textField.setText(Integer.toString(slider.getValue()));
    }

    private void formattedMultipliedTextChanged(javax.swing.JSlider slider, javax.swing.JFormattedTextField textField) {
        String strPos1 = textField.getText();
        if (strPos1.trim().equals("")) {
            return;
        }
        strPos1 = strPos1.replace(",", ".");
        try {
            int pos1 = (int) (Float.parseFloat(strPos1) * 10.F);
            if (pos1 <= slider.getMaximum() && pos1 >= slider.getMinimum()) {
                slider.setValue(pos1 - slider.getMinimum());
            } else {
                textField.setValue(Float.toString((float) slider.getValue() / 10.F));
            }
        } catch (Exception e) {
            textField.setValue(Float.toString((float) slider.getValue() / 10.F));
        }
    }

    private void formattedTextChanged(javax.swing.JSlider slider, javax.swing.JFormattedTextField textField) {
        String strPos1 = textField.getText();
        if (strPos1.trim().equals("")) {
            return;
        }
        strPos1 = strPos1.replace(",", ".");
        try {
            int pos1 = (int) Integer.parseInt(strPos1);
            if (pos1 <= slider.getMaximum() && pos1 >= slider.getMinimum()) {
                slider.setValue(pos1 - slider.getMinimum());
            } else {
                textField.setValue(slider.getValue());
            }
        } catch (Exception e) {
            textField.setValue(slider.getValue());
        }
    }
}
