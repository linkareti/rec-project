/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HidrostatCustomizerPanel.java
 *
 * Created on 09-Nov-2010, 11:29:48
 */
package pt.utl.ist.elab.client.hidrostat;

import javax.swing.JFormattedTextField;

import com.linkare.rec.data.config.HardwareAcquisitionConfig;
import com.linkare.rec.data.synch.Frequency;
import com.linkare.rec.impl.client.customizer.AbstractCustomizer;
import com.linkare.rec.impl.i18n.ReCResourceBundle;

/**
 * 
 * @author npadriano
 */
public class HidrostatCustomizerPanel extends AbstractCustomizer {

	/** Generated UID */
	private static final long serialVersionUID = -6367415208236048245L;

	public static final int NUMBER_OF_SAMPLES_FOR_SERIES = 1625;
	public static final int PROTOCOL_1_WAIT_MS = 20000;
	public static final int PROTOCOL_2_SAMPLING_INTERVAL_MS = 44;

	/** Creates new form HidrostatCustomizerPanel */
	public HidrostatCustomizerPanel() {
		initComponents();

		initComponentsManual();
		validateScreen();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelHidrostat = new javax.swing.JPanel();
        jPanelHidrostatInitialDepth = new javax.swing.JPanel();
        jSliderHidrostatInitialDepth = new javax.swing.JSlider();
        jFormattedTextFieldHidrostatInitialDepth = new javax.swing.JFormattedTextField();
        jPanelHidrostatFinalDepth = new javax.swing.JPanel();
        jSliderHidrostatFinalDepth = new javax.swing.JSlider();
        jFormattedTextFieldHidrostatFinalDepth = new javax.swing.JFormattedTextField();
        jLabelInitialAndFinalDepthAreEqual = new javax.swing.JLabel();
        jPanelHidrostatNumberOfSamples = new javax.swing.JPanel();
        jFormattedTextFieldHidrostatNumberOfSamples = new javax.swing.JFormattedTextField();
        jSliderHidrostatNumberOfSamples = new javax.swing.JSlider();
        jPanelControlButtons = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jButtonDefaultConfig = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(350, 490));
        setName("OpticaCustomizer"); // NOI18N
        setPreferredSize(new java.awt.Dimension(450, 490));
        setLayout(new java.awt.BorderLayout());

        jPanelHidrostat.setName("jPanelHidrostat"); // NOI18N
        jPanelHidrostat.setPreferredSize(new java.awt.Dimension(400, 372));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(HidrostatCustomizerPanel.class);
        jPanelHidrostatInitialDepth.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelHidrostatInitialDepth.border.title"))); // NOI18N
        jPanelHidrostatInitialDepth.setName("jPanelHidrostatInitialDepth"); // NOI18N
        jPanelHidrostatInitialDepth.setPreferredSize(new java.awt.Dimension(200, 100));

        jSliderHidrostatInitialDepth.setMajorTickSpacing(100);
        jSliderHidrostatInitialDepth.setMaximum(1930);
        jSliderHidrostatInitialDepth.setMinorTickSpacing(20);
        jSliderHidrostatInitialDepth.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderHidrostatInitialDepth.setPaintLabels(true);
        jSliderHidrostatInitialDepth.setPaintTicks(true);
        jSliderHidrostatInitialDepth.setToolTipText(resourceMap.getString("jSliderHidrostatInitialDepth.toolTipText")); // NOI18N
        jSliderHidrostatInitialDepth.setValue(0);
        jSliderHidrostatInitialDepth.setInverted(true);
        jSliderHidrostatInitialDepth.setName("jSliderHidrostatInitialDepth"); // NOI18N
        jSliderHidrostatInitialDepth.setPreferredSize(new java.awt.Dimension(89, 89));
        jSliderHidrostatInitialDepth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderHidrostatInitialDepthStateChanged(evt);
            }
        });

        jFormattedTextFieldHidrostatInitialDepth.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedTextFieldHidrostatInitialDepth.setText(resourceMap.getString("jFormattedTextFieldHidrostatInitialDepth.text")); // NOI18N
        jFormattedTextFieldHidrostatInitialDepth.setName("jFormattedTextFieldHidrostatInitialDepth"); // NOI18N
        jFormattedTextFieldHidrostatInitialDepth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldHidrostatInitialDepthFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelHidrostatInitialDepthLayout = new javax.swing.GroupLayout(jPanelHidrostatInitialDepth);
        jPanelHidrostatInitialDepth.setLayout(jPanelHidrostatInitialDepthLayout);
        jPanelHidrostatInitialDepthLayout.setHorizontalGroup(
            jPanelHidrostatInitialDepthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHidrostatInitialDepthLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jFormattedTextFieldHidrostatInitialDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSliderHidrostatInitialDepth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        jPanelHidrostatInitialDepthLayout.setVerticalGroup(
            jPanelHidrostatInitialDepthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSliderHidrostatInitialDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanelHidrostatInitialDepthLayout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jFormattedTextFieldHidrostatInitialDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelHidrostatFinalDepth.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelHidrostatFinalDepth.border.title"))); // NOI18N
        jPanelHidrostatFinalDepth.setName("jPanelHidrostatFinalDepth"); // NOI18N
        jPanelHidrostatFinalDepth.setPreferredSize(new java.awt.Dimension(200, 100));

        jSliderHidrostatFinalDepth.setMajorTickSpacing(100);
        jSliderHidrostatFinalDepth.setMaximum(1930);
        jSliderHidrostatFinalDepth.setMinorTickSpacing(20);
        jSliderHidrostatFinalDepth.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderHidrostatFinalDepth.setPaintLabels(true);
        jSliderHidrostatFinalDepth.setPaintTicks(true);
        jSliderHidrostatFinalDepth.setToolTipText(resourceMap.getString("jSliderHidrostatFinalDepth.toolTipText")); // NOI18N
        jSliderHidrostatFinalDepth.setValue(1000);
        jSliderHidrostatFinalDepth.setInverted(true);
        jSliderHidrostatFinalDepth.setName("jSliderHidrostatFinalDepth"); // NOI18N
        jSliderHidrostatFinalDepth.setPreferredSize(new java.awt.Dimension(89, 89));
        jSliderHidrostatFinalDepth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderHidrostatFinalDepthStateChanged(evt);
            }
        });

        jFormattedTextFieldHidrostatFinalDepth.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedTextFieldHidrostatFinalDepth.setText(resourceMap.getString("jFormattedTextFieldHidrostatFinalDepth.text")); // NOI18N
        jFormattedTextFieldHidrostatFinalDepth.setName("jFormattedTextFieldHidrostatFinalDepth"); // NOI18N
        jFormattedTextFieldHidrostatFinalDepth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldHidrostatFinalDepthFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanelHidrostatFinalDepthLayout = new javax.swing.GroupLayout(jPanelHidrostatFinalDepth);
        jPanelHidrostatFinalDepth.setLayout(jPanelHidrostatFinalDepthLayout);
        jPanelHidrostatFinalDepthLayout.setHorizontalGroup(
            jPanelHidrostatFinalDepthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHidrostatFinalDepthLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jFormattedTextFieldHidrostatFinalDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSliderHidrostatFinalDepth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        jPanelHidrostatFinalDepthLayout.setVerticalGroup(
            jPanelHidrostatFinalDepthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSliderHidrostatFinalDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanelHidrostatFinalDepthLayout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jFormattedTextFieldHidrostatFinalDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabelInitialAndFinalDepthAreEqual.setForeground(resourceMap.getColor("jLabelInitialAndFinalDepthAreEqual.foreground")); // NOI18N
        jLabelInitialAndFinalDepthAreEqual.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelInitialAndFinalDepthAreEqual.setText(resourceMap.getString("jLabelInitialAndFinalDepthAreEqual.text")); // NOI18N
        jLabelInitialAndFinalDepthAreEqual.setEnabled(false);
        jLabelInitialAndFinalDepthAreEqual.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelInitialAndFinalDepthAreEqual.setName("jLabelInitialAndFinalDepthAreEqual"); // NOI18N

        jPanelHidrostatNumberOfSamples.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanelHidrostatNumberOfSamples.border.title"))); // NOI18N
        jPanelHidrostatNumberOfSamples.setName("jPanelHidrostatNumberOfSamples"); // NOI18N

        jFormattedTextFieldHidrostatNumberOfSamples.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedTextFieldHidrostatNumberOfSamples.setText(resourceMap.getString("jFormattedTextFieldHidrostatNumberOfSamples.text")); // NOI18N
        jFormattedTextFieldHidrostatNumberOfSamples.setName("jFormattedTextFieldHidrostatNumberOfSamples"); // NOI18N
        jFormattedTextFieldHidrostatNumberOfSamples.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldHidrostatNumberOfSamplesFocusLost(evt);
            }
        });

        jSliderHidrostatNumberOfSamples.setMajorTickSpacing(33);
        jSliderHidrostatNumberOfSamples.setMaximum(200);
        jSliderHidrostatNumberOfSamples.setMinimum(2);
        jSliderHidrostatNumberOfSamples.setMinorTickSpacing(3);
        jSliderHidrostatNumberOfSamples.setPaintLabels(true);
        jSliderHidrostatNumberOfSamples.setPaintTicks(true);
        jSliderHidrostatNumberOfSamples.setValue(11);
        jSliderHidrostatNumberOfSamples.setName("jSliderHidrostatNumberOfSamples"); // NOI18N
        jSliderHidrostatNumberOfSamples.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderHidrostatNumberOfSamplesStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanelHidrostatNumberOfSamplesLayout = new javax.swing.GroupLayout(jPanelHidrostatNumberOfSamples);
        jPanelHidrostatNumberOfSamples.setLayout(jPanelHidrostatNumberOfSamplesLayout);
        jPanelHidrostatNumberOfSamplesLayout.setHorizontalGroup(
            jPanelHidrostatNumberOfSamplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHidrostatNumberOfSamplesLayout.createSequentialGroup()
                .addComponent(jSliderHidrostatNumberOfSamples, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextFieldHidrostatNumberOfSamples, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanelHidrostatNumberOfSamplesLayout.setVerticalGroup(
            jPanelHidrostatNumberOfSamplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHidrostatNumberOfSamplesLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jFormattedTextFieldHidrostatNumberOfSamples, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelHidrostatNumberOfSamplesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSliderHidrostatNumberOfSamples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelControlButtons.setName("jPanelControlButtons"); // NOI18N
        jPanelControlButtons.setPreferredSize(new java.awt.Dimension(350, 37));

        jButtonOk.setText(resourceMap.getString("jButtonOk.text")); // NOI18N
        jButtonOk.setName("jButtonOk"); // NOI18N
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jButtonCancel.setText(resourceMap.getString("jButtonCancel.text")); // NOI18N
        jButtonCancel.setName("jButtonCancel"); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonDefaultConfig.setText(resourceMap.getString("jButtonDefaultConfig.text")); // NOI18N
        jButtonDefaultConfig.setName("jButtonDefaultConfig"); // NOI18N
        jButtonDefaultConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDefaultConfigActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelControlButtonsLayout = new javax.swing.GroupLayout(jPanelControlButtons);
        jPanelControlButtons.setLayout(jPanelControlButtonsLayout);
        jPanelControlButtonsLayout.setHorizontalGroup(
            jPanelControlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlButtonsLayout.createSequentialGroup()
                .addComponent(jButtonOk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancel)
                .addGap(18, 18, 18)
                .addComponent(jButtonDefaultConfig)
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanelControlButtonsLayout.setVerticalGroup(
            jPanelControlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlButtonsLayout.createSequentialGroup()
                .addGroup(jPanelControlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOk)
                    .addComponent(jButtonCancel)
                    .addComponent(jButtonDefaultConfig))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelHidrostatLayout = new javax.swing.GroupLayout(jPanelHidrostat);
        jPanelHidrostat.setLayout(jPanelHidrostatLayout);
        jPanelHidrostatLayout.setHorizontalGroup(
            jPanelHidrostatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHidrostatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHidrostatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHidrostatLayout.createSequentialGroup()
                        .addComponent(jPanelHidrostatInitialDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelHidrostatFinalDepth, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelInitialAndFinalDepthAreEqual, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                    .addComponent(jPanelHidrostatNumberOfSamples, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelControlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelHidrostatLayout.setVerticalGroup(
            jPanelHidrostatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHidrostatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHidrostatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelHidrostatInitialDepth, 0, 326, Short.MAX_VALUE)
                    .addComponent(jPanelHidrostatFinalDepth, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelInitialAndFinalDepthAreEqual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelHidrostatNumberOfSamples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelControlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanelHidrostat, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

        private void jSliderHidrostatInitialDepthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderHidrostatInitialDepthStateChanged
            sliderChanged(jSliderHidrostatInitialDepth, jFormattedTextFieldHidrostatInitialDepth);
            validateScreen();
        }//GEN-LAST:event_jSliderHidrostatInitialDepthStateChanged

        private void jFormattedTextFieldHidrostatInitialDepthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldHidrostatInitialDepthFocusLost
            formattedTextChanged(jSliderHidrostatInitialDepth, jFormattedTextFieldHidrostatInitialDepth);
            validateScreen();
        }//GEN-LAST:event_jFormattedTextFieldHidrostatInitialDepthFocusLost

        private void jSliderHidrostatFinalDepthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderHidrostatFinalDepthStateChanged
            sliderChanged(jSliderHidrostatFinalDepth, jFormattedTextFieldHidrostatFinalDepth);
            validateScreen();
        }//GEN-LAST:event_jSliderHidrostatFinalDepthStateChanged

        private void jFormattedTextFieldHidrostatFinalDepthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldHidrostatFinalDepthFocusLost
            formattedTextChanged(jSliderHidrostatFinalDepth, jFormattedTextFieldHidrostatFinalDepth);
            validateScreen();
        }//GEN-LAST:event_jFormattedTextFieldHidrostatFinalDepthFocusLost

        private void jFormattedTextFieldHidrostatNumberOfSamplesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldHidrostatNumberOfSamplesFocusLost
            formattedTextChanged(jSliderHidrostatNumberOfSamples, jFormattedTextFieldHidrostatNumberOfSamples);
            validateScreen();
        }//GEN-LAST:event_jFormattedTextFieldHidrostatNumberOfSamplesFocusLost

        private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
            fireICustomizerListenerCanceled();
        }//GEN-LAST:event_jButtonCancelActionPerformed

        private void jButtonDefaultConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDefaultConfigActionPerformed
            jSliderHidrostatInitialDepth.setValue(0);
            jFormattedTextFieldHidrostatInitialDepth.setText("0");
            jSliderHidrostatFinalDepth.setValue(1000);
            jFormattedTextFieldHidrostatFinalDepth.setText("1000");
            jSliderHidrostatNumberOfSamples.setValue(11);
            jFormattedTextFieldHidrostatNumberOfSamples.setText("11");
        }//GEN-LAST:event_jButtonDefaultConfigActionPerformed

        private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
            
            Frequency freq = null;

            // inicializar parametros
            int protocolo = 1;
            int profundidade_inicial = 0;
            int profundidade_final = 1900;
            int numero_de_pontos = 100;
            int calibracao = 0;

            profundidade_inicial = (int) jSliderHidrostatInitialDepth.getValue();
            profundidade_final = (int) jSliderHidrostatFinalDepth.getValue();
            numero_de_pontos = (int) jSliderHidrostatNumberOfSamples.getValue();
            calibracao = 0;

            //COMENTEI PARA COMPILAR
            //final int time = (int) Math.ceil((OpticaCustomizerPanel.PROTOCOL_1_WAIT_MS + nsamples * delay) / nsamples);
            //freq = new Frequency(time, Multiplier.mili, FrequencyDefType.SamplingIntervalType);

            //COMENTEI PARA COMPILAR
            getAcquisitionConfig().setTotalSamples(numero_de_pontos);
            getAcquisitionConfig().getSelectedHardwareParameter("protocolo").setParameterValue(String.valueOf(protocolo));
            getAcquisitionConfig().getSelectedHardwareParameter("profundidade_inicial").setParameterValue(String.valueOf(profundidade_inicial));
            getAcquisitionConfig().getSelectedHardwareParameter("profundidade_final").setParameterValue(String.valueOf(profundidade_final));
            getAcquisitionConfig().getSelectedHardwareParameter("numero_de_pontos").setParameterValue(String.valueOf(numero_de_pontos));

            //COMENTEI PARA COMPILAR
            //acqConfig.setSelectedFrequency(freq);

            fireICustomizerListenerDone();
        }//GEN-LAST:event_jButtonOkActionPerformed

        private void jSliderHidrostatNumberOfSamplesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderHidrostatNumberOfSamplesStateChanged
            sliderChanged(jSliderHidrostatNumberOfSamples, jFormattedTextFieldHidrostatNumberOfSamples);
        }//GEN-LAST:event_jSliderHidrostatNumberOfSamplesStateChanged

	/*private void jButtonCancelActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonCancelActionPerformed
		fireICustomizerListenerCanceled();
	}// GEN-LAST:event_jButtonCancelActionPerformed

	private void jButtonDefaultConfigActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonDefaultConfigActionPerformed
		jSliderHidrostatInitialDepth.setValue(0);
		jFormattedTextFieldHidrostatInitialDepth.setText("0");
                jSliderHidrostatFinalDepth.setValue(1900);
		jFormattedTextFieldHidrostatFinalDepth.setText("1900");
                jSliderHidrostatNumberOfSamples.setValue(100);
		jFormattedTextFieldHidrostatNumberOfSamples.setText("100");
                jCheckBoxHidrostatCalibration.setSelected(false);
	}// GEN-LAST:event_jButtonDefaultConfigActionPerformed

	private void jButtonOkActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButtonOkActionPerformed
		
            Frequency freq = null;

		// inicializar parametros
		int protocolo = 1;
		int profundidade_inicial = 0;
                int profundidade_final = 1900;
		int numero_de_pontos = 100;
                int calibracao = 0;
                
		profundidade_inicial = (int) jSliderHidrostatInitialDepth.getValue();
		profundidade_final = (int) jSliderHidrostatFinalDepth.getValue();
                numero_de_pontos = (int) jSliderHidrostatNumberOfSamples.getValue();
                calibracao = 0;

                //COMENTEI PARA COMPILAR
		//final int time = (int) Math.ceil((OpticaCustomizerPanel.PROTOCOL_1_WAIT_MS + nsamples * delay) / nsamples);
		//freq = new Frequency(time, Multiplier.mili, FrequencyDefType.SamplingIntervalType);
                
                //COMENTEI PARA COMPILAR
		getAcquisitionConfig().setTotalSamples(500);
		getAcquisitionConfig().getSelectedHardwareParameter("protocolo").setParameterValue(String.valueOf(protocolo));
		getAcquisitionConfig().getSelectedHardwareParameter("profundidade_inicial").setParameterValue(String.valueOf(profundidade_inicial));
                getAcquisitionConfig().getSelectedHardwareParameter("profundidade_final").setParameterValue(String.valueOf(profundidade_final));
		getAcquisitionConfig().getSelectedHardwareParameter("numero_de_pontos").setParameterValue(String.valueOf(numero_de_pontos));
                if(jCheckBoxHidrostatCalibration.isSelected()){
                    getAcquisitionConfig().getSelectedHardwareParameter("calibracao").setParameterValue(String.valueOf(1));
                } else {
                    getAcquisitionConfig().getSelectedHardwareParameter("calibracao").setParameterValue(String.valueOf(0));
                }

                //COMENTEI PARA COMPILAR
		//acqConfig.setSelectedFrequency(freq);

		fireICustomizerListenerDone();
	}// GEN-LAST:event_jButtonOkActionPerformed

        */
        
	//private void jTabbedPaneHidrostatStateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jTabbedPaneHidrostatStateChanged
	//	validateScreen();
	//}// GEN-LAST:event_jTabbedPaneHidrostatStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDefaultConfig;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JFormattedTextField jFormattedTextFieldHidrostatFinalDepth;
    private javax.swing.JFormattedTextField jFormattedTextFieldHidrostatInitialDepth;
    private javax.swing.JFormattedTextField jFormattedTextFieldHidrostatNumberOfSamples;
    private javax.swing.JLabel jLabelInitialAndFinalDepthAreEqual;
    private javax.swing.JPanel jPanelControlButtons;
    private javax.swing.JPanel jPanelHidrostat;
    private javax.swing.JPanel jPanelHidrostatFinalDepth;
    private javax.swing.JPanel jPanelHidrostatInitialDepth;
    private javax.swing.JPanel jPanelHidrostatNumberOfSamples;
    private javax.swing.JSlider jSliderHidrostatFinalDepth;
    private javax.swing.JSlider jSliderHidrostatInitialDepth;
    private javax.swing.JSlider jSliderHidrostatNumberOfSamples;
    // End of variables declaration//GEN-END:variables

	

	@Override
	public void setHardwareAcquisitionConfig(final HardwareAcquisitionConfig acqConfig) {
		super.setHardwareAcquisitionConfig(acqConfig);
		if (acqConfig != null) {
			System.out.println("HidrostatCustomizer.setHardwareAcquisitionConfig(HardwareAcquisitionConfig  acqConfig)");
			System.out.println("acqConfig: [" + acqConfig + "]");

			// TODO
			// int nsamples = acqConfig.getTotalSamples();
			// sldNumSamples.setValue(nsamples);
			// tfNumSamples.setText("" + nsamples);
			//
			// int freq = (int) acqConfig.getSelectedFrequency().getFrequency();
			// sldFreq.setValue(freq);
			// tfFreq.setText("" + freq);
			//
			// float pos1f =
			// Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("UserPosLow"));
			// int pos1 = (int) Math.floor(pos1f * 1000.F);
			// sldPos1.setValue(pos1);
			//
			// float pos2f =
			// Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("UserPosHigh"));
			// int pos2 = (int) Math.floor(pos2f * 1000.F);
			// sldPos2.setValue(pos2);
		}
	}


	@Override
	public javax.swing.ImageIcon getCustomizerIcon() {
		return new javax.swing.ImageIcon(getClass().getResource(
				"/pt/utl/ist/elab/client/hidrostat/resources/hidrostat_iconified.gif"));
	}

	@Override
	public String getCustomizerTitle() {
		return ReCResourceBundle.findStringOrDefault("hidrostat$rec.exp.hidrostat.customizer.title","hidrostat$rec.exp.hidrostat.customizer.title");
	}


	private void initComponentsManual() {
		// TODO
		// checkMaxNumSamples();
		// checkMaxTime();
		// checkPosOverlap();
	}

	private void validateScreen() {
		boolean valid = true;
		// velocity verification
		if (jSliderHidrostatInitialDepth.getValue() != jSliderHidrostatFinalDepth.getValue()) {
			jLabelInitialAndFinalDepthAreEqual.setEnabled(false);
		} else {
			jLabelInitialAndFinalDepthAreEqual.setEnabled(true);
			valid = false;
		}
		
		jButtonOk.setEnabled(valid);
	}

	private void sliderMultipliedChanged(final javax.swing.JSlider slider,
			final javax.swing.JFormattedTextField textField) {
		textField.setText(Float.toString((float) slider.getValue() / 10.F));
	}

	private void sliderChanged(final javax.swing.JSlider slider, final javax.swing.JFormattedTextField textField) {
		textField.setText(Integer.toString(slider.getValue()));
	}

	private void formattedMultipliedTextChanged(final javax.swing.JSlider slider,
			final javax.swing.JFormattedTextField textField) {
		String strPos1 = textField.getText();
		if (strPos1.trim().equals("")) {
			return;
		}
		strPos1 = strPos1.replace(",", ".");
		try {
			final int pos1 = (int) (Float.parseFloat(strPos1) * 10.F);
			if (pos1 <= slider.getMaximum() && pos1 >= slider.getMinimum()) {
				// slider.setValue(pos1 - slider.getMinimum());
				slider.setValue(pos1);
			} else {
				textField.setValue(Float.toString((float) slider.getValue() / 10.F));
			}
		} catch (final Exception e) {
			textField.setValue(Float.toString((float) slider.getValue() / 10.F));
		}
	}

	private void formattedTextChanged(final javax.swing.JSlider slider, final javax.swing.JFormattedTextField textField) {
		String strPos1 = textField.getText();
		if (strPos1.trim().equals("")) {
			return;
		}
		strPos1 = strPos1.replace(",", ".");
		try {
			final int pos1 = (int) Integer.parseInt(strPos1);
			if (pos1 <= slider.getMaximum() && pos1 >= slider.getMinimum()) {
				// slider.setValue(pos1 - slider.getMinimum());
				slider.setValue(pos1);
			} else {
				textField.setValue(slider.getValue());
			}
		} catch (final Exception e) {
			textField.setValue(slider.getValue());
		}
	}
}
