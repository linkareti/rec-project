/*
 * ConfCompBin.java
 *
 * Created on 28 de Janeiro de 2003, 19:06
 */

package pt.utl.ist.elab.client.webrobot.customizer.Comps.Configs;

/**
 * 
 * @author Andr�
 */
public class ConfPaste extends javax.swing.JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7328241669138707857L;

	/** Creates new form ConfCompBin 
	 * @param parent 
	 * @param modal */
	public ConfPaste(final java.awt.Frame parent, final boolean modal) {
		super(parent, modal);
		initComponents();
		setCancel(false);
		jTextFieldRow.requestFocus();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {// GEN-BEGIN:initComponents
		buttonGroup = new javax.swing.ButtonGroup();
		jPanelOpts = new javax.swing.JPanel();
		jLabelRow = new javax.swing.JLabel();
		jTextFieldRow = new javax.swing.JTextField();
		jLabelCol = new javax.swing.JLabel();
		jTextFieldCol = new javax.swing.JTextField();
		jLabelIcon = new javax.swing.JLabel();
		jPanelOkCancel = new javax.swing.JPanel();
		jButtonOk = new javax.swing.JButton();
		jButtonCancel = new javax.swing.JButton();

		setTitle("Colar");
		setResizable(false);
		addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyPressed(final java.awt.event.KeyEvent evt) {
				formKeyPressed(evt);
			}
		});

		addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mouseClicked(final java.awt.event.MouseEvent evt) {
				formMouseClicked(evt);
			}
		});

		addWindowListener(new java.awt.event.WindowAdapter() {
			@Override
			public void windowClosing(final java.awt.event.WindowEvent evt) {
				closeDialog(evt);
			}
		});

		jPanelOpts.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
		jPanelOpts.setForeground(new java.awt.Color(51, 0, 102));
		jPanelOpts.setMinimumSize(new java.awt.Dimension(195, 30));
		jPanelOpts.setPreferredSize(new java.awt.Dimension(195, 30));
		jLabelRow.setForeground(new java.awt.Color(51, 0, 102));
		jLabelRow.setText("Linha");
		jPanelOpts.add(jLabelRow);

		jTextFieldRow.setColumns(3);
		jTextFieldRow.setForeground(new java.awt.Color(51, 0, 102));
		jPanelOpts.add(jTextFieldRow);

		jLabelCol.setForeground(new java.awt.Color(51, 0, 102));
		jLabelCol.setText("Coluna:");
		jPanelOpts.add(jLabelCol);

		jTextFieldCol.setColumns(3);
		jTextFieldCol.setForeground(new java.awt.Color(51, 0, 102));
		jPanelOpts.add(jTextFieldCol);

		jLabelIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/pt/utl/ist/elab/client/webrobot/customizer/Icons/Paste16.gif")));
		jLabelIcon.setToolTipText("Pressionar para selecionar com o mouse...");
		jLabelIcon.setBorder(new javax.swing.border.EtchedBorder());
		jLabelIcon.addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mousePressed(final java.awt.event.MouseEvent evt) {
				jLabelIconMousePressed(evt);
			}
		});

		jPanelOpts.add(jLabelIcon);

		getContentPane().add(jPanelOpts, java.awt.BorderLayout.CENTER);

		jPanelOkCancel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
		jPanelOkCancel.setForeground(new java.awt.Color(51, 0, 102));
		jPanelOkCancel.setMinimumSize(new java.awt.Dimension(195, 38));
		jPanelOkCancel.setPreferredSize(new java.awt.Dimension(195, 38));
		jButtonOk.setForeground(new java.awt.Color(51, 0, 102));
		jButtonOk.setText("Ok");
		jButtonOk.setPreferredSize(new java.awt.Dimension(73, 26));
		jButtonOk.addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyReleased(final java.awt.event.KeyEvent evt) {
				jButtonOkKeyReleased(evt);
			}
		});

		jButtonOk.addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mousePressed(final java.awt.event.MouseEvent evt) {
				jButtonOkMousePressed(evt);
			}
		});

		jPanelOkCancel.add(jButtonOk);

		jButtonCancel.setForeground(new java.awt.Color(51, 0, 102));
		jButtonCancel.setText("Cancel");
		jButtonCancel.addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mousePressed(final java.awt.event.MouseEvent evt) {
				jButtonCancelMousePressed(evt);
			}
		});

		jPanelOkCancel.add(jButtonCancel);

		getContentPane().add(jPanelOkCancel, java.awt.BorderLayout.SOUTH);

		pack();
	}// GEN-END:initComponents

	private void jLabelIconMousePressed(final java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jLabelIconMousePressed
		setPasting(true);
		closeDialog(null);
	}// GEN-LAST:event_jLabelIconMousePressed

	private void jButtonOkKeyReleased(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jButtonOkKeyReleased
		if (evt.getKeyCode() == 10) {
			jButtonOkMousePressed(null);
		} else if (evt.getKeyCode() == 27) {
			jButtonCancelMousePressed(null);
		}
	}// GEN-LAST:event_jButtonOkKeyReleased

	private void formKeyPressed(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_formKeyPressed
		if (evt.getKeyCode() == 10) {
			jButtonOkMousePressed(null);
		} else if (evt.getKeyCode() == 27) {
			jButtonCancelMousePressed(null);
		}
	}// GEN-LAST:event_formKeyPressed

	private void formMouseClicked(final java.awt.event.MouseEvent evt) {// GEN-FIRST:event_formMouseClicked
		this.requestFocus();
	}// GEN-LAST:event_formMouseClicked

	private void jButtonCancelMousePressed(final java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jButtonCancelMousePressed
		setCancel(true);
		setPasting(false);
		closeDialog(null);
	}// GEN-LAST:event_jButtonCancelMousePressed

	private void jButtonOkMousePressed(final java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jButtonOkMousePressed
		int cp = -1;
		int rp = -1;
		try {
			cp = new Integer(jTextFieldCol.getText()).intValue();
		} catch (final NumberFormatException nfe) {
			javax.swing.JOptionPane.showMessageDialog(this, "Por favor, introduza um n�mero inteiro", "Erro!",
					javax.swing.JOptionPane.ERROR_MESSAGE);
			jTextFieldCol.selectAll();
			jTextFieldCol.requestFocus();
			return;
		}
		try {
			rp = new Integer(jTextFieldRow.getText()).intValue();
		} catch (final NumberFormatException nfe) {
			javax.swing.JOptionPane.showMessageDialog(this, "Por favor, introduza um n�mero inteiro", "Erro!",
					javax.swing.JOptionPane.ERROR_MESSAGE);
			jTextFieldRow.selectAll();
			jTextFieldRow.requestFocus();
			return;
		}
		if (cp < 1) {
			javax.swing.JOptionPane.showMessageDialog(this, "Por favor, introduza um n�mero inteiro maior que zero",
					"Erro!", javax.swing.JOptionPane.ERROR_MESSAGE);
			jTextFieldCol.selectAll();
			jTextFieldCol.requestFocus();
			return;
		}
		if (rp < 1) {
			javax.swing.JOptionPane.showMessageDialog(this, "Por favor, introduza um n�mero inteiro maior que zero",
					"Erro!", javax.swing.JOptionPane.ERROR_MESSAGE);
			jTextFieldRow.selectAll();
			jTextFieldRow.requestFocus();
			return;
		}
		setColumnPaste(cp);
		setRowPaste(rp);
		setCancel(false);
		setPasting(false);
		closeDialog(null);
	}// GEN-LAST:event_jButtonOkMousePressed

	/** Closes the dialog */
	private void closeDialog(final java.awt.event.WindowEvent evt) {// GEN-FIRST:event_closeDialog
		if (evt != null) {
			setCancel(true);
		}
		setVisible(false);
		dispose();
	}// GEN-LAST:event_closeDialog

	// DEBUG!!!!!!!!!!!
	/**
	 * @param args the command line arguments
	 * 
	 *            public static void main(String args[]) { new ConfAtribui(new
	 *            javax.swing.JFrame(), true).show(); }
	 */

	/**
	 * Getter for property cancel.
	 * 
	 * @return Value of property cancel.
	 */
	public boolean isCancel() {
		return cancel;
	}

	/**
	 * Setter for property cancel.
	 * 
	 * @param cancel New value of property cancel.
	 */
	public void setCancel(final boolean cancel) {
		this.cancel = cancel;
	}

	/**
	 * Getter for property columnPaste.
	 * 
	 * @return Value of property columnPaste.
	 */
	public int getColumnPaste() {
		return columnPaste;
	}

	/**
	 * Setter for property columnCopy.
	 * @param columnPaste 
	 * 
	 * @param columnCopy New value of property columnCopy.
	 */
	public void setColumnPaste(final int columnPaste) {
		this.columnPaste = columnPaste;
	}

	/**
	 * Getter for property rowPaste.
	 * 
	 * @return Value of property rowPaste.
	 */
	public int getRowPaste() {
		return rowPaste;
	}

	/**
	 * Setter for property rowPaste.
	 * 
	 * @param columnCopy New value of property rowPaste.
	 */
	public void setRowPaste(final int rowPaste) {
		this.rowPaste = rowPaste;
	}

	/**
	 * Getter for property rowText.
	 * 
	 * @return Value of property rowText.
	 */
	public String getRowText() {
		return rowText;
	}

	/**
	 * Setter for property rowText.
	 * 
	 * @param rowText New value of property rowText.
	 */
	public void setRowText(final String rowText) {
		this.rowText = rowText;
		jTextFieldRow.setText(rowText);
	}

	/**
	 * Getter for property colText.
	 * 
	 * @return Value of property colText.
	 */
	public String getColText() {
		return colText;
	}

	/**
	 * Setter for property colText.
	 * 
	 * @param colText New value of property colText.
	 */
	public void setColText(final String colText) {
		this.colText = colText;
		jTextFieldCol.setText(colText);
	}

	/**
	 * Getter for property pasting.
	 * 
	 * @return Value of property pasting.
	 */
	public boolean isPasting() {
		return pasting;
	}

	/**
	 * Setter for property pasting.
	 * 
	 * @param pasting New value of property pasting.
	 */
	public void setPasting(final boolean pasting) {
		this.pasting = pasting;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel jPanelOpts;
	private javax.swing.JTextField jTextFieldCol;
	private javax.swing.JPanel jPanelOkCancel;
	private javax.swing.JButton jButtonCancel;
	private javax.swing.ButtonGroup buttonGroup;
	private javax.swing.JLabel jLabelCol;
	private javax.swing.JTextField jTextFieldRow;
	private javax.swing.JLabel jLabelRow;
	private javax.swing.JLabel jLabelIcon;
	private javax.swing.JButton jButtonOk;
	// End of variables declaration//GEN-END:variables
	// My variables
	/** Holds value of property cancel. */
	private boolean cancel = false;

	/** Holds value of property columnPaste. */
	private int columnPaste;

	/** Holds value of property rowPaste. */
	private int rowPaste;

	/** Holds value of property rowText. */
	private String rowText;

	/** Holds value of property colText. */
	private String colText;

	/** Holds value of property pasting. */
	private boolean pasting = false;

}
