/*
 * Game.java
 *
 * Created on 8 de Abril de 2003, 20:28
 */

package pt.utl.ist.elab.driver.webrobot.debug;

/**
 * 
 * @author Andr√© Neto - LEFT - IST
 */
public class Game extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6330013247858482497L;

	/** Creates new form Game */
	public Game() {
		initComponents();
		this.requestFocus();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {// GEN-BEGIN:initComponents

		addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyPressed(final java.awt.event.KeyEvent evt) {
				formKeyPressed(evt);
			}
		});

		addWindowListener(new java.awt.event.WindowAdapter() {
			@Override
			public void windowClosing(final java.awt.event.WindowEvent evt) {
				exitForm(evt);
			}
		});

		pack();
	}// GEN-END:initComponents

	private void formKeyPressed(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_formKeyPressed
		if (evt.getKeyChar() == 'w') {
			Game.serialComm.write(80);
			Game.serialComm.write(87);
			Game.serialComm.write(77);
			Game.serialComm.write(170);
			Game.serialComm.write(170);
		} else if (evt.getKeyChar() == 's') {
			Game.serialComm.write(80);
			Game.serialComm.write(87);
			Game.serialComm.write(77);
			Game.serialComm.write(100);
			Game.serialComm.write(100);
		} else if (evt.getKeyChar() == 'o') {
			Game.serialComm.write(80);
			Game.serialComm.write(87);
			Game.serialComm.write(77);
			Game.serialComm.write(127);
			Game.serialComm.write(170);
		} else if (evt.getKeyChar() == 'p') {
			Game.serialComm.write(80);
			Game.serialComm.write(87);
			Game.serialComm.write(77);
			Game.serialComm.write(170);
			Game.serialComm.write(127);
		} else if (evt.getKeyChar() == 'z') {
			Game.serialComm.write(80);
			Game.serialComm.write(87);
			Game.serialComm.write(77);
			Game.serialComm.write(127);
			Game.serialComm.write(127);
		}
	}// GEN-LAST:event_formKeyPressed

	/** Exit the Application */
	private void exitForm(final java.awt.event.WindowEvent evt) {// GEN-FIRST:event_exitForm
		System.exit(0);
	}// GEN-LAST:event_exitForm

	/**
	 * @param args the command line arguments
	 */
	public static void main(final String args[]) {
		new Game().show();
		Game.serialComm = new pt.utl.ist.elab.driver.webrobot.serial.SerialComm();
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	// End of variables declaration//GEN-END:variables
	static pt.utl.ist.elab.driver.webrobot.serial.SerialComm serialComm;
}
