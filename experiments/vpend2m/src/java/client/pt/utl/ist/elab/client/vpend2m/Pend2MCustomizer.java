/*
 * Pend2MCustomizer.java
 *
 * Created on 27 de Fevereiro de 2005, 03:35 AM
 */

package pt.utl.ist.elab.client.vpend2m;

/**
 *
 * @author  Antonio J. R. Figueiredo
 *          Last Review : 6/04/2005
 */
import pt.utl.ist.elab.client.virtual.guipack.GUtils;
import pt.utl.ist.elab.client.virtual.guipack.InteractiveMenu;

import com.linkare.rec.data.config.HardwareAcquisitionConfig;
import com.linkare.rec.data.synch.Frequency;
import com.linkare.rec.impl.client.customizer.AbstractCustomizer;

public class Pend2MCustomizer extends AbstractCustomizer implements InteractiveMenu {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1218049831863564059L;
	private InteractivePend2M pend2m;

	/** Creates new form Pend2MCustomizer */
	public Pend2MCustomizer() {
		initComponents();

		java.awt.GridBagConstraints gridBagConstraints;

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridheight = 1;
		gridBagConstraints.gridwidth = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1;
		gridBagConstraints.weighty = 1;
		mainPanel.add(pend2m = new InteractivePend2M(this), gridBagConstraints);
		pend2m.start();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {// GEN-BEGIN:initComponents
		java.awt.GridBagConstraints gridBagConstraints;

		btnPanel = new javax.swing.JPanel();
		controlBtnPanel = new javax.swing.JPanel();
		okButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();
		defConfBtnPanel = new javax.swing.JPanel();
		defaultButton = new javax.swing.JButton();
		mainPanel = new javax.swing.JPanel();
		mainTabbedPane = new javax.swing.JTabbedPane();
		mainEditPanel = new javax.swing.JPanel();
		editPanel = new javax.swing.JPanel();
		editSlider = new javax.swing.JSlider();
		editTextField = new javax.swing.JTextField();
		editLabel = new javax.swing.JLabel();
		phySettingsPanel = new javax.swing.JPanel();
		gPanel = new javax.swing.JPanel();
		gSlider = new javax.swing.JSlider();
		gTextField = new javax.swing.JTextField();
		m2Panel = new javax.swing.JPanel();
		m2Slider = new javax.swing.JSlider();
		m2TextField = new javax.swing.JTextField();
		m1Panel = new javax.swing.JPanel();
		m1Slider = new javax.swing.JSlider();
		m1TextField = new javax.swing.JTextField();
		simulSettingsPanel = new javax.swing.JPanel();
		tbsPanel = new javax.swing.JPanel();
		tbsSlider = new javax.swing.JSlider();
		tbsTextField = new javax.swing.JTextField();
		samplesPanel = new javax.swing.JPanel();
		samplesSlider = new javax.swing.JSlider();
		samplesTextField = new javax.swing.JTextField();

		setLayout(new java.awt.GridBagLayout());

		setMinimumSize(new java.awt.Dimension(600, 600));
		setPreferredSize(new java.awt.Dimension(600, 600));
		btnPanel.setLayout(new java.awt.GridBagLayout());

		okButton.setText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
				.getString("rec.exp.customizer.title.ok"));
		okButton.setToolTipText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
				.getString("rec.exp.customizer.tip.ok"));
		okButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(final java.awt.event.ActionEvent evt) {
				okButtonActionPerformed(evt);
			}
		});

		controlBtnPanel.add(okButton);

		cancelButton.setText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
				.getString("rec.exp.customizer.title.cancel"));
		cancelButton.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.cancel"));
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(final java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		controlBtnPanel.add(cancelButton);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.weightx = 1.0;
		btnPanel.add(controlBtnPanel, gridBagConstraints);

		defaultButton.setText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
				.getString("rec.exp.customizer.title.dfc"));
		defaultButton.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.dfc"));
		defaultButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(final java.awt.event.ActionEvent evt) {
				defaultButtonActionPerformed(evt);
			}
		});

		defConfBtnPanel.add(defaultButton);

		btnPanel.add(defConfBtnPanel, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(btnPanel, gridBagConstraints);

		mainPanel.setLayout(new java.awt.GridBagLayout());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		add(mainPanel, gridBagConstraints);

		mainEditPanel.setLayout(new java.awt.GridBagLayout());

		mainEditPanel.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED,
				new java.awt.Color(255, 153, 0), new java.awt.Color(255, 153, 0), new java.awt.Color(255, 153, 0),
				new java.awt.Color(255, 153, 0)));
		mainEditPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.22"));
		mainEditPanel.setMinimumSize(new java.awt.Dimension(300, 100));
		mainEditPanel.setPreferredSize(new java.awt.Dimension(300, 200));
		mainEditPanel.setEnabled(false);
		editPanel.setLayout(new java.awt.GridBagLayout());

		editPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.title.23")));
		editPanel.setToolTipText(java.util.ResourceBundle
				.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.23"));
		editPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		editPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		editSlider.setMajorTickSpacing(60);
		editSlider.setMaximum(360);
		editSlider.setMinorTickSpacing(12);
		editSlider.setPaintLabels(true);
		editSlider.setPaintTicks(true);
		editSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.23"));
		editSlider.setValue(0);
		editSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		editSlider.setEnabled(false);
		editSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				editSliderStateChanged(evt);
			}
		});
		editSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
			public void mouseDragged(final java.awt.event.MouseEvent evt) {
				editSliderMouseDragged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		editPanel.add(editSlider, gridBagConstraints);

		editTextField.setColumns(4);
		editTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		editTextField.setText("0");
		editTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.23"));
		editTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(final java.awt.event.FocusEvent evt) {
				editTextFieldFocusLost(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		editPanel.add(editTextField, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		mainEditPanel.add(editPanel, gridBagConstraints);

		editLabel.setFont(new java.awt.Font("MS Sans Serif", 0, 24));
		editLabel.setForeground(new java.awt.Color(255, 102, 102));
		editLabel.setText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
				.getString("rec.exp.customizer.title.23"));
		editLabel.setToolTipText(java.util.ResourceBundle
				.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.23"));
		editLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		mainEditPanel.add(editLabel, gridBagConstraints);

		mainTabbedPane.addTab(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.title.6"),
				null,
				mainEditPanel,
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.tip.6"));

		phySettingsPanel.setLayout(new java.awt.GridBagLayout());

		phySettingsPanel.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED,
				new java.awt.Color(255, 153, 0), new java.awt.Color(255, 153, 0), new java.awt.Color(255, 153, 0),
				new java.awt.Color(255, 153, 0)));
		gPanel.setLayout(new java.awt.GridBagLayout());

		gPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.title.1")));
		gPanel.setToolTipText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
				.getString("rec.exp.customizer.tip.1"));
		gPanel.setPreferredSize(new java.awt.Dimension(82, 224));
		gSlider.setMajorTickSpacing(50);
		gSlider.setMaximum(500);
		gSlider.setMinorTickSpacing(10);
		gSlider.setPaintLabels(true);
		gSlider.setPaintTicks(true);
		gSlider.setToolTipText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
				.getString("rec.exp.customizer.tip.1"));
		gSlider.setValue(98);
		gSlider.setMinimumSize(new java.awt.Dimension(200, 47));
		gSlider.setRequestFocusEnabled(false);
		gSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				gSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gPanel.add(gSlider, gridBagConstraints);

		gTextField.setColumns(4);
		gTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		gTextField.setText("98");
		gTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.1"));
		gTextField.setMinimumSize(new java.awt.Dimension(43, 20));
		gTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(final java.awt.event.FocusEvent evt) {
				gTextFieldFocusLost(evt);
			}
		});

		gPanel.add(gTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		phySettingsPanel.add(gPanel, gridBagConstraints);

		m2Panel.setLayout(new java.awt.GridBagLayout());

		m2Panel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.title.3")));
		m2Panel.setToolTipText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
				.getString("rec.exp.customizer.tip.3"));
		m2Panel.setPreferredSize(new java.awt.Dimension(82, 224));
		m2Slider.setMajorTickSpacing(50);
		m2Slider.setMaximum(501);
		m2Slider.setMinimum(1);
		m2Slider.setMinorTickSpacing(10);
		m2Slider.setPaintLabels(true);
		m2Slider.setPaintTicks(true);
		m2Slider.setToolTipText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
				.getString("rec.exp.customizer.tip.3"));
		m2Slider.setValue(100);
		m2Slider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				m2SliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		m2Panel.add(m2Slider, gridBagConstraints);

		m2TextField.setColumns(4);
		m2TextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		m2TextField.setText("100");
		m2TextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.3"));
		m2TextField.setMinimumSize(new java.awt.Dimension(43, 20));
		m2TextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(final java.awt.event.FocusEvent evt) {
				m2TextFieldFocusLost(evt);
			}
		});

		m2Panel.add(m2TextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		phySettingsPanel.add(m2Panel, gridBagConstraints);

		m1Panel.setLayout(new java.awt.GridBagLayout());

		m1Panel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.title.2")));
		m1Panel.setToolTipText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
				.getString("rec.exp.customizer.tip.2"));
		m1Panel.setPreferredSize(new java.awt.Dimension(82, 224));
		m1Slider.setMajorTickSpacing(50);
		m1Slider.setMaximum(501);
		m1Slider.setMinimum(1);
		m1Slider.setMinorTickSpacing(10);
		m1Slider.setPaintLabels(true);
		m1Slider.setPaintTicks(true);
		m1Slider.setToolTipText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
				.getString("rec.exp.customizer.tip.2"));
		m1Slider.setValue(100);
		m1Slider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				m1SliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		m1Panel.add(m1Slider, gridBagConstraints);

		m1TextField.setColumns(4);
		m1TextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		m1TextField.setText("100");
		m1TextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.2"));
		m1TextField.setMinimumSize(new java.awt.Dimension(43, 20));
		m1TextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(final java.awt.event.FocusEvent evt) {
				m1TextFieldFocusLost(evt);
			}
		});

		m1Panel.add(m1TextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		phySettingsPanel.add(m1Panel, gridBagConstraints);

		mainTabbedPane.addTab(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.title.4"),
				null,
				phySettingsPanel,
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.tip.4"));

		simulSettingsPanel.setLayout(new java.awt.GridBagLayout());

		simulSettingsPanel.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED,
				new java.awt.Color(255, 153, 0), new java.awt.Color(255, 153, 0), new java.awt.Color(255, 153, 0),
				new java.awt.Color(255, 153, 0)));
		tbsPanel.setLayout(new java.awt.GridBagLayout());

		tbsPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.title.tbs")));
		tbsPanel.setToolTipText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
				.getString("rec.exp.customizer.tip.tbs"));
		tbsPanel.setPreferredSize(new java.awt.Dimension(82, 224));
		tbsSlider.setMajorTickSpacing(50);
		tbsSlider.setMaximum(500);
		tbsSlider.setMinimum(50);
		tbsSlider.setMinorTickSpacing(10);
		tbsSlider.setPaintLabels(true);
		tbsSlider.setPaintTicks(true);
		tbsSlider
				.setToolTipText(java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages")
						.getString("rec.exp.customizer.tip.tbs"));
		tbsSlider.setValue(100);
		tbsSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				tbsSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		tbsPanel.add(tbsSlider, gridBagConstraints);

		tbsTextField.setColumns(4);
		tbsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		tbsTextField.setText("100");
		tbsTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.tbs"));
		tbsTextField.setMinimumSize(new java.awt.Dimension(43, 20));
		tbsTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(final java.awt.event.FocusEvent evt) {
				tbsTextFieldFocusLost(evt);
			}
		});

		tbsPanel.add(tbsTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
		simulSettingsPanel.add(tbsPanel, gridBagConstraints);

		samplesPanel.setLayout(new java.awt.GridBagLayout());

		samplesPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.title.samples")));
		samplesPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.samples"));
		samplesPanel.setMinimumSize(new java.awt.Dimension(82, 83));
		samplesPanel.setPreferredSize(new java.awt.Dimension(82, 224));
		samplesSlider.setMajorTickSpacing(200);
		samplesSlider.setMaximum(950);
		samplesSlider.setMinimum(50);
		samplesSlider.setMinorTickSpacing(50);
		samplesSlider.setPaintLabels(true);
		samplesSlider.setPaintTicks(true);
		samplesSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.samples"));
		samplesSlider.setValue(200);
		samplesSlider.setMinimumSize(new java.awt.Dimension(200, 47));
		samplesSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				samplesSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		samplesPanel.add(samplesSlider, gridBagConstraints);

		samplesTextField.setColumns(4);
		samplesTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		samplesTextField.setText("200");
		samplesTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.tip.samples"));
		samplesTextField.setMinimumSize(new java.awt.Dimension(43, 20));
		samplesTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(final java.awt.event.FocusEvent evt) {
				samplesTextFieldFocusLost(evt);
			}
		});

		samplesPanel.add(samplesTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		simulSettingsPanel.add(samplesPanel, gridBagConstraints);

		mainTabbedPane.addTab(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.title.5"),
				null,
				simulSettingsPanel,
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.tip.5"));

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(mainTabbedPane, gridBagConstraints);

	}// GEN-END:initComponents

	private void m2TextFieldFocusLost(final java.awt.event.FocusEvent evt) {// GEN-FIRST:event_m2TextFieldFocusLost
		try {
			final double val = GUtils.validateInput(m2TextField, m2Slider, 1);
		} catch (final NumberFormatException e) {
			m2TextField.setText(Integer.toString(m2Slider.getValue()));
		}
	}// GEN-LAST:event_m2TextFieldFocusLost

	private void m1TextFieldFocusLost(final java.awt.event.FocusEvent evt) {// GEN-FIRST:event_m1TextFieldFocusLost
		try {
			final double val = GUtils.validateInput(m1TextField, m1Slider, 1);
		} catch (final NumberFormatException e) {
			m1TextField.setText(Integer.toString(m1Slider.getValue()));
		}
	}// GEN-LAST:event_m1TextFieldFocusLost

	private void gTextFieldFocusLost(final java.awt.event.FocusEvent evt) {// GEN-FIRST:event_gTextFieldFocusLost
		try {
			final double val = GUtils.validateInput(gTextField, gSlider, 1);
		} catch (final NumberFormatException e) {
			gTextField.setText(Integer.toString(gSlider.getValue()));
		}
	}// GEN-LAST:event_gTextFieldFocusLost

	private void samplesTextFieldFocusLost(final java.awt.event.FocusEvent evt) {// GEN-FIRST:event_samplesTextFieldFocusLost
		try {
			final double val = GUtils.validateInput(samplesTextField, samplesSlider, 1);
		} catch (final NumberFormatException e) {
			samplesTextField.setText(Integer.toString(samplesSlider.getValue()));
		}
	}// GEN-LAST:event_samplesTextFieldFocusLost

	private void tbsTextFieldFocusLost(final java.awt.event.FocusEvent evt) {// GEN-FIRST:event_tbsTextFieldFocusLost
		try {
			final double val = GUtils.validateInput(tbsTextField, tbsSlider, 1);
		} catch (final NumberFormatException e) {
			tbsTextField.setText(Integer.toString(tbsSlider.getValue()));
		}
	}// GEN-LAST:event_tbsTextFieldFocusLost

	private void samplesSliderStateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_samplesSliderStateChanged
		samplesTextField.setText("" + samplesSlider.getValue());
	}// GEN-LAST:event_samplesSliderStateChanged

	private void tbsSliderStateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_tbsSliderStateChanged
		tbsTextField.setText("" + tbsSlider.getValue());
	}// GEN-LAST:event_tbsSliderStateChanged

	private void m2SliderStateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_m2SliderStateChanged
		m2TextField.setText("" + m2Slider.getValue());
	}// GEN-LAST:event_m2SliderStateChanged

	private void m1SliderStateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_m1SliderStateChanged
		m1TextField.setText("" + m1Slider.getValue());
	}// GEN-LAST:event_m1SliderStateChanged

	private void gSliderStateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_gSliderStateChanged
		gTextField.setText("" + gSlider.getValue());
	}// GEN-LAST:event_gSliderStateChanged

	public void actionPerformed(final java.awt.event.ActionEvent e) {
		if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.editMenu.title.1"))) {
			updateEditPanel(
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.title.1"),
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.tip.1"), (int) Math.round(Math.toDegrees(pend2m.getTheta())),
					new int[] { 60, 180, -180, 20 });
		} else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.editMenu.title.2"))) {
			updateEditPanel(
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.title.2"),
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.tip.2"), (int) Math.round(Math.toDegrees(pend2m
							.getThetaVecVel())), new int[] { 60, 360, -360, 20 });
		} else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.editMenu.title.3"))) {
			updateEditPanel(
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.title.3"),
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.tip.3"), (int) Math.round(Math.toDegrees(pend2m.getPhi())),
					new int[] { 60, 180, -180, 20 });
		} else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.editMenu.title.4"))) {
			updateEditPanel(
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.title.4"),
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.tip.4"), (int) Math.round(Math.toDegrees(pend2m
							.getPhiVecVel())), new int[] { 60, 360, -360, 20 });
		} else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.editMenu.title.5"))) {
			updateEditPanel(
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.title.5"),
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.tip.5"), (int) Math.round(pend2m.getL1() * 10), new int[] {
							10, 151, 1, 2 });
		} else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.editMenu.title.6"))) {
			updateEditPanel(
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.title.6"),
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.tip.6"), (int) Math.round(pend2m.getL2() * 10), new int[] {
							10, 151, 1, 2 });
		} else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.editMenu.title.7"))) {
			updateEditPanel(
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.title.7"),
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.tip.7"), (int) Math.round(100 * pend2m.getFreq()), new int[] {
							10, 100, 0, 2 });
		} else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.editMenu.title.8"))) {
			updateEditPanel(
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.title.8"),
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.tip.8"), (int) Math.round(Math.toDegrees(pend2m.getFase())),
					new int[] { 60, 180, -180, 20 });
		} else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.editMenu.title.9"))) {
			updateEditPanel(
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.title.9"),
					java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
							"rec.exp.customizer.editPanel.tip.9"), (int) Math.round(pend2m.getAmp() * 10), new int[] {
							10, 150, 0, 2 });
			/*
			 * else if (e.getActionCommand().equalsIgnoreCase("Ok")){
			 * mainPanel.remove(mainPanel.getComponentCount()-1);
			 * pend2m.setVisible(true); //if (stateCheckBoxMenuItem.isSelected()
			 * || xCheckBoxMenuItem.isSelected() ||
			 * thetaCheckBoxMenuItem.isSelected()) //
			 * mainTabbedPane.setVisible(true); //viewMenu.setEnabled(true);
			 * //helpMenu.setEnabled(true); //fileMenu.setEnabled(true); }
			 */
		}
	}

	private void updateEditPanel(final String strTitle, final String strTip, final int val, final int[] sliderConfig) {
		editPanel.remove(editSlider);
		editSlider = new javax.swing.JSlider();
		editSlider.setMaximum(sliderConfig[1]);
		editSlider.setMinimum(sliderConfig[2]);
		editSlider.setMinorTickSpacing(sliderConfig[3]);
		editSlider.setMajorTickSpacing(sliderConfig[0]);
		editSlider.setPaintLabels(true);
		editSlider.setPaintTicks(true);
		editSlider.setToolTipText(strTip);
		editSlider.setValue(val);
		editSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		editSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				editSliderStateChanged(evt);
			}
		});
		editSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
			public void mouseDragged(final java.awt.event.MouseEvent evt) {
				editSliderMouseDragged(evt);
			}
		});

		final java.awt.GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		editPanel.add(editSlider, gridBagConstraints);

		editTextField.setToolTipText(strTip);
		editTextField.setText(String.valueOf(val));

		// editTextField.setEnabled(animaRadioButton.isSelected());
		// editSlider.setEnabled(animaRadioButton.isSelected());

		editLabel.setVisible(false);
		((javax.swing.border.TitledBorder) editPanel.getBorder()).setTitle(strTitle);
		editPanel.setToolTipText(strTip);
		editPanel.setVisible(true);
		editPanel.updateUI();
	}

	public void update() {
		final String str = ((javax.swing.border.TitledBorder) editPanel.getBorder()).getTitle();

		if (str.equalsIgnoreCase(java.util.ResourceBundle
				.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.editPanel.title.1"))) {
			editSlider.setValue((int) Math.round(Math.toDegrees(pend2m.getTheta())));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.2"))) {
			editSlider.setValue((int) Math.round(Math.toDegrees(pend2m.getThetaVecVel())));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.3"))) {
			editSlider.setValue((int) Math.round(Math.toDegrees(pend2m.getPhi())));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.4"))) {
			editSlider.setValue((int) Math.round(Math.toDegrees(pend2m.getPhiVecVel())));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.8"))) {
			editSlider.setValue((int) Math.round(Math.toDegrees(pend2m.getFase())));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.9"))) {
			editSlider.setValue((int) Math.round(pend2m.getAmp() * 10));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.5"))) {
			editSlider.setValue((int) Math.round(pend2m.getL1() * 10));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.6"))) {
			editSlider.setValue((int) Math.round(pend2m.getL2() * 10));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.7"))) {
			editSlider.setValue((int) Math.round(100 * pend2m.getFreq()));
		}
	}

	private void editSet(final String str, final double val) {
		if (str.equalsIgnoreCase(java.util.ResourceBundle
				.getBundle("pt/utl/ist/elab/client/vpend2m/resources/messages").getString(
						"rec.exp.customizer.editPanel.title.1"))) {
			pend2m.setTheta(Math.toRadians(val));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.2"))) {
			pend2m.setThetaVecVel(Math.toRadians(val));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.3"))) {
			pend2m.setPhi(Math.toRadians(val));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.4"))) {
			pend2m.setPhiVecVel(Math.toRadians(val));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.5"))) {
			pend2m.setL1(val / 10d);
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.6"))) {
			pend2m.setL2(val / 10d);
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.7"))) {
			pend2m.setFreq(val / 100d);
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.8"))) {
			pend2m.setFase(Math.toRadians(val));
		} else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vpend2m/resources/messages").getString("rec.exp.customizer.editPanel.title.9"))) {
			pend2m.setAmp(val / 10d);
		}
	}

	private void editTextFieldFocusLost(final java.awt.event.FocusEvent evt) {// GEN-FIRST:event_editTextFieldFocusLost
		try {
			final double val = GUtils.validateInput(editTextField, editSlider, 1);
			editSet(((javax.swing.border.TitledBorder) editPanel.getBorder()).getTitle(), val);
		} catch (final NumberFormatException e) {
			editTextField.setText(Integer.toString(editSlider.getValue()));
		}
	}// GEN-LAST:event_editTextFieldFocusLost

	private void editSliderMouseDragged(final java.awt.event.MouseEvent evt) {// GEN-FIRST:event_editSliderMouseDragged
		editSet(((javax.swing.border.TitledBorder) editPanel.getBorder()).getTitle(), editSlider.getValue());
	}// GEN-LAST:event_editSliderMouseDragged

	private void editSliderStateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_editSliderStateChanged
		editTextField.setText("" + editSlider.getValue());
	}// GEN-LAST:event_editSliderStateChanged

	private void cancelButtonActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonActionPerformed
		fireICustomizerListenerCanceled();
	}// GEN-LAST:event_cancelButtonActionPerformed

	private void okButtonActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_okButtonActionPerformed

		final double m1 = (double) m1Slider.getValue() / 100d;
		final double m2 = (double) m2Slider.getValue() / 100d;
		final double g = (double) gSlider.getValue() / 10d;

		final double theta = pend2m.getTheta();
		final double phi = pend2m.getPhi();
		final double thetaDot = pend2m.getThetaVecVel();
		final double phiDot = pend2m.getPhiVecVel();
		final double l1 = pend2m.getL1();
		final double l2 = pend2m.getL2();
		final double a = pend2m.getAmp();
		final double fase = pend2m.getFase();
		final double w = pend2m.getFreq();

		getAcquisitionConfig().setSelectedFrequency(new Frequency((double) tbsSlider.getValue(), getHardwareInfo()
				.getHardwareFrequencies(0).getMinimumFrequency().getMultiplier(), getHardwareInfo()
				.getHardwareFrequencies(0).getMinimumFrequency().getFrequencyDefType()));
		getAcquisitionConfig().setTotalSamples(samplesSlider.getValue());

		getAcquisitionConfig().getSelectedHardwareParameter("m1").setParameterValue("" + (float) m1);
		getAcquisitionConfig().getSelectedHardwareParameter("m2").setParameterValue("" + (float) m2);
		getAcquisitionConfig().getSelectedHardwareParameter("g").setParameterValue("" + (float) g);

		getAcquisitionConfig().getSelectedHardwareParameter("theta").setParameterValue("" + (float) theta);
		getAcquisitionConfig().getSelectedHardwareParameter("phi").setParameterValue("" + (float) phi);
		getAcquisitionConfig().getSelectedHardwareParameter("thetaDot").setParameterValue("" + (float) thetaDot);
		getAcquisitionConfig().getSelectedHardwareParameter("phiDot").setParameterValue("" + (float) phiDot);
		getAcquisitionConfig().getSelectedHardwareParameter("l1").setParameterValue("" + (float) l1);
		getAcquisitionConfig().getSelectedHardwareParameter("l2").setParameterValue("" + (float) l2);
		getAcquisitionConfig().getSelectedHardwareParameter("a").setParameterValue("" + (float) a);
		getAcquisitionConfig().getSelectedHardwareParameter("fase").setParameterValue("" + (float) fase);
		getAcquisitionConfig().getSelectedHardwareParameter("w").setParameterValue("" + (float) w);

		for (int i = 0; i < getAcquisitionConfig().getSelectedHardwareParameters().length; i++) {
			System.out.println(getAcquisitionConfig().getSelectedHardwareParameters(i).getParameterName() + " = "
					+ getAcquisitionConfig().getSelectedHardwareParameters(i).getParameterValue());
		}

		fireICustomizerListenerDone();
	}// GEN-LAST:event_okButtonActionPerformed

	private void defaultButtonActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_defaultButtonActionPerformed
		tbsSlider.setValue(100);
		samplesSlider.setValue(200);

		m1Slider.setValue(100);
		m2Slider.setValue(100);
		gSlider.setValue(98);

		pend2m.config(Math.toRadians(-45), Math.toRadians(-59), 1.7, -1.7, 5.7, 5.8, 5, 0, .1);

		update();
	}// GEN-LAST:event_defaultButtonActionPerformed

	public static void main(final String args[]) {
		final javax.swing.JFrame test = new javax.swing.JFrame();
		test.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(final java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		test.getContentPane().add(new Pend2MCustomizer());
		test.pack();
		test.setVisible(true);
	}

	// ****************************REC********************************************/

	@Override
	public void setHardwareAcquisitionConfig(final HardwareAcquisitionConfig acqConfig) {
		super.setHardwareAcquisitionConfig(acqConfig);
		if (acqConfig != null) {
			// samplesSlider.setValue(acqConfig.getTotalSamples());
			// tbsSlider.setValue((int)
			// acqConfig.getSelectedFrequency().getFrequency());

			m1Slider.setValue((int) Math.round(Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("m1")) * 100));
			m2Slider.setValue((int) Math.round(Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("m2")) * 100));
			gSlider.setValue((int) Math.round(Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("g")) * 10));

			final float theta = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("theta"));
			final float phi = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("phi"));
			final float thetaDot = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("thetaDot"));
			final float phiDot = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("phiDot"));
			final float l1 = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("l1"));
			final float l2 = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("l2"));
			final float a = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("a"));
			final float fase = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("fase"));
			final float w = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("w"));

			pend2m.config(theta, phi, thetaDot, phiDot, l1, l2, a, fase, w);

			update();
		}
	}

	
	public javax.swing.ImageIcon getCustomizerIcon() {
		return new javax.swing.ImageIcon(getClass().getResource(
				"/pt/utl/ist/elab/client/vpend2m/resources/pend2m_iconified.PNG"));
	}

	public String getCustomizerTitle() {
		return "Motorized Double Pendulum Configuration Utility";
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel btnPanel;
	private javax.swing.JButton cancelButton;
	private javax.swing.JPanel controlBtnPanel;
	private javax.swing.JPanel defConfBtnPanel;
	private javax.swing.JButton defaultButton;
	private javax.swing.JLabel editLabel;
	private javax.swing.JPanel editPanel;
	private javax.swing.JSlider editSlider;
	private javax.swing.JTextField editTextField;
	private javax.swing.JPanel gPanel;
	private javax.swing.JSlider gSlider;
	private javax.swing.JTextField gTextField;
	private javax.swing.JPanel m1Panel;
	private javax.swing.JSlider m1Slider;
	private javax.swing.JTextField m1TextField;
	private javax.swing.JPanel m2Panel;
	private javax.swing.JSlider m2Slider;
	private javax.swing.JTextField m2TextField;
	private javax.swing.JPanel mainEditPanel;
	private javax.swing.JPanel mainPanel;
	private javax.swing.JTabbedPane mainTabbedPane;
	private javax.swing.JButton okButton;
	private javax.swing.JPanel phySettingsPanel;
	private javax.swing.JPanel samplesPanel;
	private javax.swing.JSlider samplesSlider;
	private javax.swing.JTextField samplesTextField;
	private javax.swing.JPanel simulSettingsPanel;
	private javax.swing.JPanel tbsPanel;
	private javax.swing.JSlider tbsSlider;
	private javax.swing.JTextField tbsTextField;
	// End of variables declaration//GEN-END:variables

}
