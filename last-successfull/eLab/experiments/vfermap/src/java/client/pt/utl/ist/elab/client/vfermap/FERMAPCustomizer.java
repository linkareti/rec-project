/*
 * FERMAPCustomizer.java
 *
 * Created on October 27, 2004, 03:35 AM
 */

package pt.utl.ist.elab.client.vfermap;

/*
 * @author  Antonio Jose Rodrigues Figueiredo
 *
 */
import pt.utl.ist.elab.client.virtual.guipack.GUtils;
import pt.utl.ist.elab.client.virtual.guipack.InteractiveMenu;

import com.linkare.rec.data.config.HardwareAcquisitionConfig;
import com.linkare.rec.data.metadata.HardwareInfo;
import com.linkare.rec.data.synch.Frequency;
import com.linkare.rec.impl.client.customizer.ICustomizerListener;

public class FERMAPCustomizer extends javax.swing.JPanel implements com.linkare.rec.impl.client.customizer.ICustomizer,
		InteractiveMenu {

	private InteractiveFERMAPAnima fermAnima;
	private int nSamples = 10;
	private int tbs = 1;

	/** Creates new form CGCustomizer */
	public FERMAPCustomizer() {
		initComponents();

		java.awt.GridBagConstraints gridBagConstraints;

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridheight = 1;
		gridBagConstraints.gridwidth = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1;
		gridBagConstraints.weighty = 1;
		mainPanel.add(fermAnima = new InteractiveFERMAPAnima(this), gridBagConstraints);
		fermAnima.start();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {// GEN-BEGIN:initComponents
		java.awt.GridBagConstraints gridBagConstraints;

		expButtonGroup = new javax.swing.ButtonGroup();
		constsButtonGroup = new javax.swing.ButtonGroup();
		configPanel = new javax.swing.JPanel();
		staticPanel = new javax.swing.JPanel();
		staticRadioButton = new javax.swing.JRadioButton();
		nonStaticRadioButton = new javax.swing.JRadioButton();
		simulPanel = new javax.swing.JPanel();
		mapRadioButton = new javax.swing.JRadioButton();
		animaRadioButton = new javax.swing.JRadioButton();
		histRadioButton = new javax.swing.JRadioButton();
		mapaTabbedPane = new javax.swing.JTabbedPane();
		generalPanel = new javax.swing.JPanel();
		pcorPanel = new javax.swing.JPanel();
		pcorSlider = new javax.swing.JSlider();
		pcorTextField = new javax.swing.JTextField();
		iterPanel = new javax.swing.JPanel();
		iterSlider = new javax.swing.JSlider();
		iterTextField = new javax.swing.JTextField();
		mPanel = new javax.swing.JPanel();
		mSlider = new javax.swing.JSlider();
		mTextField = new javax.swing.JTextField();
		mainPsiPanel = new javax.swing.JPanel();
		psiPanel = new javax.swing.JPanel();
		psiSlider = new javax.swing.JSlider();
		psiTextField = new javax.swing.JTextField();
		nPsiPanel = new javax.swing.JPanel();
		nPsiSlider = new javax.swing.JSlider();
		nPsiTextField = new javax.swing.JTextField();
		dPsiPanel = new javax.swing.JPanel();
		dPsiSlider = new javax.swing.JSlider();
		dPsiTextField = new javax.swing.JTextField();
		mainUMapaPanel = new javax.swing.JPanel();
		uMapaPanel = new javax.swing.JPanel();
		uMapaSlider = new javax.swing.JSlider();
		uMapaTextField = new javax.swing.JTextField();
		nUMapaPanel = new javax.swing.JPanel();
		nUMapaSlider = new javax.swing.JSlider();
		nUMapaTextField = new javax.swing.JTextField();
		dUMapaPanel = new javax.swing.JPanel();
		dUMapaSlider = new javax.swing.JSlider();
		dUMapaTextField = new javax.swing.JTextField();
		resolutionPanel = new javax.swing.JPanel();
		widthPanel = new javax.swing.JPanel();
		widthSlider = new javax.swing.JSlider();
		widthTextField = new javax.swing.JTextField();
		heightPanel = new javax.swing.JPanel();
		heightSlider = new javax.swing.JSlider();
		heightTextField = new javax.swing.JTextField();
		pixSizePanel = new javax.swing.JPanel();
		pixSizeSlider = new javax.swing.JSlider();
		mainUMaxPanel = new javax.swing.JPanel();
		uMaxPanel = new javax.swing.JPanel();
		uMaxSlider = new javax.swing.JSlider();
		uMaxTextField = new javax.swing.JTextField();
		uMaxCheckBox = new javax.swing.JCheckBox();
		btnPanel = new javax.swing.JPanel();
		controlBtnPanel = new javax.swing.JPanel();
		okButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();
		defConfBtnPanel = new javax.swing.JPanel();
		defaultButton = new javax.swing.JButton();
		mainEditPanel = new javax.swing.JPanel();
		editPanel = new javax.swing.JPanel();
		editSlider = new javax.swing.JSlider();
		editTextField = new javax.swing.JTextField();
		editLabel = new javax.swing.JLabel();
		mainPanel = new javax.swing.JPanel();

		setLayout(new java.awt.GridBagLayout());

		setMinimumSize(new java.awt.Dimension(600, 600));
		setPreferredSize(new java.awt.Dimension(600, 600));
		configPanel.setLayout(new java.awt.GridBagLayout());

		configPanel.setMinimumSize(new java.awt.Dimension(290, 400));
		configPanel.setPreferredSize(new java.awt.Dimension(290, 400));
		staticPanel.setLayout(new java.awt.GridBagLayout());

		staticPanel
				.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.BevelBorder(
						javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 153), new java.awt.Color(0,
								51, 153), new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153)),
						java.util.ResourceBundle.getBundle(
								"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
								"rec.exp.customizer.title.1")));
		staticPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.1"));
		staticPanel.setMinimumSize(new java.awt.Dimension(290, 50));
		staticPanel.setPreferredSize(new java.awt.Dimension(290, 50));
		staticRadioButton
				.setText(java.util.ResourceBundle.getBundle(
						"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
						"rec.exp.customizer.title.2"));
		staticRadioButton.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.2"));
		expButtonGroup.add(staticRadioButton);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.weightx = 1.0;
		staticPanel.add(staticRadioButton, gridBagConstraints);

		nonStaticRadioButton.setSelected(true);
		nonStaticRadioButton
				.setText(java.util.ResourceBundle.getBundle(
						"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
						"rec.exp.customizer.title.3"));
		nonStaticRadioButton.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.3"));
		expButtonGroup.add(nonStaticRadioButton);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.weightx = 1.0;
		staticPanel.add(nonStaticRadioButton, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		configPanel.add(staticPanel, gridBagConstraints);

		simulPanel.setLayout(new java.awt.GridBagLayout());

		simulPanel
				.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.BevelBorder(
						javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 153), new java.awt.Color(0,
								51, 153), new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153)),
						java.util.ResourceBundle.getBundle(
								"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
								"rec.exp.customizer.title.4")));
		simulPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.4"));
		simulPanel.setMinimumSize(new java.awt.Dimension(290, 100));
		simulPanel.setPreferredSize(new java.awt.Dimension(290, 100));
		mapRadioButton.setSelected(true);
		mapRadioButton.setText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.24"));
		mapRadioButton.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.24"));
		constsButtonGroup.add(mapRadioButton);
		mapRadioButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		mapRadioButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				mapRadioButtonActionPerformed(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		simulPanel.add(mapRadioButton, gridBagConstraints);

		animaRadioButton.setText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.25"));
		animaRadioButton.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.25"));
		constsButtonGroup.add(animaRadioButton);
		animaRadioButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		animaRadioButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				animaRadioButtonActionPerformed(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		simulPanel.add(animaRadioButton, gridBagConstraints);

		histRadioButton.setText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.26"));
		histRadioButton.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.26"));
		constsButtonGroup.add(histRadioButton);
		histRadioButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		histRadioButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				histRadioButtonActionPerformed(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		simulPanel.add(histRadioButton, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		configPanel.add(simulPanel, gridBagConstraints);

		mapaTabbedPane
				.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.BevelBorder(
						javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 153), new java.awt.Color(0,
								51, 153), new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153)),
						java.util.ResourceBundle.getBundle(
								"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
								"rec.exp.customizer.title.5")));
		mapaTabbedPane.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.5"));
		mapaTabbedPane.setMinimumSize(new java.awt.Dimension(290, 293));
		mapaTabbedPane.setPreferredSize(new java.awt.Dimension(290, 293));
		generalPanel.setLayout(new java.awt.GridBagLayout());

		generalPanel.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED,
				new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153),
				new java.awt.Color(0, 51, 153)));
		generalPanel.setMinimumSize(new java.awt.Dimension(290, 90));
		generalPanel.setPreferredSize(new java.awt.Dimension(290, 90));
		pcorPanel.setLayout(new java.awt.GridBagLayout());

		pcorPanel
				.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
						"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
						"rec.exp.customizer.title.8")));
		pcorPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.8"));
		pcorPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		pcorPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		pcorSlider.setMajorTickSpacing(200);
		pcorSlider.setMaximum(1000);
		pcorSlider.setMinorTickSpacing(50);
		pcorSlider.setPaintLabels(true);
		pcorSlider.setPaintTicks(true);
		pcorSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.8"));
		pcorSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		pcorSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				pcorSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		pcorPanel.add(pcorSlider, gridBagConstraints);

		pcorTextField.setColumns(4);
		pcorTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		pcorTextField.setText("50");
		pcorTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.8"));
		pcorTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				pcorTextFieldFocusLost(evt);
			}
		});

		pcorPanel.add(pcorTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		generalPanel.add(pcorPanel, gridBagConstraints);

		iterPanel.setLayout(new java.awt.GridBagLayout());

		iterPanel
				.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
						"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
						"rec.exp.customizer.title.9")));
		iterPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.9"));
		iterPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		iterPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		iterSlider.setMajorTickSpacing(40);
		iterSlider.setMaximum(201);
		iterSlider.setMinimum(1);
		iterSlider.setMinorTickSpacing(20);
		iterSlider.setPaintLabels(true);
		iterSlider.setPaintTicks(true);
		iterSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.9"));
		iterSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		iterSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				iterSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		iterPanel.add(iterSlider, gridBagConstraints);

		iterTextField.setColumns(4);
		iterTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		iterTextField.setText("50");
		iterTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.9"));
		iterTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				iterTextFieldFocusLost(evt);
			}
		});

		iterPanel.add(iterTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		generalPanel.add(iterPanel, gridBagConstraints);

		mPanel.setLayout(new java.awt.GridBagLayout());

		mPanel
				.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
						"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
						"rec.exp.customizer.title.7")));
		mPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.7"));
		mPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		mPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		mSlider.setMajorTickSpacing(200);
		mSlider.setMaximum(1000);
		mSlider.setMinorTickSpacing(50);
		mSlider.setPaintLabels(true);
		mSlider.setPaintTicks(true);
		mSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.7"));
		mSlider.setValue(160);
		mSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		mSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				mSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		mPanel.add(mSlider, gridBagConstraints);

		mTextField.setColumns(4);
		mTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		mTextField.setText("160");
		mTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.7"));
		mTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				mTextFieldFocusLost(evt);
			}
		});

		mPanel.add(mTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		generalPanel.add(mPanel, gridBagConstraints);

		mapaTabbedPane.addTab(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vfermap/resources/messages")
						.getString("rec.exp.customizer.title.6"), null, generalPanel, java.util.ResourceBundle
						.getBundle("pt/utl/ist/elab/client/vfermap/resources/messages").getString(
								"rec.exp.customizer.tip.6"));

		mainPsiPanel.setLayout(new java.awt.GridBagLayout());

		mainPsiPanel.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED,
				new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153),
				new java.awt.Color(0, 51, 153)));
		mainPsiPanel.setMinimumSize(new java.awt.Dimension(290, 90));
		mainPsiPanel.setPreferredSize(new java.awt.Dimension(290, 90));
		psiPanel.setLayout(new java.awt.GridBagLayout());

		psiPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.11")));
		psiPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.11"));
		psiPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		psiPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		psiSlider.setMajorTickSpacing(60);
		psiSlider.setMaximum(360);
		psiSlider.setMinorTickSpacing(12);
		psiSlider.setPaintLabels(true);
		psiSlider.setPaintTicks(true);
		psiSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.11"));
		psiSlider.setValue(0);
		psiSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		psiSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				psiSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		psiPanel.add(psiSlider, gridBagConstraints);

		psiTextField.setColumns(4);
		psiTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		psiTextField.setText("0");
		psiTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.11"));
		psiTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				psiTextFieldFocusLost(evt);
			}
		});

		psiPanel.add(psiTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		mainPsiPanel.add(psiPanel, gridBagConstraints);

		nPsiPanel.setLayout(new java.awt.GridBagLayout());

		nPsiPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.13")));
		nPsiPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.13"));
		nPsiPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		nPsiPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		nPsiSlider.setMajorTickSpacing(5);
		nPsiSlider.setMaximum(31);
		nPsiSlider.setMinimum(1);
		nPsiSlider.setMinorTickSpacing(1);
		nPsiSlider.setPaintLabels(true);
		nPsiSlider.setPaintTicks(true);
		nPsiSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.13"));
		nPsiSlider.setValue(30);
		nPsiSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		nPsiSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				nPsiSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		nPsiPanel.add(nPsiSlider, gridBagConstraints);

		nPsiTextField.setColumns(4);
		nPsiTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		nPsiTextField.setText("30");
		nPsiTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.13"));
		nPsiTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				nPsiTextFieldFocusLost(evt);
			}
		});

		nPsiPanel.add(nPsiTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		mainPsiPanel.add(nPsiPanel, gridBagConstraints);

		dPsiPanel.setLayout(new java.awt.GridBagLayout());

		dPsiPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.12")));
		dPsiPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.12"));
		dPsiPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		dPsiPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		dPsiSlider.setMajorTickSpacing(60);
		dPsiSlider.setMaximum(360);
		dPsiSlider.setMinorTickSpacing(12);
		dPsiSlider.setPaintLabels(true);
		dPsiSlider.setPaintTicks(true);
		dPsiSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.12"));
		dPsiSlider.setValue(15);
		dPsiSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		dPsiSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				dPsiSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		dPsiPanel.add(dPsiSlider, gridBagConstraints);

		dPsiTextField.setColumns(4);
		dPsiTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		dPsiTextField.setText("15");
		dPsiTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.12"));
		dPsiTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				dPsiTextFieldFocusLost(evt);
			}
		});

		dPsiPanel.add(dPsiTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		mainPsiPanel.add(dPsiPanel, gridBagConstraints);

		mapaTabbedPane.addTab(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.10"), null, mainPsiPanel, java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.10"));

		mainUMapaPanel.setLayout(new java.awt.GridBagLayout());

		mainUMapaPanel.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED,
				new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153),
				new java.awt.Color(0, 51, 153)));
		mainUMapaPanel.setMinimumSize(new java.awt.Dimension(290, 90));
		mainUMapaPanel.setPreferredSize(new java.awt.Dimension(290, 90));
		uMapaPanel.setLayout(new java.awt.GridBagLayout());

		uMapaPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.15")));
		uMapaPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.15"));
		uMapaPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		uMapaPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		uMapaSlider.setMajorTickSpacing(200);
		uMapaSlider.setMaximum(1001);
		uMapaSlider.setMinimum(1);
		uMapaSlider.setMinorTickSpacing(50);
		uMapaSlider.setPaintLabels(true);
		uMapaSlider.setPaintTicks(true);
		uMapaSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.15"));
		uMapaSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		uMapaSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				uMapaSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		uMapaPanel.add(uMapaSlider, gridBagConstraints);

		uMapaTextField.setColumns(4);
		uMapaTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		uMapaTextField.setText("50");
		uMapaTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.15"));
		uMapaTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				uMapaTextFieldFocusLost(evt);
			}
		});

		uMapaPanel.add(uMapaTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		mainUMapaPanel.add(uMapaPanel, gridBagConstraints);

		nUMapaPanel.setLayout(new java.awt.GridBagLayout());

		nUMapaPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.17")));
		nUMapaPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.17"));
		nUMapaPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		nUMapaPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		nUMapaSlider.setMajorTickSpacing(5);
		nUMapaSlider.setMaximum(31);
		nUMapaSlider.setMinimum(1);
		nUMapaSlider.setMinorTickSpacing(1);
		nUMapaSlider.setPaintLabels(true);
		nUMapaSlider.setPaintTicks(true);
		nUMapaSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.17"));
		nUMapaSlider.setValue(5);
		nUMapaSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		nUMapaSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				nUMapaSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		nUMapaPanel.add(nUMapaSlider, gridBagConstraints);

		nUMapaTextField.setColumns(4);
		nUMapaTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		nUMapaTextField.setText("5");
		nUMapaTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.17"));
		nUMapaTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				nUMapaTextFieldFocusLost(evt);
			}
		});

		nUMapaPanel.add(nUMapaTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		mainUMapaPanel.add(nUMapaPanel, gridBagConstraints);

		dUMapaPanel.setLayout(new java.awt.GridBagLayout());

		dUMapaPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.16")));
		dUMapaPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.16"));
		dUMapaPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		dUMapaPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		dUMapaSlider.setMajorTickSpacing(200);
		dUMapaSlider.setMaximum(1001);
		dUMapaSlider.setMinimum(1);
		dUMapaSlider.setMinorTickSpacing(50);
		dUMapaSlider.setPaintLabels(true);
		dUMapaSlider.setPaintTicks(true);
		dUMapaSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.16"));
		dUMapaSlider.setValue(20);
		dUMapaSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		dUMapaSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				dUMapaSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		dUMapaPanel.add(dUMapaSlider, gridBagConstraints);

		dUMapaTextField.setColumns(4);
		dUMapaTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		dUMapaTextField.setText("20");
		dUMapaTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.16"));
		dUMapaTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				dUMapaTextFieldFocusLost(evt);
			}
		});

		dUMapaPanel.add(dUMapaTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		mainUMapaPanel.add(dUMapaPanel, gridBagConstraints);

		mapaTabbedPane.addTab(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.14"), null, mainUMapaPanel, java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.14"));

		resolutionPanel.setLayout(new java.awt.GridBagLayout());

		resolutionPanel.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED,
				new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153),
				new java.awt.Color(0, 51, 153)));
		widthPanel.setLayout(new java.awt.GridBagLayout());

		widthPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.19")));
		widthPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.19"));
		widthPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		widthPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		widthSlider.setMajorTickSpacing(500);
		widthSlider.setMaximum(1550);
		widthSlider.setMinimum(50);
		widthSlider.setMinorTickSpacing(100);
		widthSlider.setPaintLabels(true);
		widthSlider.setPaintTicks(true);
		widthSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.19"));
		widthSlider.setValue(800);
		widthSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		widthSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				widthSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		widthPanel.add(widthSlider, gridBagConstraints);

		widthTextField.setColumns(4);
		widthTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		widthTextField.setText("800");
		widthTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.19"));
		widthTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				widthTextFieldFocusLost(evt);
			}
		});

		widthPanel.add(widthTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		resolutionPanel.add(widthPanel, gridBagConstraints);

		heightPanel.setLayout(new java.awt.GridBagLayout());

		heightPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.20")));
		heightPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.20"));
		heightPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		heightPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		heightSlider.setMajorTickSpacing(500);
		heightSlider.setMaximum(1550);
		heightSlider.setMinimum(50);
		heightSlider.setMinorTickSpacing(100);
		heightSlider.setPaintLabels(true);
		heightSlider.setPaintTicks(true);
		heightSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.20"));
		heightSlider.setValue(800);
		heightSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		heightSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				heightSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		heightPanel.add(heightSlider, gridBagConstraints);

		heightTextField.setColumns(4);
		heightTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		heightTextField.setText("800");
		heightTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.20"));
		heightTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				heightTextFieldFocusLost(evt);
			}
		});

		heightPanel.add(heightTextField, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		resolutionPanel.add(heightPanel, gridBagConstraints);

		pixSizePanel.setLayout(new java.awt.GridBagLayout());

		pixSizePanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.21")));
		pixSizePanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.21"));
		pixSizePanel.setMinimumSize(new java.awt.Dimension(250, 80));
		pixSizePanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		pixSizeSlider.setMajorTickSpacing(1);
		pixSizeSlider.setMaximum(5);
		pixSizeSlider.setPaintLabels(true);
		pixSizeSlider.setPaintTicks(true);
		pixSizeSlider.setSnapToTicks(true);
		pixSizeSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.21"));
		pixSizeSlider.setValue(1);
		pixSizeSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		pixSizePanel.add(pixSizeSlider, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		resolutionPanel.add(pixSizePanel, gridBagConstraints);

		mapaTabbedPane.addTab(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.18"), null, resolutionPanel, java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.18"));

		mainUMaxPanel.setLayout(new java.awt.GridBagLayout());

		mainUMaxPanel.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED,
				new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153),
				new java.awt.Color(0, 51, 153)));
		uMaxPanel.setLayout(new java.awt.GridBagLayout());

		uMaxPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.28")));
		uMaxPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.28"));
		uMaxPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		uMaxPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		uMaxSlider.setMajorTickSpacing(200);
		uMaxSlider.setMaximum(1001);
		uMaxSlider.setMinimum(1);
		uMaxSlider.setMinorTickSpacing(40);
		uMaxSlider.setPaintLabels(true);
		uMaxSlider.setPaintTicks(true);
		uMaxSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.28"));
		uMaxSlider.setValue(8);
		uMaxSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		uMaxSlider.setEnabled(false);
		uMaxSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				uMaxSliderStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		uMaxPanel.add(uMaxSlider, gridBagConstraints);

		uMaxTextField.setColumns(4);
		uMaxTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		uMaxTextField.setText("8");
		uMaxTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.28"));
		uMaxTextField.setEnabled(false);
		uMaxTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				uMaxTextFieldFocusLost(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		uMaxPanel.add(uMaxTextField, gridBagConstraints);

		uMaxCheckBox.setSelected(true);
		uMaxCheckBox.setText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.29"));
		uMaxCheckBox.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.29"));
		uMaxCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		uMaxCheckBox.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				uMaxCheckBoxActionPerformed(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		uMaxPanel.add(uMaxCheckBox, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		mainUMaxPanel.add(uMaxPanel, gridBagConstraints);

		mapaTabbedPane.addTab(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.27"), null, mainUMaxPanel, java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.27"));

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weighty = 1.0;
		configPanel.add(mapaTabbedPane, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weighty = 1.0;
		add(configPanel, gridBagConstraints);

		btnPanel.setLayout(new java.awt.GridBagLayout());

		okButton.setText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.ok"));
		okButton.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.ok"));
		okButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				okButtonActionPerformed(evt);
			}
		});

		controlBtnPanel.add(okButton);

		cancelButton.setText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.title.cancel"));
		cancelButton.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.tip.cancel"));
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		controlBtnPanel.add(cancelButton);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.weightx = 1.0;
		btnPanel.add(controlBtnPanel, gridBagConstraints);

		defaultButton.setText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.title.dfc"));
		defaultButton
				.setToolTipText(java.util.ResourceBundle.getBundle(
						"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
						"rec.exp.customizer.tip.dfc"));
		defaultButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				defaultButtonActionPerformed(evt);
			}
		});

		defConfBtnPanel.add(defaultButton);

		btnPanel.add(defConfBtnPanel, new java.awt.GridBagConstraints());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(btnPanel, gridBagConstraints);

		mainEditPanel.setLayout(new java.awt.GridBagLayout());

		mainEditPanel.setBorder(new javax.swing.border.TitledBorder(new javax.swing.border.BevelBorder(
				javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153),
				new java.awt.Color(0, 51, 153), new java.awt.Color(0, 51, 153)), java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.22")));
		mainEditPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.22"));
		mainEditPanel.setMinimumSize(new java.awt.Dimension(300, 100));
		mainEditPanel.setPreferredSize(new java.awt.Dimension(300, 200));
		mainEditPanel.setEnabled(false);
		editPanel.setLayout(new java.awt.GridBagLayout());

		editPanel.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.23")));
		editPanel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.tip.1"));
		editPanel.setMinimumSize(new java.awt.Dimension(250, 80));
		editPanel.setPreferredSize(new java.awt.Dimension(250, 80));
		editPanel.setVisible(false);
		editSlider.setMajorTickSpacing(60);
		editSlider.setMaximum(360);
		editSlider.setMinorTickSpacing(12);
		editSlider.setPaintLabels(true);
		editSlider.setPaintTicks(true);
		editSlider.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.23"));
		editSlider.setValue(0);
		editSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		editSlider.setEnabled(false);
		editSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				editSliderStateChanged(evt);
			}
		});
		editSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
			public void mouseDragged(java.awt.event.MouseEvent evt) {
				editSliderMouseDragged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		editPanel.add(editSlider, gridBagConstraints);

		editTextField.setColumns(4);
		editTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		editTextField.setText("0");
		editTextField.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.23"));
		editTextField.setEnabled(false);
		editTextField.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				editTextFieldFocusLost(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		editPanel.add(editTextField, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		mainEditPanel.add(editPanel, gridBagConstraints);

		editLabel.setFont(new java.awt.Font("MS Sans Serif", 0, 24));
		editLabel.setForeground(new java.awt.Color(255, 102, 102));
		editLabel.setText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages")
				.getString("rec.exp.customizer.title.23"));
		editLabel.setToolTipText(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString("rec.exp.customizer.tip.23"));
		editLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		mainEditPanel.add(editLabel, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(mainEditPanel, gridBagConstraints);

		mainPanel.setLayout(new java.awt.GridBagLayout());

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		add(mainPanel, gridBagConstraints);

	}// GEN-END:initComponents

	private void uMaxTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_uMaxTextFieldFocusLost
		try {
			double val = GUtils.validateInput(uMaxTextField, uMaxSlider, 1);
		} catch (NumberFormatException e) {
			uMaxTextField.setText(Integer.toString(uMaxSlider.getValue()));
		}
	}// GEN-LAST:event_uMaxTextFieldFocusLost

	private void uMaxSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_uMaxSliderStateChanged
		uMaxTextField.setText("" + uMaxSlider.getValue());
	}// GEN-LAST:event_uMaxSliderStateChanged

	private void uMaxCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_uMaxCheckBoxActionPerformed
		uMaxSlider.setEnabled(!uMaxCheckBox.isSelected());
		uMaxTextField.setEnabled(!uMaxCheckBox.isSelected());
	}// GEN-LAST:event_uMaxCheckBoxActionPerformed

	private void heightSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_heightSliderStateChanged
		heightTextField.setText("" + heightSlider.getValue());
	}// GEN-LAST:event_heightSliderStateChanged

	private void widthSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_widthSliderStateChanged
		widthTextField.setText("" + widthSlider.getValue());
	}// GEN-LAST:event_widthSliderStateChanged

	private void heightTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_heightTextFieldFocusLost
		try {
			double val = GUtils.validateInput(heightTextField, heightSlider, 1);
		} catch (NumberFormatException e) {
			heightTextField.setText(Integer.toString(heightSlider.getValue()));
		}
	}// GEN-LAST:event_heightTextFieldFocusLost

	private void widthTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_widthTextFieldFocusLost
		try {
			double val = GUtils.validateInput(widthTextField, widthSlider, 1);
		} catch (NumberFormatException e) {
			widthTextField.setText(Integer.toString(widthSlider.getValue()));
		}
	}// GEN-LAST:event_widthTextFieldFocusLost

	public void actionPerformed(java.awt.event.ActionEvent e) {
		if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vfermap/resources/messages")
						.getString("rec.exp.customizer.editMenu.title.1")))
			updateEditPanel(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.title.1"), java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.tip.1"), (int) Math.round(fermAnima.getSysX() * 10), new int[] {
					(int) Math.round(fermAnima.getSysXMax() * 2), (int) Math.round(fermAnima.getSysXMax() * 10), 0, 0 });
		else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vfermap/resources/messages")
						.getString("rec.exp.customizer.editMenu.title.2")))
			updateEditPanel(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.title.2"), java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.tip.2"), (int) Math.round(fermAnima.getVel() * 10), new int[] { 400,
					2000, -2000, 100 });
		else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vfermap/resources/messages")
						.getString("rec.exp.customizer.editMenu.title.3")))
			updateEditPanel(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.title.3"), java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.tip.3"), (int) Math.round(Math.toDegrees(fermAnima.getPsi())),
					new int[] { 30, 360, 0, 6 });
		else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vfermap/resources/messages")
						.getString("rec.exp.customizer.editMenu.title.4")))
			updateEditPanel(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.title.4"), java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.tip.4"), (int) Math.round(fermAnima.getWallAmp() * 100), new int[] {
					100, 900, 0, 20 });
		else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vfermap/resources/messages")
						.getString("rec.exp.customizer.editMenu.title.5")))
			updateEditPanel(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.title.5"), java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.tip.5"), (int) Math.round(fermAnima.getWallFreq() * 100), new int[] {
					10, 100, 0, 2 });
		else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vfermap/resources/messages")
						.getString("rec.exp.customizer.editMenu.title.6")))
			updateEditPanel(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.title.6"), java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.tip.6"), (int) Math.round(fermAnima.getD() * 10), new int[] { 100,
					1000, 100, 20 });
		else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vfermap/resources/messages")
						.getString("rec.exp.customizer.editMenu.title.7")))
			updateEditPanel(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.title.7"), java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.tip.7"), this.nSamples, new int[] { 100, 1010, 10, 50 });
		else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vfermap/resources/messages")
						.getString("rec.exp.customizer.editMenu.title.8")))
			updateEditPanel(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.title.8"), java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.tip.8"), this.tbs, new int[] { 1, 10, 1, 0 });
		else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vfermap/resources/messages")
						.getString("rec.exp.customizer.editMenu.title.9"))) {
			fermAnima.terminate();
			fermAnima.setPsi(fermAnima.getPsi());
			((javax.swing.JMenuItem) e.getSource()).setText(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editMenu.title.10"));
			((javax.swing.JMenuItem) e.getSource()).setToolTipText(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editMenu.tip.10"));
		} else if (e.getActionCommand().equalsIgnoreCase(
				java.util.ResourceBundle.getBundle("pt/utl/ist/elab/client/vfermap/resources/messages")
						.getString("rec.exp.customizer.editMenu.title.10"))) {
			fermAnima.start();
			((javax.swing.JMenuItem) e.getSource()).setText(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editMenu.title.9"));
			((javax.swing.JMenuItem) e.getSource()).setToolTipText(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editMenu.tip.9"));
		}
		/*
		 * else if (e.getActionCommand().equalsIgnoreCase("Ok")){
		 * mainPanel.remove(mainPanel.getComponentCount()-1);
		 * fermAnima.setVisible(true); //if (stateCheckBoxMenuItem.isSelected()
		 * || xCheckBoxMenuItem.isSelected() ||
		 * psiCheckBoxMenuItem.isSelected()) // mainTabbedPane.setVisible(true);
		 * //viewMenu.setEnabled(true); //helpMenu.setEnabled(true);
		 * //fileMenu.setEnabled(true); }
		 */
	}

	private void updateEditPanel(String strTitle, String strTip, int val, int[] sliderConfig) {
		editPanel.remove(editSlider);
		editSlider = new javax.swing.JSlider();
		editSlider.setMaximum(sliderConfig[1]);
		editSlider.setMinimum(sliderConfig[2]);
		editSlider.setMinorTickSpacing(sliderConfig[3]);
		editSlider.setMajorTickSpacing(sliderConfig[0]);
		editSlider.setPaintLabels(true);
		editSlider.setPaintTicks(true);
		editSlider.setToolTipText(strTip);
		editSlider.setValue(val);
		editSlider.setPreferredSize(new java.awt.Dimension(36, 24));
		editSlider.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				editSliderStateChanged(evt);
			}
		});
		editSlider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
			public void mouseDragged(java.awt.event.MouseEvent evt) {
				editSliderMouseDragged(evt);
			}
		});

		java.awt.GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		editPanel.add(editSlider, gridBagConstraints);

		editTextField.setToolTipText(strTip);
		editTextField.setText(String.valueOf(val));

		editTextField.setEnabled(animaRadioButton.isSelected());
		editSlider.setEnabled(animaRadioButton.isSelected());

		editLabel.setVisible(false);
		((javax.swing.border.TitledBorder) editPanel.getBorder()).setTitle(strTitle);
		editPanel.setToolTipText(strTip);
		editPanel.setVisible(true);
		editPanel.updateUI();
	}

	public void update() {
		String str = ((javax.swing.border.TitledBorder) editPanel.getBorder()).getTitle();

		if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.1")))
			updateEditPanel(java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.title.1"), java.util.ResourceBundle.getBundle(
					"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
					"rec.exp.customizer.editPanel.tip.1"), (int) Math.round(fermAnima.getSysX() * 10), new int[] {
					(int) Math.round(fermAnima.getSysXMax() * 2), (int) Math.round(fermAnima.getSysXMax() * 10), 0, 0 });
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.2")))
			editSlider.setValue((int) Math.round(fermAnima.getVel() * 10));
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.3")))
			editSlider.setValue((int) Math.round(Math.toDegrees(fermAnima.getPsi())));
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.6")))
			editSlider.setValue((int) Math.round(fermAnima.getD() * 10));
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.4")))
			editSlider.setValue((int) Math.round(fermAnima.getWallAmp() * 100));
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.5")))
			editSlider.setValue((int) Math.round(fermAnima.getWallFreq() * 100));
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.7")))
			editSlider.setValue(this.nSamples);
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.8")))
			editSlider.setValue(this.tbs);
	}

	private void editSet(String str, double val) {
		if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.1")))
			fermAnima.setSysX(val / 10d);
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.2")))
			fermAnima.setVel(val / 10d);
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.3")))
			fermAnima.setPsi(Math.toRadians(val));
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.4")))
			fermAnima.setWallAmp(val / 100d);
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.5")))
			fermAnima.setWallFreq(val / 100d);
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.6")))
			fermAnima.setD(val / 10d);
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.7")))
			this.nSamples = (int) val;
		else if (str.equalsIgnoreCase(java.util.ResourceBundle.getBundle(
				"pt/utl/ist/elab/client/vfermap/resources/messages").getString(
				"rec.exp.customizer.editPanel.title.8")))
			this.tbs = (int) val;
	}

	private void editTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_editTextFieldFocusLost
		try {
			double val = GUtils.validateInput(editTextField, editSlider, 1);
			editSet(((javax.swing.border.TitledBorder) editPanel.getBorder()).getTitle(), val);
		} catch (NumberFormatException e) {
			editTextField.setText(Integer.toString(editSlider.getValue()));
		}
	}// GEN-LAST:event_editTextFieldFocusLost

	private void editSliderMouseDragged(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_editSliderMouseDragged
		editSet(((javax.swing.border.TitledBorder) editPanel.getBorder()).getTitle(), editSlider.getValue());
	}// GEN-LAST:event_editSliderMouseDragged

	private void editSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_editSliderStateChanged
		editTextField.setText("" + editSlider.getValue());
	}// GEN-LAST:event_editSliderStateChanged

	private void nUMapaTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_nUMapaTextFieldFocusLost
		try {
			double val = GUtils.validateInput(nUMapaTextField, nUMapaSlider, 1);
		} catch (NumberFormatException e) {
			nUMapaTextField.setText(Integer.toString(nUMapaSlider.getValue()));
		}
	}// GEN-LAST:event_nUMapaTextFieldFocusLost

	private void dUMapaTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_dUMapaTextFieldFocusLost
		try {
			double val = GUtils.validateInput(dUMapaTextField, dUMapaSlider, 1);
		} catch (NumberFormatException e) {
			dUMapaTextField.setText(Integer.toString(dUMapaSlider.getValue()));
		}
	}// GEN-LAST:event_dUMapaTextFieldFocusLost

	private void uMapaTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_uMapaTextFieldFocusLost
		try {
			double val = GUtils.validateInput(uMapaTextField, uMapaSlider, 1);
		} catch (NumberFormatException e) {
			uMapaTextField.setText(Integer.toString(uMapaSlider.getValue()));
		}
	}// GEN-LAST:event_uMapaTextFieldFocusLost

	private void nPsiTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_nPsiTextFieldFocusLost
		try {
			double val = GUtils.validateInput(nPsiTextField, nPsiSlider, 1);
		} catch (NumberFormatException e) {
			nPsiTextField.setText(Integer.toString(nPsiSlider.getValue()));
		}
	}// GEN-LAST:event_nPsiTextFieldFocusLost

	private void dPsiTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_dPsiTextFieldFocusLost
		try {
			double val = GUtils.validateInput(dPsiTextField, dPsiSlider, 1);
		} catch (NumberFormatException e) {
			dPsiTextField.setText(Integer.toString(dPsiSlider.getValue()));
		}
	}// GEN-LAST:event_dPsiTextFieldFocusLost

	private void psiTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_psiTextFieldFocusLost
		try {
			double val = GUtils.validateInput(psiTextField, psiSlider, 1);
		} catch (NumberFormatException e) {
			psiTextField.setText(Integer.toString(psiSlider.getValue()));
		}
	}// GEN-LAST:event_psiTextFieldFocusLost

	private void iterTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_iterTextFieldFocusLost
		try {
			double val = GUtils.validateInput(iterTextField, iterSlider, 1);
		} catch (NumberFormatException e) {
			iterTextField.setText(Integer.toString(iterSlider.getValue()));
		}
	}// GEN-LAST:event_iterTextFieldFocusLost

	private void pcorTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_pcorTextFieldFocusLost
		try {
			double val = GUtils.validateInput(pcorTextField, pcorSlider, 1);
		} catch (NumberFormatException e) {
			pcorTextField.setText(Integer.toString(pcorSlider.getValue()));
		}
	}// GEN-LAST:event_pcorTextFieldFocusLost

	private void mTextFieldFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_mTextFieldFocusLost
		try {
			double val = GUtils.validateInput(mTextField, mSlider, 1);
		} catch (NumberFormatException e) {
			mTextField.setText(Integer.toString(mSlider.getValue()));
		}
	}// GEN-LAST:event_mTextFieldFocusLost

	private void nUMapaSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_nUMapaSliderStateChanged
		nUMapaTextField.setText("" + nUMapaSlider.getValue());
	}// GEN-LAST:event_nUMapaSliderStateChanged

	private void dUMapaSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_dUMapaSliderStateChanged
		dUMapaTextField.setText("" + dUMapaSlider.getValue());
	}// GEN-LAST:event_dUMapaSliderStateChanged

	private void uMapaSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_uMapaSliderStateChanged
		uMapaTextField.setText("" + uMapaSlider.getValue());
	}// GEN-LAST:event_uMapaSliderStateChanged

	private void nPsiSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_nPsiSliderStateChanged
		nPsiTextField.setText("" + nPsiSlider.getValue());
	}// GEN-LAST:event_nPsiSliderStateChanged

	private void dPsiSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_dPsiSliderStateChanged
		dPsiTextField.setText("" + dPsiSlider.getValue());
	}// GEN-LAST:event_dPsiSliderStateChanged

	private void psiSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_psiSliderStateChanged
		psiTextField.setText("" + psiSlider.getValue());
	}// GEN-LAST:event_psiSliderStateChanged

	private void iterSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_iterSliderStateChanged
		iterTextField.setText("" + iterSlider.getValue());
	}// GEN-LAST:event_iterSliderStateChanged

	private void pcorSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_pcorSliderStateChanged
		pcorTextField.setText("" + pcorSlider.getValue());
	}// GEN-LAST:event_pcorSliderStateChanged

	private void mSliderStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_mSliderStateChanged
		mTextField.setText("" + mSlider.getValue());
	}// GEN-LAST:event_mSliderStateChanged

	private void animaRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_animaRadioButtonActionPerformed
		editSlider.setEnabled(true);
		editTextField.setEnabled(true);

		psiSlider.setEnabled(false);
		nPsiSlider.setEnabled(false);
		dPsiSlider.setEnabled(false);
		psiTextField.setEnabled(false);
		nPsiTextField.setEnabled(false);
		dPsiTextField.setEnabled(false);

		uMapaSlider.setEnabled(false);
		nUMapaSlider.setEnabled(false);
		dUMapaSlider.setEnabled(false);
		uMapaTextField.setEnabled(false);
		nUMapaTextField.setEnabled(false);
		dUMapaTextField.setEnabled(false);

		mSlider.setEnabled(false);
		iterSlider.setEnabled(false);
		pcorSlider.setEnabled(false);
		mTextField.setEnabled(false);
		iterTextField.setEnabled(false);
		pcorTextField.setEnabled(false);
	}// GEN-LAST:event_animaRadioButtonActionPerformed

	private void histRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_histRadioButtonActionPerformed
		editSlider.setEnabled(false);
		editTextField.setEnabled(false);

		psiSlider.setEnabled(true);
		nPsiSlider.setEnabled(false);
		dPsiSlider.setEnabled(false);
		psiTextField.setEnabled(true);
		nPsiTextField.setEnabled(false);
		dPsiTextField.setEnabled(false);

		uMapaSlider.setEnabled(true);
		nUMapaSlider.setEnabled(false);
		dUMapaSlider.setEnabled(false);
		uMapaTextField.setEnabled(true);
		nUMapaTextField.setEnabled(false);
		dUMapaTextField.setEnabled(false);

		mSlider.setEnabled(true);
		iterSlider.setEnabled(true);
		pcorSlider.setEnabled(true);
		mTextField.setEnabled(true);
		iterTextField.setEnabled(true);
		pcorTextField.setEnabled(true);
	}// GEN-LAST:event_histRadioButtonActionPerformed

	private void mapRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_mapRadioButtonActionPerformed
		editSlider.setEnabled(false);
		editTextField.setEnabled(false);

		psiSlider.setEnabled(true);
		nPsiSlider.setEnabled(true);
		dPsiSlider.setEnabled(true);
		psiTextField.setEnabled(true);
		nPsiTextField.setEnabled(true);
		dPsiTextField.setEnabled(true);

		uMapaSlider.setEnabled(true);
		nUMapaSlider.setEnabled(true);
		dUMapaSlider.setEnabled(true);
		uMapaTextField.setEnabled(true);
		nUMapaTextField.setEnabled(true);
		dUMapaTextField.setEnabled(true);

		mSlider.setEnabled(true);
		iterSlider.setEnabled(true);
		pcorSlider.setEnabled(true);
		mTextField.setEnabled(true);
		iterTextField.setEnabled(true);
		pcorTextField.setEnabled(true);
	}// GEN-LAST:event_mapRadioButtonActionPerformed

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonActionPerformed
		fireICustomizerListenerCanceled();
	}// GEN-LAST:event_cancelButtonActionPerformed

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_okButtonActionPerformed

		acqConfig.setSelectedFrequency(new Frequency((double) this.tbs, hardwareInfo.getHardwareFrequencies(0)
				.getMinimumFrequency().getMultiplier(), hardwareInfo.getHardwareFrequencies(0).getMinimumFrequency()
				.getFrequencyDefType()));

		byte simulType = 0;
		int check = 0;

		if (mapRadioButton.isSelected()) {
			double m = (double) mSlider.getValue() / 10d;
			double pcor = (double) pcorSlider.getValue() / 100d;
			int iter = iterSlider.getValue() * 10;

			double psi = Math.toRadians(psiSlider.getValue());
			int nPsi = nPsiSlider.getValue();
			double dPsi = Math.toRadians(dPsiSlider.getValue());

			double uMapa = (double) uMapaSlider.getValue() / 10d;
			int nUMapa = nUMapaSlider.getValue();
			double dUMapa = (double) dUMapaSlider.getValue() / 100d;

			acqConfig.setTotalSamples(nPsi * nUMapa * iter + nPsi * nUMapa);

			simulType = 1;

			acqConfig.getSelectedHardwareParameter("m").setParameterValue("" + (float) m);
			acqConfig.getSelectedHardwareParameter("pcor").setParameterValue("" + (float) pcor);
			acqConfig.getSelectedHardwareParameter("iter").setParameterValue("" + iter);

			acqConfig.getSelectedHardwareParameter("psi").setParameterValue("" + (float) psi);
			acqConfig.getSelectedHardwareParameter("nPsi").setParameterValue("" + nPsi);
			acqConfig.getSelectedHardwareParameter("dPsi").setParameterValue("" + (float) dPsi);

			acqConfig.getSelectedHardwareParameter("uMapa").setParameterValue("" + (float) uMapa);
			acqConfig.getSelectedHardwareParameter("nUMapa").setParameterValue("" + nUMapa);
			acqConfig.getSelectedHardwareParameter("dUMapa").setParameterValue("" + (float) dUMapa);
		} else if (animaRadioButton.isSelected()) {
			double x = fermAnima.getSysX();
			double xDot = fermAnima.getVel();
			double psi = fermAnima.getPsi();
			double wAmp = fermAnima.getWallAmp();
			double d = fermAnima.getD();
			double wFreq = fermAnima.getWallFreq();

			acqConfig.setTotalSamples(214700);

			simulType = 2;

			acqConfig.getSelectedHardwareParameter("x").setParameterValue("" + (float) x);
			acqConfig.getSelectedHardwareParameter("xDot").setParameterValue("" + (float) xDot);
			acqConfig.getSelectedHardwareParameter("psi").setParameterValue("" + (float) psi);
			acqConfig.getSelectedHardwareParameter("wAmp").setParameterValue("" + (float) wAmp);
			acqConfig.getSelectedHardwareParameter("d").setParameterValue("" + (float) d);
			acqConfig.getSelectedHardwareParameter("wFreq").setParameterValue("" + (float) wFreq);
			acqConfig.getSelectedHardwareParameter("nCol").setParameterValue("" + this.nSamples);
		} else if (histRadioButton.isSelected()) {
			double m = (double) mSlider.getValue() / 10d;
			double pcor = (double) pcorSlider.getValue() / 100d;
			int iter = iterSlider.getValue() * 10;

			double psi = Math.toRadians(psiSlider.getValue());
			double uMapa = (double) uMapaSlider.getValue() / 10d;

			acqConfig.setTotalSamples(iter + 1);

			simulType = 3;

			acqConfig.getSelectedHardwareParameter("m").setParameterValue("" + (float) m);
			acqConfig.getSelectedHardwareParameter("pcor").setParameterValue("" + (float) pcor);
			acqConfig.getSelectedHardwareParameter("iter").setParameterValue("" + iter);

			acqConfig.getSelectedHardwareParameter("psi").setParameterValue("" + (float) psi);
			acqConfig.getSelectedHardwareParameter("uMapa").setParameterValue("" + (float) uMapa);
		}

		acqConfig.getSelectedHardwareParameter("staticImg").setParameterValue(
				"" + (staticRadioButton.isSelected() ? 1 : 0));
		acqConfig.getSelectedHardwareParameter("simulType").setParameterValue("" + simulType);

		acqConfig.getSelectedHardwareParameter("w").setParameterValue("" + widthSlider.getValue());
		acqConfig.getSelectedHardwareParameter("h").setParameterValue("" + heightSlider.getValue());
		acqConfig.getSelectedHardwareParameter("pixSize").setParameterValue("" + (byte) pixSizeSlider.getValue());
		if (uMaxCheckBox.isSelected())
			acqConfig.getSelectedHardwareParameter("uMax").setParameterValue("" + -1);
		else
			acqConfig.getSelectedHardwareParameter("uMax").setParameterValue("" + uMaxSlider.getValue());

		for (int i = 0; i < acqConfig.getSelectedHardwareParameters().length; i++)
			System.out.println(acqConfig.getSelectedHardwareParameters(i).getParameterName() + " = "
					+ acqConfig.getSelectedHardwareParameters(i).getParameterValue());

		fireICustomizerListenerDone();
	}// GEN-LAST:event_okButtonActionPerformed

	private void defaultButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_defaultButtonActionPerformed
		this.nSamples = 10;

		nonStaticRadioButton.setSelected(true);
		mapRadioButton.setSelected(true);

		mSlider.setValue(160);
		pcorSlider.setValue(50);
		iterSlider.setValue(50);

		psiSlider.setValue(0);
		dPsiSlider.setValue(15);
		nPsiSlider.setValue(30);

		uMapaSlider.setValue(50);
		dUMapaSlider.setValue(20);
		nUMapaSlider.setValue(5);

		widthSlider.setValue(800);
		heightSlider.setValue(800);
		uMapaSlider.setValue(8);

		fermAnima.config(0, 100, Math.PI / 2, 20, 2, .1);

		mapRadioButtonActionPerformed(null);

		update();
	}// GEN-LAST:event_defaultButtonActionPerformed

	public static void main(String args[]) {
		javax.swing.JFrame test = new javax.swing.JFrame();
		test.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		test.getContentPane().add(new FERMAPCustomizer());
		test.pack();
		test.show();
	}

	// ****************************REC********************************************/

	/** Utility field used by event firing mechanism. */
	private javax.swing.event.EventListenerList listenerList = null;

	/**
	 * Registers ICustomizerListener to receive events.
	 * 
	 * @param listener The listener to register.
	 */
	public synchronized void addICustomizerListener(ICustomizerListener listener) {
		if (listenerList == null) {
			listenerList = new javax.swing.event.EventListenerList();
		}
		listenerList.add(ICustomizerListener.class, listener);
	}

	/**
	 * Removes ICustomizerListener from the list of listeners.
	 * 
	 * @param listener The listener to remove.
	 */
	public synchronized void removeICustomizerListener(ICustomizerListener listener) {
		listenerList.remove(ICustomizerListener.class, listener);
	}

	/**
	 * Notifies all registered listeners about the event.
	 * 
	 * @param param1 Parameter #1 of the <CODE>EventObject<CODE> constructor.
	 */
	private void fireICustomizerListenerCanceled() {
		if (listenerList == null)
			return;
		Object[] listeners = listenerList.getListenerList();
		for (int i = listeners.length - 2; i >= 0; i -= 2) {
			if (listeners[i] == ICustomizerListener.class) {
				((ICustomizerListener) listeners[i + 1]).canceled();
			}
		}
	}

	/**
	 * Notifies all registered listeners about the event.
	 * 
	 * @param param1 Parameter #1 of the <CODE>EventObject<CODE> constructor.
	 */
	private void fireICustomizerListenerDone() {
		if (listenerList == null)
			return;
		Object[] listeners = listenerList.getListenerList();
		for (int i = listeners.length - 2; i >= 0; i -= 2) {
			if (listeners[i] == ICustomizerListener.class) {

				((ICustomizerListener) listeners[i + 1]).done();
			}
		}
	}

	private HardwareInfo hardwareInfo = null;
	private HardwareAcquisitionConfig acqConfig = null;

	public HardwareAcquisitionConfig getAcquisitionConfig() {
		return acqConfig;
	}

	public void setHardwareAcquisitionConfig(HardwareAcquisitionConfig acqConfig) {
		this.acqConfig = acqConfig;
		if (acqConfig != null) {

			byte simulType = Byte.parseByte(acqConfig.getSelectedHardwareParameterValue("simulType"));
			if (acqConfig.getSelectedHardwareParameterValue("staticImg").trim().equals("1") ? true : false)
				staticRadioButton.setSelected(true);
			else
				nonStaticRadioButton.setSelected(true);

			widthSlider.setValue(Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("w")));
			heightSlider.setValue(Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("h")));
			pixSizeSlider.setValue(Byte.parseByte(acqConfig.getSelectedHardwareParameterValue("pixSize")));

			// this.nSamples = acqConfig.getTotalSamples();
			this.tbs = (int) acqConfig.getSelectedFrequency().getFrequency();

			int uMax = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("uMax"));

			if (uMax == -1) {
				uMaxCheckBox.setSelected(true);
				uMaxCheckBoxActionPerformed(null);
			} else
				uMaxSlider.setValue(uMax);

			if (simulType == 1) {
				mapRadioButton.setSelected(true);
				mapRadioButtonActionPerformed(null);

				float m = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("m"));
				float pcor = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("pcor"));
				int iter = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("iter"));

				float psi = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("psi"));
				int nPsi = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("nPsi"));
				float dPsi = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("dPsi"));

				float uMapa = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("uMapa"));
				int nUMapa = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("nUMapa"));
				float dUMapa = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("dUMapa"));

				mSlider.setValue((int) Math.round(10 * m));
				pcorSlider.setValue((int) Math.round(100 * pcor));
				iterSlider.setValue((int) Math.round((double) iter / 10d));

				psiSlider.setValue((int) Math.round(Math.toDegrees(psi)));
				nPsiSlider.setValue(nPsi);
				dPsiSlider.setValue((int) Math.round(Math.toDegrees(dPsi)));

				uMapaSlider.setValue((int) Math.round(uMapa * 10));
				nUMapaSlider.setValue(nUMapa);
				dUMapaSlider.setValue((int) Math.round(dUMapa * 100));
			} else if (simulType == 2) {
				animaRadioButton.setSelected(true);
				animaRadioButtonActionPerformed(null);

				float x = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("x"));
				float xDot = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("xDot"));
				float psi = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("psi"));
				float wAmp = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("wAmp"));
				float d = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("d"));
				float wFreq = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("wFreq"));

				fermAnima.config(x, xDot, psi, d, wAmp, wFreq);
				update();
			} else if (simulType == 3) {
				histRadioButton.setSelected(true);
				histRadioButtonActionPerformed(null);

				float m = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("m"));
				float pcor = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("pcor"));
				int iter = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("iter"));

				float psi = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("psi"));
				float uMapa = Float.parseFloat(acqConfig.getSelectedHardwareParameterValue("uMapa"));

				mSlider.setValue((int) Math.round(10 * m));
				pcorSlider.setValue((int) Math.round(100 * pcor));
				iterSlider.setValue((int) Math.round((double) iter / 10d));

				psiSlider.setValue((int) Math.round(Math.toDegrees(psi)));
				uMapaSlider.setValue((int) Math.round(uMapa * 10));
			}
		}
	}

	public void setHardwareInfo(HardwareInfo hardwareInfo) {
		this.hardwareInfo = hardwareInfo;
	}

	protected HardwareInfo getHardwareInfo() {
		return this.hardwareInfo;
	}

	public javax.swing.JComponent getCustomizerComponent() {
		return this;
	}

	public javax.swing.ImageIcon getCustomizerIcon() {
		return new javax.swing.ImageIcon(getClass().getResource(
				"/pt/utl/ist/elab/client/vfermap/resources/fermap_iconified.PNG"));
	}

	public String getCustomizerTitle() {
		return "Fermi Map Configuration Utility";
	}

	public javax.swing.JMenuBar getMenuBar() {
		return null;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JRadioButton animaRadioButton;
	private javax.swing.JPanel btnPanel;
	private javax.swing.JButton cancelButton;
	private javax.swing.JPanel configPanel;
	private javax.swing.ButtonGroup constsButtonGroup;
	private javax.swing.JPanel controlBtnPanel;
	private javax.swing.JPanel dPsiPanel;
	private javax.swing.JSlider dPsiSlider;
	private javax.swing.JTextField dPsiTextField;
	private javax.swing.JPanel dUMapaPanel;
	private javax.swing.JSlider dUMapaSlider;
	private javax.swing.JTextField dUMapaTextField;
	private javax.swing.JPanel defConfBtnPanel;
	private javax.swing.JButton defaultButton;
	private javax.swing.JLabel editLabel;
	private javax.swing.JPanel editPanel;
	private javax.swing.JSlider editSlider;
	private javax.swing.JTextField editTextField;
	private javax.swing.ButtonGroup expButtonGroup;
	private javax.swing.JPanel generalPanel;
	private javax.swing.JPanel heightPanel;
	private javax.swing.JSlider heightSlider;
	private javax.swing.JTextField heightTextField;
	private javax.swing.JRadioButton histRadioButton;
	private javax.swing.JPanel iterPanel;
	private javax.swing.JSlider iterSlider;
	private javax.swing.JTextField iterTextField;
	private javax.swing.JPanel mPanel;
	private javax.swing.JSlider mSlider;
	private javax.swing.JTextField mTextField;
	private javax.swing.JPanel mainEditPanel;
	private javax.swing.JPanel mainPanel;
	private javax.swing.JPanel mainPsiPanel;
	private javax.swing.JPanel mainUMapaPanel;
	private javax.swing.JPanel mainUMaxPanel;
	private javax.swing.JRadioButton mapRadioButton;
	private javax.swing.JTabbedPane mapaTabbedPane;
	private javax.swing.JPanel nPsiPanel;
	private javax.swing.JSlider nPsiSlider;
	private javax.swing.JTextField nPsiTextField;
	private javax.swing.JPanel nUMapaPanel;
	private javax.swing.JSlider nUMapaSlider;
	private javax.swing.JTextField nUMapaTextField;
	private javax.swing.JRadioButton nonStaticRadioButton;
	private javax.swing.JButton okButton;
	private javax.swing.JPanel pcorPanel;
	private javax.swing.JSlider pcorSlider;
	private javax.swing.JTextField pcorTextField;
	private javax.swing.JPanel pixSizePanel;
	private javax.swing.JSlider pixSizeSlider;
	private javax.swing.JPanel psiPanel;
	private javax.swing.JSlider psiSlider;
	private javax.swing.JTextField psiTextField;
	private javax.swing.JPanel resolutionPanel;
	private javax.swing.JPanel simulPanel;
	private javax.swing.JPanel staticPanel;
	private javax.swing.JRadioButton staticRadioButton;
	private javax.swing.JPanel uMapaPanel;
	private javax.swing.JSlider uMapaSlider;
	private javax.swing.JTextField uMapaTextField;
	private javax.swing.JCheckBox uMaxCheckBox;
	private javax.swing.JPanel uMaxPanel;
	private javax.swing.JSlider uMaxSlider;
	private javax.swing.JTextField uMaxTextField;
	private javax.swing.JPanel widthPanel;
	private javax.swing.JSlider widthSlider;
	private javax.swing.JTextField widthTextField;
	// End of variables declaration//GEN-END:variables

}
