<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.linkare</groupId>
	<artifactId>rec.am</artifactId>
	<packaging>war</packaging>
	<name>rec.am</name>
	<version>1.0.0-SNAPSHOT</version>

	<properties>
		<!--
			Explicitly declaring the source encoding eliminates the following
			message: [WARNING] Using platform encoding (UTF-8 actually) to copy
			filtered resources, i.e. build is platform dependent!
		-->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!--
			To set the jboss.home environment variable the Maven way, set the
			jboss.home property in an active profile in the Maven 2 settings.xml
			file
		-->
		<jboss.home>${env.JBOSS_HOME}</jboss.home>
		<jboss.domain>default</jboss.domain>
		<!-- The version of Weld extensions in use -->
		<weld.extensions.version>1.0.0-CR2</weld.extensions.version>
	</properties>

	<repositories>
		<!--
			Several key Java EE APIs and RIs are missing from the Maven Central
			Repository
		-->
		<!--
			The goal is to eventually eliminate the reliance on the JBoss
			repository
		-->
		<repository>
			<id>public-repo</id>
			<name>Linkare public repository</name>
			<url>http://nexus.linkare.com/content/repositories/releases/</url>
		</repository>
		<repository>
			<id>snap-repo</id>
			<name>Linkare public snapshot repository</name>
			<url>http://nexus.linkare.com/content/repositories/snapshots/</url>
		</repository>
		<repository>
			<id>jboss-repo</id>
			<name>JBoss maven repository</name>
			<url>http://repository.jboss.com/maven2/</url>
		</repository>
		<repository>
			<id>jboss-repo-org</id>
			<name>JBoss.org maven repository</name>
			<url>http://repository.jboss.org/maven2/</url>
		</repository>
		<repository>
			<id>prime-repo</id>
			<name>Prime Technology Maven Repository</name>
			<url>http://repository.prime.com.tr</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>java-net</id>
			<name>Java.net</name>
			<url>http://download.java.net/maven/</url>
		</repository>

	</repositories>
	<dependencyManagement>
		<dependencies>
			<!-- Import scope will provide versions for dependencies below. -->
			<dependency>
				<groupId>org.jboss.weld</groupId>
				<artifactId>weld-extensions-bom</artifactId>
				<version>${weld.extensions.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- CDI (JSR-299) -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- EJB -->
		<dependency>
			<groupId>org.jboss.ejb3</groupId>
			<artifactId>jboss-ejb3-api</artifactId>
			<scope>provided</scope>
			<version>3.1.0</version>
		</dependency>
		<!--
			Common annotations (e.g., @PostConstruct, @PreDestroy, @Generated,
			@Resource)
		-->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Bean Validation (JSR-303) -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Bean Validation Implementation -->
		<!--
			Provides portable constraints such as @NotEmpty, @Email and @Url
		-->
		<!--
			Hibernate Validator is only the JSR-303 implementation at the moment,
			so we can assume it's provided
		-->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.0.0.GA</version>
			<scope>provided</scope>
		</dependency>
		<!-- JSF -->
		<!-- JPA -->

		<!-- Optional, but highly recommended. -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>5.10</version>
			<scope>test</scope>
			<classifier>jdk15</classifier>
		</dependency>

		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>2.2</version>
		</dependency>

		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.java-persistence</groupId>
			<artifactId>jpa-api</artifactId>
			<version>2.0-cr-1</version>
		</dependency>

		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.0.0-RC</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>2.0.0-RC</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>6.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>axis</groupId>
			<artifactId>axis-wsdl4j</artifactId>
			<version>1.5.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>axis2</groupId>
			<artifactId>axis2-kernel</artifactId>
			<version>1.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>axis</groupId>
			<artifactId>axis</artifactId>
			<version>1.4</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>${artifactId}</finalName>
		<plugins>
			<!-- Compiler plugin enforces Java 1.6 compatiblity -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- Eclipse plugin can force download of source and JavaDoc jars -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<wtpversion>2.0</wtpversion>
					<!--
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
					-->
				</configuration>
			</plugin>

			<!-- Configure the JBoss AS Maven deploy plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jboss-maven-plugin</artifactId>
				<configuration>
					<jbossHome>${jboss.home}</jbossHome>
					<serverName>${jboss.domain}</serverName>
					<fileNames>
						<fileName>${project.build.directory}/${build.finalName}.war
						</fileName>
					</fileNames>
				</configuration>
			</plugin>
			<!--
				<plugin> <groupId>org.apache.axis2.maven2</groupId>
				<artifactId>axis2-wsdl2code-maven-plugin</artifactId>
				<version>1.1</version> <executions> <execution> <goals>
				<goal>wsdl2code</goal> </goals> </execution> </executions>
				<configuration>
				<packageName>com.linkare.rec.am.moodle.client</packageName>
				<wsdlFile>src/main/resources/moodlews.wsdl</wsdlFile>
				<outputDirectory>src/main/java</outputDirectory> </configuration>
				<dependencies> <dependency> <groupId>axis</groupId>
				<artifactId>axis-wsdl4j</artifactId> <version>1.5.1</version>
				</dependency> </dependencies> </plugin>
			-->
			<!-- 
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>axistools-maven-plugin</artifactId>
				<version>1.3</version>
				<dependencies>
					<dependency>
						<groupId>axis</groupId>
						<artifactId>axis</artifactId>
						<version>1.4</version>
					</dependency>
				</dependencies>
				<configuration>
					<urls>
						<url>http://localhost/moodle/wspp/moodlewsdl.xml</url>
					</urls>
					<packageSpace>com.linkare.rec.am.moodle.client</packageSpace>
					<outputDirectory>src/main/java</outputDirectory>
					<testCases>true</testCases>
					<serverSide>true</serverSide>
					<subPackageByFileName>true</subPackageByFileName>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>wsdl2java</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			 -->
		</plugins>
	</build>
</project>