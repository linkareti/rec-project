//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b26-ea3 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.10.02 at 10:54:22 AM BST 
//

package pt.utl.ist.elab.driver.serial.serialportgeneric.config;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

import pt.utl.ist.elab.driver.serial.serialportgeneric.IncorrectRs232ValuesException;

/**
 * <p>
 * Java class for ParamValuesNode complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="ParamValuesNode">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="center" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="coeficient" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="delta" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="power" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="weight" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ParamValuesNode")
public class ParamValuesNode {

	@XmlAttribute(required = true)
	protected String center;
	@XmlAttribute(required = true)
	protected String coeficient;
	@XmlAttribute(required = true)
	protected String delta;
	@XmlAttribute(required = true)
	protected String power;
	@XmlAttribute(required = true)
	protected String weight;

	@Deprecated
	protected Double dcenter = Double.NaN;
	@Deprecated
	protected Double dcoeficient = Double.NaN;
	@Deprecated
	protected Double ddelta = Double.NaN;
	@Deprecated
	protected Double dpower = Double.NaN;
	@Deprecated
	protected Double dweight = Double.NaN;

	/**
	 * Gets the value of the center property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getCenter() {
		return center;
	}

	@Deprecated
	public Double getDCenter() {
		return dcenter;
	}

	/**
	 * Sets the value of the center property.
	 * 
	 * @param value allowed object is {@link String }
	 * @throws IncorrectRs232ValuesException
	 * 
	 */
	public void setCenter(String value) throws IncorrectRs232ValuesException {
		this.center = value;
		try {
			this.dcenter = Double.valueOf(value);
		} catch (NumberFormatException e) {
			throw new IncorrectRs232ValuesException("Center definition is incorrect: " + value);
		}
	}

	/**
	 * Gets the value of the coeficient property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getCoeficient() {
		return coeficient;
	}

	@Deprecated
	public Double getDCoeficient() {
		return dcoeficient;
	}

	/**
	 * Sets the value of the coeficient property.
	 * 
	 * @param value allowed object is {@link String }
	 * @throws IncorrectRs232ValuesException
	 * 
	 */
	public void setCoeficient(String value) throws IncorrectRs232ValuesException {
		this.coeficient = value;
		try {
			this.dcoeficient = Double.valueOf(value);
		} catch (NumberFormatException e) {
			throw new IncorrectRs232ValuesException("Coeficient definition is incorrect: " + value);
		}
	}

	/**
	 * Gets the value of the delta property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getDelta() {
		return delta;
	}

	@Deprecated
	public Double getDDelta() {
		return ddelta;
	}

	/**
	 * Sets the value of the delta property.
	 * 
	 * @param value allowed object is {@link String }
	 * @throws IncorrectRs232ValuesException
	 * 
	 */
	public void setDelta(String value) throws IncorrectRs232ValuesException {
		this.delta = value;
		try {
			this.ddelta = Double.valueOf(value);
		} catch (NumberFormatException e) {
			throw new IncorrectRs232ValuesException("Delta definition is incorrect: " + value);
		}
	}

	/**
	 * Gets the value of the power property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getPower() {
		return power;
	}

	@Deprecated
	public Double getDPower() {
		return dpower;
	}

	/**
	 * Sets the value of the power property.
	 * 
	 * @param value allowed object is {@link String }
	 * @throws IncorrectRs232ValuesException
	 * 
	 */
	public void setPower(String value) throws IncorrectRs232ValuesException {
		this.power = value;
		try {
			this.dpower = Double.valueOf(value);
		} catch (NumberFormatException e) {
			throw new IncorrectRs232ValuesException("Power definition is incorrect: " + value);
		}
	}

	/**
	 * Gets the value of the weight property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getWeight() {
		return weight;
	}

	@Deprecated
	public Double getDWeight() {
		return dweight;
	}

	/**
	 * Sets the value of the weight property.
	 * 
	 * @param value allowed object is {@link String }
	 * @throws IncorrectRs232ValuesException
	 * 
	 */
	public void setWeight(String value) throws IncorrectRs232ValuesException {
		this.weight = value;
		try {
			this.dweight = Double.valueOf(value);
		} catch (NumberFormatException e) {
			throw new IncorrectRs232ValuesException("Weight definition is incorrect: " + value);
		}
	}

}
