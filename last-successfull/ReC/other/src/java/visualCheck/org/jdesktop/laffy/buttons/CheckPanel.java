/*
 * Laffy - Swing Look and Feel Sampler
 * Copyright (C) Sun Microsystems
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 */

package org.jdesktop.laffy.buttons;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicCheckBoxUI;

import org.jdesktop.laffy.I18nResourceHandler;
import org.jdesktop.laffy.OptionsSettablePanel;

/** @author Jasper Potts */
public class CheckPanel extends OptionsSettablePanel {

	private final Color DEFAULT_BACKGROUND;
	private final boolean DEFAULT_OPAQUE;

	/** Creates new form CheckPanel */
	public CheckPanel() {
		initComponents();
		DEFAULT_BACKGROUND = oCheckBox.getBackground();
		DEFAULT_OPAQUE = oCheckBox.isOpaque();
		oCheckBox.setModel(new ButtonPanel.OverButtonModel());
		pCheckBox.setModel(new ButtonPanel.PressedButtonModel());
		foCheckBox.setModel(new ButtonPanel.OverButtonModel());
		fpCheckBox.setModel(new ButtonPanel.PressedButtonModel());
		soCheckBox.setModel(new ButtonPanel.OverSelectedButtonModel());
		spCheckBox.setModel(new ButtonPanel.PressedSelectedButtonModel());
		sfoCheckBox.setModel(new ButtonPanel.OverSelectedButtonModel());
		sfpCheckBox.setModel(new ButtonPanel.PressedSelectedButtonModel());
		// apply to all buttons
		ActionListener actionListener = new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JOptionPane.showMessageDialog(CheckPanel.this, "CheckBox Clicked!");
			}
		};
		for (Component component : getComponents()) {
			if (component instanceof JCheckBox) {
				((JCheckBox) component).addActionListener(actionListener);
			}
		}
	}

	// =================================================================================================================
	// OptionsSettablePanel Methods

	@Override
	public void setForceComponentsBackgroundColor(boolean force) {
		Color c = force ? FORCED_BACKGROUND : DEFAULT_BACKGROUND;
		// apply to all buttons
		for (Component component : getComponents()) {
			if (component instanceof JCheckBox) {
				component.setBackground(c);
			}
		}
	}

	@Override
	public void setForceComponentsNonOpaque(boolean force) {
		setBackground(force ? Color.GREEN : DEFAULT_BACKGROUND);
		boolean o = force ? false : DEFAULT_OPAQUE;
		// apply to all buttons
		for (Component component : getComponents()) {
			if (component instanceof JCheckBox) {
				((JCheckBox) component).setOpaque(o);
			}
		}
	}

	@Override
	public void setForceComponentsToBasicUI(boolean force) {
		for (Component component : getComponents()) {
			if (component instanceof JCheckBox) {
				if (force) {
					((JCheckBox) component).setUI(new BasicCheckBoxUI());
				} else {
					((JCheckBox) component).updateUI();
				}
			}
		}
		revalidate();
	}

	// =================================================================================================================
	// Netbeans Code

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		jLabel8 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel1 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		jCheckBox1 = new javax.swing.JCheckBox();
		oCheckBox = new javax.swing.JCheckBox();
		pCheckBox = new javax.swing.JCheckBox();
		jCheckBox4 = new javax.swing.JCheckBox();
		jCheckBox5 = new JCheckBox() {
			@Override
			public boolean isFocusPainted() {
				return true;
			}

			@Override
			public boolean isFocusOwner() {
				return true;
			}
		};
		foCheckBox = new JCheckBox() {
			@Override
			public boolean isFocusPainted() {
				return true;
			}

			@Override
			public boolean isFocusOwner() {
				return true;
			}
		};
		fpCheckBox = new JCheckBox() {
			@Override
			public boolean isFocusPainted() {
				return true;
			}

			@Override
			public boolean isFocusOwner() {
				return true;
			}
		};
		jCheckBox8 = new javax.swing.JCheckBox();
		soCheckBox = new javax.swing.JCheckBox();
		spCheckBox = new javax.swing.JCheckBox();
		jCheckBox11 = new javax.swing.JCheckBox();
		jCheckBox12 = new JCheckBox() {
			@Override
			public boolean isFocusPainted() {
				return true;
			}

			@Override
			public boolean isFocusOwner() {
				return true;
			}
		};
		sfoCheckBox = new JCheckBox() {
			@Override
			public boolean isFocusPainted() {
				return true;
			}

			@Override
			public boolean isFocusOwner() {
				return true;
			}
		};
		sfpCheckBox = new JCheckBox() {
			@Override
			public boolean isFocusPainted() {
				return true;
			}

			@Override
			public boolean isFocusOwner() {
				return true;
			}
		};

		setLayout(new java.awt.GridBagLayout());

		jLabel8.setFont(jLabel8.getFont().deriveFont(jLabel8.getFont().getStyle() | java.awt.Font.BOLD, jLabel8.getFont().getSize() - 2));
		jLabel8.setForeground(java.awt.Color.darkGray);
		//jLabel8.setText("Normal");
		jLabel8.setText(I18nResourceHandler.getMessage("Normal"));
		jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		add(jLabel8, gridBagConstraints);

		jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() | java.awt.Font.BOLD, jLabel2.getFont().getSize() - 2));
		jLabel2.setForeground(java.awt.Color.darkGray);
		//jLabel2.setText("Focused");
		jLabel2.setText(I18nResourceHandler.getMessage("Focused"));
		jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		add(jLabel2, gridBagConstraints);

		jLabel3.setFont(jLabel3.getFont().deriveFont(jLabel3.getFont().getStyle() | java.awt.Font.BOLD, jLabel3.getFont().getSize() - 2));
		jLabel3.setForeground(java.awt.Color.darkGray);
		//jLabel3.setText("Selected");
		jLabel3.setText(I18nResourceHandler.getMessage("Selected"));
		jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		add(jLabel3, gridBagConstraints);

		jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() | java.awt.Font.BOLD, jLabel4.getFont().getSize() - 2));
		jLabel4.setForeground(java.awt.Color.darkGray);
		//jLabel4.setText("Selected + Focused");
		jLabel4.setText(I18nResourceHandler.getMessage("Selected_+_Focused"));
		jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
		add(jLabel4, gridBagConstraints);

		jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD, jLabel1.getFont().getSize() - 2));
		jLabel1.setForeground(java.awt.Color.darkGray);
		//jLabel1.setText("Normal");
		jLabel1.setText(I18nResourceHandler.getMessage("Normal"));
		jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.insets = new java.awt.Insets(4, 2, 4, 2);
		add(jLabel1, gridBagConstraints);

		jLabel5.setFont(jLabel5.getFont().deriveFont(jLabel5.getFont().getStyle() | java.awt.Font.BOLD, jLabel5.getFont().getSize() - 2));
		jLabel5.setForeground(java.awt.Color.darkGray);
		//jLabel5.setText("Over");
		jLabel5.setText(I18nResourceHandler.getMessage("Over"));
		jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.insets = new java.awt.Insets(4, 2, 4, 2);
		add(jLabel5, gridBagConstraints);

		jLabel7.setFont(jLabel7.getFont().deriveFont(jLabel7.getFont().getStyle() | java.awt.Font.BOLD, jLabel7.getFont().getSize() - 2));
		jLabel7.setForeground(java.awt.Color.darkGray);
		//jLabel7.setText("Pressed");
		jLabel7.setText(I18nResourceHandler.getMessage("Pressed"));
		jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.insets = new java.awt.Insets(4, 2, 4, 2);
		add(jLabel7, gridBagConstraints);

		jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getStyle() | java.awt.Font.BOLD, jLabel6.getFont().getSize() - 2));
		jLabel6.setForeground(java.awt.Color.darkGray);
		//jLabel6.setText("Disabled");
		jLabel6.setText(I18nResourceHandler.getMessage("Disabled"));
		jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 4;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.insets = new java.awt.Insets(4, 2, 4, 2);
		add(jLabel6, gridBagConstraints);

		//jCheckBox1.setText("Cancel");
		jCheckBox1.setText(I18nResourceHandler.getMessage("Cancel"));
		jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(jCheckBox1, gridBagConstraints);

		//oCheckBox.setText("Cancel");
		oCheckBox.setText(I18nResourceHandler.getMessage("Cancel"));
		oCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(oCheckBox, gridBagConstraints);

		//pCheckBox.setText("Cancel");
		pCheckBox.setText(I18nResourceHandler.getMessage("Cancel"));
		pCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(pCheckBox, gridBagConstraints);

		//jCheckBox4.setText("Cancel");
		jCheckBox4.setText(I18nResourceHandler.getMessage("Cancel"));
		jCheckBox4.setEnabled(false);
		jCheckBox4.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 4;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(jCheckBox4, gridBagConstraints);

		//jCheckBox5.setText("Cancel");
		jCheckBox5.setText(I18nResourceHandler.getMessage("Cancel"));
		jCheckBox5.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(jCheckBox5, gridBagConstraints);

		//foCheckBox.setText("Cancel");
		foCheckBox.setText(I18nResourceHandler.getMessage("Cancel"));
		foCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(foCheckBox, gridBagConstraints);

		//fpCheckBox.setText("Cancel");
		fpCheckBox.setText(I18nResourceHandler.getMessage("Cancel"));
		fpCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(fpCheckBox, gridBagConstraints);

		jCheckBox8.setSelected(true);
		//jCheckBox8.setText("Cancel");
		jCheckBox8.setText(I18nResourceHandler.getMessage("Cancel"));
		jCheckBox8.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(jCheckBox8, gridBagConstraints);

		soCheckBox.setSelected(true);
		//soCheckBox.setText("Cancel");
		soCheckBox.setText(I18nResourceHandler.getMessage("Cancel"));
		soCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(soCheckBox, gridBagConstraints);

		spCheckBox.setSelected(true);
		//spCheckBox.setText("Cancel");
		spCheckBox.setText(I18nResourceHandler.getMessage("Cancel"));
		spCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(spCheckBox, gridBagConstraints);

		jCheckBox11.setSelected(true);
		//jCheckBox11.setText("Cancel");
		jCheckBox11.setText(I18nResourceHandler.getMessage("Cancel"));
		jCheckBox11.setEnabled(false);
		jCheckBox11.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 4;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(jCheckBox11, gridBagConstraints);

		jCheckBox12.setSelected(true);
		//jCheckBox12.setText("Cancel");
		jCheckBox12.setText(I18nResourceHandler.getMessage("Cancel"));
		jCheckBox12.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(jCheckBox12, gridBagConstraints);

		sfoCheckBox.setSelected(true);
		//sfoCheckBox.setText("Cancel");
		sfoCheckBox.setText(I18nResourceHandler.getMessage("Cancel"));
		sfoCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(sfoCheckBox, gridBagConstraints);

		sfpCheckBox.setSelected(true);
		//sfpCheckBox.setText("Cancel");
		sfpCheckBox.setText(I18nResourceHandler.getMessage("Cancel"));
		sfpCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
		add(sfpCheckBox, gridBagConstraints);
	}// </editor-fold>//GEN-END:initComponents

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JCheckBox foCheckBox;
	private javax.swing.JCheckBox fpCheckBox;
	private javax.swing.JCheckBox jCheckBox1;
	private javax.swing.JCheckBox jCheckBox11;
	private javax.swing.JCheckBox jCheckBox12;
	private javax.swing.JCheckBox jCheckBox4;
	private javax.swing.JCheckBox jCheckBox5;
	private javax.swing.JCheckBox jCheckBox8;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JCheckBox oCheckBox;
	private javax.swing.JCheckBox pCheckBox;
	private javax.swing.JCheckBox sfoCheckBox;
	private javax.swing.JCheckBox sfpCheckBox;
	private javax.swing.JCheckBox soCheckBox;
	private javax.swing.JCheckBox spCheckBox;
	// End of variables declaration//GEN-END:variables

}
