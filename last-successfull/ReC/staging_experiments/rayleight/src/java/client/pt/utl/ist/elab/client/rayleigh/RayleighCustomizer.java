/*
 * RadioactividadeCustomizer.java
 *
 * Created on 16 de Maio de 2003, 10:11
 */

package pt.utl.ist.elab.client.rayleigh;

import com.linkare.rec.data.config.HardwareAcquisitionConfig;
import com.linkare.rec.data.metadata.HardwareInfo;
import com.linkare.rec.data.synch.Frequency;
import com.linkare.rec.impl.client.customizer.ICustomizerListener;

/**
 * 
 * @author Jos√© Pedro Pereira - Linkare TI
 */
public class RayleighCustomizer extends javax.swing.JPanel implements
		com.linkare.rec.impl.client.customizer.ICustomizer {

	java.text.DecimalFormat df = null;

	/** Creates new form RadioactividadeCustomizer */
	public RayleighCustomizer() {
		initComponents();
		setPreferredSize(new java.awt.Dimension(500, 600));
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {// GEN-BEGIN:initComponents
		java.awt.GridBagConstraints gridBagConstraints;

		buttonGroup1 = new javax.swing.ButtonGroup();
		buttonGroup2 = new javax.swing.ButtonGroup();
		buttonGroup3 = new javax.swing.ButtonGroup();
		jPanel2 = new javax.swing.JPanel();
		btnOK = new javax.swing.JButton();
		btnCancel = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();
		btnDefaults = new javax.swing.JButton();
		jLabel3 = new javax.swing.JLabel();
		jPanel10 = new javax.swing.JPanel();
		Vermelho = new javax.swing.JRadioButton();
		Laranja = new javax.swing.JRadioButton();
		Amarelo = new javax.swing.JRadioButton();
		Verde = new javax.swing.JRadioButton();
		Azul = new javax.swing.JRadioButton();
		Violeta = new javax.swing.JRadioButton();
		violetlonge = new javax.swing.JRadioButton();
		Todas = new javax.swing.JRadioButton();
		profund = new javax.swing.JSlider();
		profundidade = new java.awt.Label();
		metodo = new java.awt.Label();
		espaco = new java.awt.Label();
		espaco2 = new java.awt.Label();
		espectro = new java.awt.Label();
		espaco3 = new java.awt.Label();
		espaco6 = new java.awt.Label();
		espaco7 = new java.awt.Label();
		cota = new javax.swing.JTextField();
		npontos = new javax.swing.JSlider();
		espaco8 = new java.awt.Label();
		txtNPontos = new javax.swing.JTextField();
		warning = new javax.swing.JLabel();

		setLayout(new java.awt.BorderLayout());

		setMinimumSize(new java.awt.Dimension(420, 460));
		setPreferredSize(new java.awt.Dimension(420, 460));
		jPanel2.setLayout(new java.awt.GridBagLayout());

		jPanel2.setMinimumSize(new java.awt.Dimension(350, 42));
		jPanel2.setPreferredSize(new java.awt.Dimension(350, 42));
		btnOK.setText("OK");
		btnOK.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnOKActionPerformed(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		jPanel2.add(btnOK, gridBagConstraints);

		btnCancel.setText("Cancel");
		btnCancel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCancelActionPerformed(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		jPanel2.add(btnCancel, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 10.0;
		jPanel2.add(jLabel1, gridBagConstraints);

		btnDefaults.setText("Default Config");
		btnDefaults.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDefaultsActionPerformed(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 1;
		jPanel2.add(btnDefaults, gridBagConstraints);

		jLabel3.setText("    ");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridwidth = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weighty = 1.0;
		jPanel2.add(jLabel3, gridBagConstraints);

		add(jPanel2, java.awt.BorderLayout.SOUTH);

		jPanel10.setLayout(new java.awt.GridBagLayout());

		jPanel10.setBorder(new javax.swing.border.EtchedBorder());
		jPanel10.setPreferredSize(new java.awt.Dimension(350, 500));
		Vermelho.setFont(new java.awt.Font("Default", 1, 12));
		Vermelho.setText("Vermelho");
		Vermelho.setEnabled(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel10.add(Vermelho, gridBagConstraints);

		Laranja.setFont(new java.awt.Font("Default", 1, 12));
		Laranja.setText("Laranja");
		Laranja.setEnabled(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		jPanel10.add(Laranja, gridBagConstraints);

		Amarelo.setFont(new java.awt.Font("Default", 1, 12));
		Amarelo.setText("Amarelo");
		Amarelo.setEnabled(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		jPanel10.add(Amarelo, gridBagConstraints);

		Verde.setFont(new java.awt.Font("Default", 1, 12));
		Verde.setText("Verde");
		Verde.setEnabled(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 7;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel10.add(Verde, gridBagConstraints);

		Azul.setFont(new java.awt.Font("Default", 1, 12));
		Azul.setText("Azul");
		Azul.setEnabled(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.ipadx = 2;
		jPanel10.add(Azul, gridBagConstraints);

		Violeta.setFont(new java.awt.Font("Default", 1, 12));
		Violeta.setText("Violeta");
		Violeta.setEnabled(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		jPanel10.add(Violeta, gridBagConstraints);

		violetlonge.setFont(new java.awt.Font("Default", 1, 12));
		violetlonge.setText("Violeta long\u00ednquo");
		violetlonge.setEnabled(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		jPanel10.add(violetlonge, gridBagConstraints);

		Todas.setFont(new java.awt.Font("Default", 1, 12));
		Todas.setText("Todas as riscas");
		Todas.setEnabled(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 11;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel10.add(Todas, gridBagConstraints);

		profund.setMajorTickSpacing(400);
		profund.setMaximum(1600);
		profund.setMinorTickSpacing(200);
		profund.setPaintLabels(true);
		profund.setPaintTicks(true);
		profund.setValue(500);
		profund.setName("Profundidade");
		profund.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				profundStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 18;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel10.add(profund, gridBagConstraints);

		profundidade.setFont(new java.awt.Font("Default", 1, 12));
		profundidade.setText("Altura m\u00e1xima(mm)");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 16;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel10.add(profundidade, gridBagConstraints);

		metodo.setAlignment(java.awt.Label.CENTER);
		metodo.setFont(new java.awt.Font("Default", 1, 14));
		metodo.setText("An\u00e1lise em frequ\u00eancia");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		jPanel10.add(metodo, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		jPanel10.add(espaco, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel10.add(espaco2, gridBagConstraints);

		espectro.setAlignment(java.awt.Label.CENTER);
		espectro.setFont(new java.awt.Font("Default", 1, 12));
		espectro.setText("An\u00e1lise do espectro vis\u00edvel completo");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 9;
		gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel10.add(espectro, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 8;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel10.add(espaco3, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 16;
		gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel10.add(espaco6, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 19;
		gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel10.add(espaco7, gridBagConstraints);

		cota.setColumns(4);
		cota.setText("500");
		cota.setPreferredSize(new java.awt.Dimension(48, 20));
		cota.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				cotaFocusLost(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 18;
		jPanel10.add(cota, gridBagConstraints);

		npontos.setFont(new java.awt.Font("Dialog", 0, 8));
		npontos.setMajorTickSpacing(100);
		npontos.setMaximum(500);
		npontos.setMinorTickSpacing(10);
		npontos.setPaintLabels(true);
		npontos.setPaintTicks(true);
		npontos.setToolTipText("Escolha o n\u00famero de pontos de medida");
		npontos.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				npontosStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 15;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel10.add(npontos, gridBagConstraints);

		espaco8.setAlignment(java.awt.Label.CENTER);
		espaco8.setFont(new java.awt.Font("Default", 1, 12));
		espaco8.setText("N\u00famero de pontos");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 13;
		jPanel10.add(espaco8, gridBagConstraints);

		txtNPontos.setColumns(4);
		txtNPontos.setText("50");
		txtNPontos.setPreferredSize(new java.awt.Dimension(48, 20));
		txtNPontos.addFocusListener(new java.awt.event.FocusAdapter() {
			public void focusLost(java.awt.event.FocusEvent evt) {
				txtNPontosFocusLost(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 15;
		jPanel10.add(txtNPontos, gridBagConstraints);

		warning.setForeground(new java.awt.Color(255, 0, 51));
		warning.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 20;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		jPanel10.add(warning, gridBagConstraints);

		add(jPanel10, java.awt.BorderLayout.CENTER);

	}// GEN-END:initComponents

	private void txtNPontosFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_txtNPontosFocusLost
		try {
			int nv = Integer.parseInt(txtNPontos.getText());
			if (nv > npontos.getMaximum() || nv < npontos.getMinimum()) {
				txtNPontos.setText("" + npontos.getValue());
				return;
			}
			npontos.setValue(nv);
		} catch (NumberFormatException nfe) {
			txtNPontos.setText("" + npontos.getValue());
		}
	}// GEN-LAST:event_txtNPontosFocusLost

	private void npontosStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_npontosStateChanged
		int np = npontos.getValue();
		if (np < 1) {
			np = 1;
			npontos.setValue(np);
		}
		txtNPontos.setText("" + np);
		testConditions(true);
	}// GEN-LAST:event_npontosStateChanged

	private void cotaFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_cotaFocusLost
		try {
			int cotav = Integer.parseInt(cota.getText());
			if (cotav > profund.getMaximum() || cotav < profund.getMinimum()) {
				cota.setText("" + profund.getValue());
				return;
			}
			profund.setValue(cotav);
		} catch (NumberFormatException nfe) {
			cota.setText("" + profund.getValue());
		}
	}// GEN-LAST:event_cotaFocusLost

	private void profundStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_profundStateChanged
		int c = profund.getValue();
		if (c < 10) {
			c = 10;
			profund.setValue(c);
		}
		cota.setText("" + c);
		testConditions(false);
	}// GEN-LAST:event_profundStateChanged

	private void btnDefaultsActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_btnDefaultsActionPerformed
	{// GEN-HEADEREND:event_btnDefaultsActionPerformed
		npontos.setValue(50);
		txtNPontos.setText("50");

		profund.setValue(500);
		cota.setText("500");
	}// GEN-LAST:event_btnDefaultsActionPerformed

	private void btnCancelActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_btnCancelActionPerformed
	{// GEN-HEADEREND:event_btnCancelActionPerformed
		fireICustomizerListenerCanceled();
	}// GEN-LAST:event_btnCancelActionPerformed

	private void btnOKActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_btnOKActionPerformed
	{// GEN-HEADEREND:event_btnOKActionPerformed
		acqConfig.setTotalSamples(npontos.getValue());

		acqConfig.getSelectedHardwareParameter("DeltaX").setParameterValue("" + profund.getValue());

		for (int i = 0; i < acqConfig.getSelectedHardwareParameters().length; i++) {
			System.out.println(acqConfig.getSelectedHardwareParameters()[i].getParameterName() + "="
					+ acqConfig.getSelectedHardwareParameters()[i].getParameterValue());
		}
		acqConfig.setSelectedFrequency(new Frequency((double) 1, hardwareInfo.getHardwareFrequencies(0)
				.getMinimumFrequency().getMultiplier(), hardwareInfo.getHardwareFrequencies(0).getMinimumFrequency()
				.getFrequencyDefType()));
		System.out.println("Total samples = " + npontos.getValue());

		fireICustomizerListenerDone();
	}// GEN-LAST:event_btnOKActionPerformed

	private void testConditions(boolean genByNPontos) {
		if (profund.getValue() < npontos.getValue()) {
			if (genByNPontos) {
				warning.setText("N\u00famero de pontos tem de ser inferior a " + profund.getValue());
			} else {
				warning.setText("Profundidade tem de ser superior a " + npontos.getValue());
			}

			btnOK.setEnabled(false);
		} else {
			warning.setText("");
			btnOK.setEnabled(true);
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JRadioButton Amarelo;
	private javax.swing.JRadioButton Azul;
	private javax.swing.JRadioButton Laranja;
	private javax.swing.JRadioButton Todas;
	private javax.swing.JRadioButton Verde;
	private javax.swing.JRadioButton Vermelho;
	private javax.swing.JRadioButton Violeta;
	private javax.swing.JButton btnCancel;
	private javax.swing.JButton btnDefaults;
	private javax.swing.JButton btnOK;
	private javax.swing.ButtonGroup buttonGroup1;
	private javax.swing.ButtonGroup buttonGroup2;
	private javax.swing.ButtonGroup buttonGroup3;
	private javax.swing.JTextField cota;
	private java.awt.Label espaco;
	private java.awt.Label espaco2;
	private java.awt.Label espaco3;
	private java.awt.Label espaco6;
	private java.awt.Label espaco7;
	private java.awt.Label espaco8;
	private java.awt.Label espectro;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JPanel jPanel10;
	private javax.swing.JPanel jPanel2;
	private java.awt.Label metodo;
	private javax.swing.JSlider npontos;
	private javax.swing.JSlider profund;
	private java.awt.Label profundidade;
	private javax.swing.JTextField txtNPontos;
	private javax.swing.JRadioButton violetlonge;
	private javax.swing.JLabel warning;
	// End of variables declaration//GEN-END:variables

	/** Utility field used by event firing mechanism. */
	private javax.swing.event.EventListenerList listenerList = null;

	/**
	 * Registers ICustomizerListener to receive events.
	 * 
	 * @param listener The listener to register.
	 */
	public synchronized void addICustomizerListener(ICustomizerListener listener) {
		if (listenerList == null) {
			listenerList = new javax.swing.event.EventListenerList();
		}
		listenerList.add(ICustomizerListener.class, listener);
	}

	/**
	 * Removes ICustomizerListener from the list of listeners.
	 * 
	 * @param listener The listener to remove.
	 */
	public synchronized void removeICustomizerListener(ICustomizerListener listener) {
		listenerList.remove(ICustomizerListener.class, listener);
	}

	/**
	 * Notifies all registered listeners about the event.
	 * 
	 * @param param1 Parameter #1 of the <CODE>EventObject<CODE> constructor.
	 */
	private void fireICustomizerListenerCanceled() {
		if (listenerList == null)
			return;
		Object[] listeners = listenerList.getListenerList();
		for (int i = listeners.length - 2; i >= 0; i -= 2) {
			if (listeners[i] == ICustomizerListener.class) {
				((ICustomizerListener) listeners[i + 1]).canceled();
			}
		}
	}

	/**
	 * Notifies all registered listeners about the event.
	 * 
	 * @param param1 Parameter #1 of the <CODE>EventObject<CODE> constructor.
	 */
	private void fireICustomizerListenerDone() {
		if (listenerList == null)
			return;
		Object[] listeners = listenerList.getListenerList();
		for (int i = listeners.length - 2; i >= 0; i -= 2) {
			if (listeners[i] == ICustomizerListener.class) {

				((ICustomizerListener) listeners[i + 1]).done();
			}
		}
	}

	private HardwareInfo hardwareInfo = null;
	private HardwareAcquisitionConfig acqConfig = null;

	public HardwareAcquisitionConfig getAcquisitionConfig() {
		return acqConfig;
	}

	public void setHardwareAcquisitionConfig(HardwareAcquisitionConfig acqConfig) {
		this.acqConfig = acqConfig;
		if (acqConfig != null) {
			npontos.setValue(acqConfig.getTotalSamples());
			profund.setValue(Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("DeltaX")));
		}
	}

	public void setHardwareInfo(HardwareInfo hardwareInfo) {
		this.hardwareInfo = hardwareInfo;
	}

	protected HardwareInfo getHardwareInfo() {
		return this.hardwareInfo;
	}

	public javax.swing.JComponent getCustomizerComponent() {
		return this;
	}

	public javax.swing.ImageIcon getCustomizerIcon() {
		return new javax.swing.ImageIcon(getClass().getResource(
				"/pt/utl/ist/elab/client/rayleigh/resources/rayleigh_iconified.png"));
	}

	public String getCustomizerTitle() {
		return "Configura\u00e7\u00e3o Rayleigh";
	}

	public javax.swing.JMenuBar getMenuBar() {
		return null;
	}

	public static void main(String args[]) {
		javax.swing.JFrame jf = new javax.swing.JFrame();
		RayleighCustomizer r = new RayleighCustomizer();
		jf.getContentPane().add(r, java.awt.BorderLayout.CENTER);
		jf.pack();
		jf.show();
	}
}
