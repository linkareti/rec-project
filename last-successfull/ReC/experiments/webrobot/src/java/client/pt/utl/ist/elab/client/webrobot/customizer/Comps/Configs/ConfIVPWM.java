/*
 * IVPWM.java
 *
 * Created on 28 de Janeiro de 2003, 19:53
 */

package pt.utl.ist.elab.client.webrobot.customizer.Comps.Configs;

/**
 * 
 * @author Andrï¿½
 */
public class ConfIVPWM extends javax.swing.JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7134889764646889284L;

	/** Creates new form IVPWM */
	public ConfIVPWM(final java.awt.Frame parent, final boolean modal,
			final pt.utl.ist.elab.client.webrobot.customizer.Models.ModelIVPWM model) {
		super(parent, modal);
		this.model = model;
		initComponents();
		reOrderTable();
		readModel();
		setCancel(false);
		jButtonOk.requestFocus();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {// GEN-BEGIN:initComponents
		java.awt.GridBagConstraints gridBagConstraints;

		jPanelLeft = new javax.swing.JPanel();
		jPanelChooseIs = new javax.swing.JPanel();
		jLabelI7 = new javax.swing.JLabel();
		jRadioButtonI7 = new javax.swing.JRadioButton();
		jLabelI6 = new javax.swing.JLabel();
		jRadioButtonI6 = new javax.swing.JRadioButton();
		jLabelI5 = new javax.swing.JLabel();
		jRadioButtonI5 = new javax.swing.JRadioButton();
		jRadioButtonI4 = new javax.swing.JRadioButton();
		jRadioButtonI3 = new javax.swing.JRadioButton();
		jRadioButtonI2 = new javax.swing.JRadioButton();
		jRadioButtonI1 = new javax.swing.JRadioButton();
		jRadioButtonI0 = new javax.swing.JRadioButton();
		jLabelI4 = new javax.swing.JLabel();
		jLabelI3 = new javax.swing.JLabel();
		jLabelI2 = new javax.swing.JLabel();
		jLabelI1 = new javax.swing.JLabel();
		jLabelI0 = new javax.swing.JLabel();
		jScrollPaneTable = new javax.swing.JScrollPane();
		jTable = new javax.swing.JTable();
		jPanelOpts = new javax.swing.JPanel();
		jLabelNElems = new javax.swing.JLabel();
		jTextFieldNElems = new javax.swing.JTextField();
		jButtonNewElem = new javax.swing.JButton();
		jPanelOkCancel = new javax.swing.JPanel();
		jButtonOk = new javax.swing.JButton();
		jButtonCancel = new javax.swing.JButton();
		jPanelRight = new javax.swing.JPanel();
		jPanelSliders = new javax.swing.JPanel();
		jLabelRI0 = new javax.swing.JLabel();
		jSliderI0 = new javax.swing.JSlider();
		jTextFieldI0 = new javax.swing.JTextField();
		jLabelRI1 = new javax.swing.JLabel();
		jSliderI1 = new javax.swing.JSlider();
		jTextFieldI1 = new javax.swing.JTextField();
		jLabelRI2 = new javax.swing.JLabel();
		jSliderI2 = new javax.swing.JSlider();
		jTextFieldI2 = new javax.swing.JTextField();
		jLabelRI3 = new javax.swing.JLabel();
		jSliderI3 = new javax.swing.JSlider();
		jTextFieldI3 = new javax.swing.JTextField();
		jLabelRI4 = new javax.swing.JLabel();
		jSliderI4 = new javax.swing.JSlider();
		jTextFieldI4 = new javax.swing.JTextField();
		jLabelRI5 = new javax.swing.JLabel();
		jSliderI5 = new javax.swing.JSlider();
		jTextFieldI5 = new javax.swing.JTextField();
		jLabelRI6 = new javax.swing.JLabel();
		jSliderI6 = new javax.swing.JSlider();
		jTextFieldI6 = new javax.swing.JTextField();
		jLabelRI7 = new javax.swing.JLabel();
		jSliderI7 = new javax.swing.JSlider();
		jTextFieldI7 = new javax.swing.JTextField();
		jLabel1 = new javax.swing.JLabel();

		setTitle("Configura\u00e7\u00e3o do PWM");
		addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyReleased(final java.awt.event.KeyEvent evt) {
				formKeyReleased(evt);
			}
		});

		addWindowListener(new java.awt.event.WindowAdapter() {
			@Override
			public void windowClosing(final java.awt.event.WindowEvent evt) {
				closeDialog(evt);
			}
		});

		jPanelLeft.setLayout(new java.awt.BorderLayout());

		jPanelChooseIs.setLayout(new java.awt.GridBagLayout());

		jLabelI7.setForeground(new java.awt.Color(51, 0, 102));
		jLabelI7.setText("I7");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
		jPanelChooseIs.add(jLabelI7, gridBagConstraints);

		jRadioButtonI7.setForeground(new java.awt.Color(51, 0, 102));
		jRadioButtonI7.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jRadioButtonI7StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.gridheight = 9;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
		jPanelChooseIs.add(jRadioButtonI7, gridBagConstraints);

		jLabelI6.setForeground(new java.awt.Color(51, 0, 102));
		jLabelI6.setText("I6");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
		jPanelChooseIs.add(jLabelI6, gridBagConstraints);

		jRadioButtonI6.setForeground(new java.awt.Color(51, 0, 102));
		jRadioButtonI6.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jRadioButtonI6StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.gridheight = 9;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(15, 4, 0, 0);
		jPanelChooseIs.add(jRadioButtonI6, gridBagConstraints);

		jLabelI5.setForeground(new java.awt.Color(51, 0, 102));
		jLabelI5.setText("I5");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 4;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
		jPanelChooseIs.add(jLabelI5, gridBagConstraints);

		jRadioButtonI5.setForeground(new java.awt.Color(51, 0, 102));
		jRadioButtonI5.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jRadioButtonI5StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.gridheight = 9;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(15, 4, 0, 0);
		jPanelChooseIs.add(jRadioButtonI5, gridBagConstraints);

		jRadioButtonI4.setForeground(new java.awt.Color(51, 0, 102));
		jRadioButtonI4.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jRadioButtonI4StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 5;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.gridheight = 9;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(15, 4, 0, 0);
		jPanelChooseIs.add(jRadioButtonI4, gridBagConstraints);

		jRadioButtonI3.setForeground(new java.awt.Color(51, 0, 102));
		jRadioButtonI3.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jRadioButtonI3StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 7;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.gridheight = 9;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(15, 4, 0, 0);
		jPanelChooseIs.add(jRadioButtonI3, gridBagConstraints);

		jRadioButtonI2.setForeground(new java.awt.Color(51, 0, 102));
		jRadioButtonI2.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jRadioButtonI2StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 9;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.gridheight = 9;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(15, 4, 0, 0);
		jPanelChooseIs.add(jRadioButtonI2, gridBagConstraints);

		jRadioButtonI1.setForeground(new java.awt.Color(51, 0, 102));
		jRadioButtonI1.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jRadioButtonI1StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 11;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.gridheight = 9;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(15, 4, 0, 0);
		jPanelChooseIs.add(jRadioButtonI1, gridBagConstraints);

		jRadioButtonI0.setForeground(new java.awt.Color(51, 0, 102));
		jRadioButtonI0.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jRadioButtonI0StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 13;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.gridheight = 9;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(15, 4, 0, 0);
		jPanelChooseIs.add(jRadioButtonI0, gridBagConstraints);

		jLabelI4.setForeground(new java.awt.Color(51, 0, 102));
		jLabelI4.setText("I4");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 6;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
		jPanelChooseIs.add(jLabelI4, gridBagConstraints);

		jLabelI3.setForeground(new java.awt.Color(51, 0, 102));
		jLabelI3.setText("I3");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 8;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
		jPanelChooseIs.add(jLabelI3, gridBagConstraints);

		jLabelI2.setForeground(new java.awt.Color(51, 0, 102));
		jLabelI2.setText("I2");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 10;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
		jPanelChooseIs.add(jLabelI2, gridBagConstraints);

		jLabelI1.setForeground(new java.awt.Color(51, 0, 102));
		jLabelI1.setText("I1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 12;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
		jPanelChooseIs.add(jLabelI1, gridBagConstraints);

		jLabelI0.setForeground(new java.awt.Color(51, 0, 102));
		jLabelI0.setText("I0");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 14;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
		jPanelChooseIs.add(jLabelI0, gridBagConstraints);

		jPanelLeft.add(jPanelChooseIs, java.awt.BorderLayout.NORTH);

		jTable.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { {}, {}, {}, {} }, new String[] {

		}));
		jTable.setModel(new javax.swing.table.DefaultTableModel(model.getIValues(), new String[] { "I7...I0", "PWM1",
				"PWM2" }) {
			boolean[] canEdit = new boolean[] { false, false, false };

			@Override
			public Class getColumnClass(final int c) {
				return getValueAt(0, c).getClass();
			}

			@Override
			public boolean isCellEditable(final int rowIndex, final int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
		jTable.setPreferredScrollableViewportSize(new java.awt.Dimension(100, 100));
		jTable.setShowHorizontalLines(false);
		tableColumnModel = jTable.getColumnModel();
		listSelectionModel = jTable.getSelectionModel();
		defaultTableModel = (javax.swing.table.DefaultTableModel) jTable.getModel();
		tableColumnModel.getColumn(0).setMinWidth(60);
		tableColumnModel.getColumn(0).setMaxWidth(60);
		defaultTableModel
				.addTableModelListener(new pt.utl.ist.elab.client.webrobot.customizer.Utils.TableModelAdapter() {
					@Override
					public void tableChanged(final javax.swing.event.TableModelEvent evt) {
						jTableChanged(evt);
					}
				});
		listSelectionModel
				.addListSelectionListener(new pt.utl.ist.elab.client.webrobot.customizer.Utils.ListSelectionAdapter() {
					@Override
					public void valueChanged(final javax.swing.event.ListSelectionEvent evt) {
						rowWasSelected(evt);
					}
				});

		jTable.addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mouseClicked(final java.awt.event.MouseEvent evt) {
				jTableMouseClicked(evt);
			}
		});

		jScrollPaneTable.setViewportView(jTable);

		jPanelLeft.add(jScrollPaneTable, java.awt.BorderLayout.CENTER);

		jPanelOpts.setLayout(new java.awt.GridBagLayout());

		jLabelNElems.setForeground(new java.awt.Color(51, 0, 102));
		jLabelNElems.setText("N\u00ba Elementos");
		jPanelOpts.add(jLabelNElems, new java.awt.GridBagConstraints());

		jTextFieldNElems.setBackground(new java.awt.Color(255, 255, 255));
		jTextFieldNElems.setColumns(3);
		jTextFieldNElems.setEditable(false);
		jTextFieldNElems.setForeground(new java.awt.Color(51, 0, 102));
		jTextFieldNElems.setText("" + jTable.getRowCount());
		jPanelOpts.add(jTextFieldNElems, new java.awt.GridBagConstraints());

		jButtonNewElem.setForeground(new java.awt.Color(51, 0, 102));
		jButtonNewElem.setText("Novo Elemento");
		jButtonNewElem.addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mouseClicked(final java.awt.event.MouseEvent evt) {
				jButtonNewElemMouseClicked(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 2;
		jPanelOpts.add(jButtonNewElem, gridBagConstraints);

		jPanelLeft.add(jPanelOpts, java.awt.BorderLayout.SOUTH);

		getContentPane().add(jPanelLeft, java.awt.BorderLayout.CENTER);

		jPanelOkCancel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
		jPanelOkCancel.setForeground(new java.awt.Color(51, 0, 102));
		jButtonOk.setForeground(new java.awt.Color(51, 0, 102));
		jButtonOk.setText("Ok");
		jButtonOk.setPreferredSize(new java.awt.Dimension(73, 26));
		jButtonOk.addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyReleased(final java.awt.event.KeyEvent evt) {
				jButtonOkKeyReleased(evt);
			}
		});

		jButtonOk.addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mousePressed(final java.awt.event.MouseEvent evt) {
				jButtonOkMousePressed(evt);
			}
		});

		jPanelOkCancel.add(jButtonOk);

		jButtonCancel.setForeground(new java.awt.Color(51, 0, 102));
		jButtonCancel.setText("Cancel");
		jButtonCancel.addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mousePressed(final java.awt.event.MouseEvent evt) {
				jButtonCancelMousePressed(evt);
			}
		});

		jPanelOkCancel.add(jButtonCancel);

		getContentPane().add(jPanelOkCancel, java.awt.BorderLayout.SOUTH);

		jPanelRight.setLayout(new java.awt.BorderLayout());

		jPanelSliders.setLayout(new java.awt.GridBagLayout());

		jPanelSliders.setBackground(new java.awt.Color(204, 204, 204));
		jPanelSliders.setBorder(new javax.swing.border.TitledBorder(null, "N\u00edveis",
				javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION,
				new java.awt.Font("Dialog", 0, 11), new java.awt.Color(51, 0, 102)));
		jLabelRI0.setForeground(new java.awt.Color(51, 0, 102));
		jLabelRI0.setText("I0");
		jPanelSliders.add(jLabelRI0, new java.awt.GridBagConstraints());

		jSliderI0.setMajorTickSpacing(20);
		jSliderI0.setMaximum(255);
		jSliderI0.setPaintTicks(true);
		jSliderI0.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jSliderI0StateChanged(evt);
			}
		});

		jPanelSliders.add(jSliderI0, new java.awt.GridBagConstraints());

		jTextFieldI0.setBackground(new java.awt.Color(255, 255, 255));
		jTextFieldI0.setColumns(3);
		jTextFieldI0.setForeground(new java.awt.Color(51, 0, 102));
		jTextFieldI0.addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyReleased(final java.awt.event.KeyEvent evt) {
				jTextFieldI0KeyReleased(evt);
			}
		});

		jPanelSliders.add(jTextFieldI0, new java.awt.GridBagConstraints());

		jLabelRI1.setForeground(new java.awt.Color(51, 0, 102));
		jLabelRI1.setText("I1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		jPanelSliders.add(jLabelRI1, gridBagConstraints);

		jSliderI1.setMajorTickSpacing(20);
		jSliderI1.setMaximum(255);
		jSliderI1.setPaintTicks(true);
		jSliderI1.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jSliderI1StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		jPanelSliders.add(jSliderI1, gridBagConstraints);

		jTextFieldI1.setBackground(new java.awt.Color(255, 255, 255));
		jTextFieldI1.setColumns(3);
		jTextFieldI1.setForeground(new java.awt.Color(51, 0, 102));
		jTextFieldI1.addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyReleased(final java.awt.event.KeyEvent evt) {
				jTextFieldI1KeyReleased(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 1;
		jPanelSliders.add(jTextFieldI1, gridBagConstraints);

		jLabelRI2.setForeground(new java.awt.Color(51, 0, 102));
		jLabelRI2.setText("I2");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		jPanelSliders.add(jLabelRI2, gridBagConstraints);

		jSliderI2.setMajorTickSpacing(20);
		jSliderI2.setMaximum(255);
		jSliderI2.setPaintTicks(true);
		jSliderI2.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jSliderI2StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		jPanelSliders.add(jSliderI2, gridBagConstraints);

		jTextFieldI2.setBackground(new java.awt.Color(255, 255, 255));
		jTextFieldI2.setColumns(3);
		jTextFieldI2.setForeground(new java.awt.Color(51, 0, 102));
		jTextFieldI2.addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyReleased(final java.awt.event.KeyEvent evt) {
				jTextFieldI2KeyReleased(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 2;
		jPanelSliders.add(jTextFieldI2, gridBagConstraints);

		jLabelRI3.setForeground(new java.awt.Color(51, 0, 102));
		jLabelRI3.setText("I3");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		jPanelSliders.add(jLabelRI3, gridBagConstraints);

		jSliderI3.setMajorTickSpacing(20);
		jSliderI3.setMaximum(255);
		jSliderI3.setPaintTicks(true);
		jSliderI3.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jSliderI3StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 3;
		jPanelSliders.add(jSliderI3, gridBagConstraints);

		jTextFieldI3.setBackground(new java.awt.Color(255, 255, 255));
		jTextFieldI3.setColumns(3);
		jTextFieldI3.setForeground(new java.awt.Color(51, 0, 102));
		jTextFieldI3.addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyReleased(final java.awt.event.KeyEvent evt) {
				jTextFieldI3KeyReleased(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 3;
		jPanelSliders.add(jTextFieldI3, gridBagConstraints);

		jLabelRI4.setForeground(new java.awt.Color(51, 0, 102));
		jLabelRI4.setText("I4");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		jPanelSliders.add(jLabelRI4, gridBagConstraints);

		jSliderI4.setMajorTickSpacing(20);
		jSliderI4.setMaximum(255);
		jSliderI4.setPaintTicks(true);
		jSliderI4.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jSliderI4StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 4;
		jPanelSliders.add(jSliderI4, gridBagConstraints);

		jTextFieldI4.setBackground(new java.awt.Color(255, 255, 255));
		jTextFieldI4.setColumns(3);
		jTextFieldI4.setForeground(new java.awt.Color(51, 0, 102));
		jTextFieldI4.addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyReleased(final java.awt.event.KeyEvent evt) {
				jTextFieldI4KeyReleased(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 4;
		jPanelSliders.add(jTextFieldI4, gridBagConstraints);

		jLabelRI5.setForeground(new java.awt.Color(51, 0, 102));
		jLabelRI5.setText("I5");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 5;
		jPanelSliders.add(jLabelRI5, gridBagConstraints);

		jSliderI5.setMajorTickSpacing(20);
		jSliderI5.setMaximum(255);
		jSliderI5.setPaintTicks(true);
		jSliderI5.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jSliderI5StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 5;
		jPanelSliders.add(jSliderI5, gridBagConstraints);

		jTextFieldI5.setBackground(new java.awt.Color(255, 255, 255));
		jTextFieldI5.setColumns(3);
		jTextFieldI5.setForeground(new java.awt.Color(51, 0, 102));
		jTextFieldI5.addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyReleased(final java.awt.event.KeyEvent evt) {
				jTextFieldI5KeyReleased(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 5;
		jPanelSliders.add(jTextFieldI5, gridBagConstraints);

		jLabelRI6.setForeground(new java.awt.Color(51, 0, 102));
		jLabelRI6.setText("I6");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 6;
		jPanelSliders.add(jLabelRI6, gridBagConstraints);

		jSliderI6.setMajorTickSpacing(20);
		jSliderI6.setMaximum(255);
		jSliderI6.setPaintTicks(true);
		jSliderI6.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jSliderI6StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 6;
		jPanelSliders.add(jSliderI6, gridBagConstraints);

		jTextFieldI6.setBackground(new java.awt.Color(255, 255, 255));
		jTextFieldI6.setColumns(3);
		jTextFieldI6.setForeground(new java.awt.Color(51, 0, 102));
		jTextFieldI6.addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyReleased(final java.awt.event.KeyEvent evt) {
				jTextFieldI6KeyReleased(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 6;
		jPanelSliders.add(jTextFieldI6, gridBagConstraints);

		jLabelRI7.setForeground(new java.awt.Color(51, 0, 102));
		jLabelRI7.setText("I7");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 7;
		jPanelSliders.add(jLabelRI7, gridBagConstraints);

		jSliderI7.setMajorTickSpacing(20);
		jSliderI7.setMaximum(255);
		jSliderI7.setPaintTicks(true);
		jSliderI7.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jSliderI7StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 7;
		jPanelSliders.add(jSliderI7, gridBagConstraints);

		jTextFieldI7.setBackground(new java.awt.Color(255, 255, 255));
		jTextFieldI7.setColumns(3);
		jTextFieldI7.setForeground(new java.awt.Color(51, 0, 102));
		jTextFieldI7.addKeyListener(new java.awt.event.KeyAdapter() {
			@Override
			public void keyReleased(final java.awt.event.KeyEvent evt) {
				jTextFieldI7KeyReleased(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 7;
		jPanelSliders.add(jTextFieldI7, gridBagConstraints);

		jPanelRight.add(jPanelSliders, java.awt.BorderLayout.CENTER);

		jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/pt/utl/ist/elab/client/webrobot/customizer/Comps/Icons/ivpwm.gif")));
		jPanelRight.add(jLabel1, java.awt.BorderLayout.EAST);

		getContentPane().add(jPanelRight, java.awt.BorderLayout.EAST);

		pack();
	}// GEN-END:initComponents

	private void jRadioButtonI0StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jRadioButtonI0StateChanged
		if (jRadioButtonI0.isSelected()) {
			jSliderI0.setEnabled(true);
			jTextFieldI0.setEditable(true);
		} else {
			jSliderI0.setEnabled(false);
			jTextFieldI0.setEditable(false);
		}
	}// GEN-LAST:event_jRadioButtonI0StateChanged

	private void jRadioButtonI1StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jRadioButtonI1StateChanged
		if (jRadioButtonI1.isSelected()) {
			jSliderI1.setEnabled(true);
			jTextFieldI1.setEditable(true);
		} else {
			jSliderI1.setEnabled(false);
			jTextFieldI1.setEditable(false);
		}
	}// GEN-LAST:event_jRadioButtonI1StateChanged

	private void jRadioButtonI2StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jRadioButtonI2StateChanged
		if (jRadioButtonI2.isSelected()) {
			jSliderI2.setEnabled(true);
			jTextFieldI2.setEditable(true);
		} else {
			jSliderI2.setEnabled(false);
			jTextFieldI2.setEditable(false);
		}
	}// GEN-LAST:event_jRadioButtonI2StateChanged

	private void jRadioButtonI3StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jRadioButtonI3StateChanged
		if (jRadioButtonI3.isSelected()) {
			jSliderI3.setEnabled(true);
			jTextFieldI3.setEditable(true);
		} else {
			jSliderI3.setEnabled(false);
			jTextFieldI3.setEditable(false);
		}
	}// GEN-LAST:event_jRadioButtonI3StateChanged

	private void jRadioButtonI4StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jRadioButtonI4StateChanged
		if (jRadioButtonI4.isSelected()) {
			jSliderI4.setEnabled(true);
			jTextFieldI4.setEditable(true);
		} else {
			jSliderI4.setEnabled(false);
			jTextFieldI4.setEditable(false);
		}
	}// GEN-LAST:event_jRadioButtonI4StateChanged

	private void jRadioButtonI5StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jRadioButtonI5StateChanged
		if (jRadioButtonI5.isSelected()) {
			jSliderI5.setEnabled(true);
			jTextFieldI5.setEditable(true);
		} else {
			jSliderI5.setEnabled(false);
			jTextFieldI5.setEditable(false);
		}
	}// GEN-LAST:event_jRadioButtonI5StateChanged

	private void jRadioButtonI6StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jRadioButtonI6StateChanged
		if (jRadioButtonI6.isSelected()) {
			jSliderI6.setEnabled(true);
			jTextFieldI6.setEditable(true);
		} else {
			jSliderI6.setEnabled(false);
			jTextFieldI6.setEditable(false);
		}
	}// GEN-LAST:event_jRadioButtonI6StateChanged

	private void jRadioButtonI7StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jRadioButtonI7StateChanged
		if (jRadioButtonI7.isSelected()) {
			jSliderI7.setEnabled(true);
			jTextFieldI7.setEditable(true);
		} else {
			jSliderI7.setEnabled(false);
			jTextFieldI7.setEditable(false);
		}
	}// GEN-LAST:event_jRadioButtonI7StateChanged

	private void jTableMouseClicked(final java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jTableMouseClicked
		if (evt.getClickCount() == 2) {
			wasDoubleClick = true;
			rowWasSelected(tempListEvt);
		}
	}// GEN-LAST:event_jTableMouseClicked

	private void jButtonOkKeyReleased(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jButtonOkKeyReleased
		if (evt.getKeyCode() == 10) {
			jButtonOkMousePressed(null);
		} else if (evt.getKeyCode() == 27) {
			jButtonCancelMousePressed(null);
		}
	}// GEN-LAST:event_jButtonOkKeyReleased

	private void formKeyReleased(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_formKeyReleased
		if (evt.getKeyCode() == 10) {
			jButtonOkMousePressed(null);
		} else if (evt.getKeyCode() == 27) {
			jButtonCancelMousePressed(null);
		}
	}// GEN-LAST:event_formKeyReleased

	private void jButtonCancelMousePressed(final java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jButtonCancelMousePressed
		setCancel(true);
		closeDialog(null);
	}// GEN-LAST:event_jButtonCancelMousePressed

	private void jButtonOkMousePressed(final java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jButtonOkMousePressed
		if (checkTextValues.isOK(jTextFieldI7) && checkTextValues.isOK(jTextFieldI6)
				&& checkTextValues.isOK(jTextFieldI5) && checkTextValues.isOK(jTextFieldI4)
				&& checkTextValues.isOK(jTextFieldI3) && checkTextValues.isOK(jTextFieldI2)
				&& checkTextValues.isOK(jTextFieldI1) && checkTextValues.isOK(jTextFieldI0)) {
			model.setI0State(convertBooleanInt(jRadioButtonI0.isSelected()));
			model.setI1State(convertBooleanInt(jRadioButtonI1.isSelected()));
			model.setI2State(convertBooleanInt(jRadioButtonI2.isSelected()));
			model.setI3State(convertBooleanInt(jRadioButtonI3.isSelected()));
			model.setI4State(convertBooleanInt(jRadioButtonI4.isSelected()));
			model.setI5State(convertBooleanInt(jRadioButtonI5.isSelected()));
			model.setI6State(convertBooleanInt(jRadioButtonI6.isSelected()));
			model.setI7State(convertBooleanInt(jRadioButtonI7.isSelected()));
			model.setI0Value(jSliderI0.getValue());
			model.setI1Value(jSliderI1.getValue());
			model.setI2Value(jSliderI2.getValue());
			model.setI3Value(jSliderI3.getValue());
			model.setI4Value(jSliderI4.getValue());
			model.setI5Value(jSliderI5.getValue());
			model.setI6Value(jSliderI6.getValue());
			model.setI7Value(jSliderI7.getValue());
			final Object[][] tempObj = new Object[defaultTableModel.getRowCount()][3];
			for (int i = 0; i < defaultTableModel.getRowCount(); i++) {
				tempObj[i][0] = defaultTableModel.getValueAt(i, 0);
				tempObj[i][1] = defaultTableModel.getValueAt(i, 1);
				tempObj[i][2] = defaultTableModel.getValueAt(i, 2);
			}
			model.setIValues(tempObj);
			setCancel(false);
			closeDialog(null);
		}
	}// GEN-LAST:event_jButtonOkMousePressed

	private void jTextFieldI7KeyReleased(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jTextFieldI7KeyReleased
		setTextFieldText(jTextFieldI7, jSliderI7);
	}// GEN-LAST:event_jTextFieldI7KeyReleased

	private void jTextFieldI6KeyReleased(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jTextFieldI6KeyReleased
		setTextFieldText(jTextFieldI6, jSliderI6);
	}// GEN-LAST:event_jTextFieldI6KeyReleased

	private void jTextFieldI5KeyReleased(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jTextFieldI5KeyReleased
		setTextFieldText(jTextFieldI5, jSliderI5);
	}// GEN-LAST:event_jTextFieldI5KeyReleased

	private void jTextFieldI4KeyReleased(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jTextFieldI4KeyReleased
		setTextFieldText(jTextFieldI4, jSliderI4);
	}// GEN-LAST:event_jTextFieldI4KeyReleased

	private void jTextFieldI3KeyReleased(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jTextFieldI3KeyReleased
		setTextFieldText(jTextFieldI3, jSliderI3);
	}// GEN-LAST:event_jTextFieldI3KeyReleased

	private void jTextFieldI2KeyReleased(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jTextFieldI2KeyReleased
		setTextFieldText(jTextFieldI2, jSliderI2);
	}// GEN-LAST:event_jTextFieldI2KeyReleased

	private void jTextFieldI1KeyReleased(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jTextFieldI1KeyReleased
		setTextFieldText(jTextFieldI1, jSliderI1);
	}// GEN-LAST:event_jTextFieldI1KeyReleased

	private void jTextFieldI0KeyReleased(final java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jTextFieldI0KeyReleased
		setTextFieldText(jTextFieldI0, jSliderI0);
	}// GEN-LAST:event_jTextFieldI0KeyReleased

	private void jSliderI7StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jSliderI7StateChanged
		jTextFieldI7.setText("" + jSliderI7.getValue());
	}// GEN-LAST:event_jSliderI7StateChanged

	private void jSliderI6StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jSliderI6StateChanged
		jTextFieldI6.setText("" + jSliderI6.getValue());
	}// GEN-LAST:event_jSliderI6StateChanged

	private void jSliderI5StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jSliderI5StateChanged
		jTextFieldI5.setText("" + jSliderI5.getValue());
	}// GEN-LAST:event_jSliderI5StateChanged

	private void jSliderI4StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jSliderI4StateChanged
		jTextFieldI4.setText("" + jSliderI4.getValue());
	}// GEN-LAST:event_jSliderI4StateChanged

	private void jSliderI3StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jSliderI3StateChanged
		jTextFieldI3.setText("" + jSliderI3.getValue());
	}// GEN-LAST:event_jSliderI3StateChanged

	private void jSliderI2StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jSliderI2StateChanged
		jTextFieldI2.setText("" + jSliderI2.getValue());
	}// GEN-LAST:event_jSliderI2StateChanged

	private void jSliderI1StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jSliderI1StateChanged
		jTextFieldI1.setText("" + jSliderI1.getValue());
	}// GEN-LAST:event_jSliderI1StateChanged

	private void jSliderI0StateChanged(final javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jSliderI0StateChanged
		jTextFieldI0.setText("" + jSliderI0.getValue());
	}// GEN-LAST:event_jSliderI0StateChanged

	private void jButtonNewElemMouseClicked(final java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jButtonNewElemMouseClicked
		final Object[] send = new Object[3];
		send[0] = new String("00000000");
		send[1] = new Integer(0);
		send[2] = new Integer(0);
		confAddNewElement = new pt.utl.ist.elab.client.webrobot.customizer.Comps.Configs.ConfAddNewElement(this, true,
				jRadioButtonI0.isSelected(), jRadioButtonI1.isSelected(), jRadioButtonI2.isSelected(),
				jRadioButtonI3.isSelected(), jRadioButtonI4.isSelected(), jRadioButtonI5.isSelected(),
				jRadioButtonI6.isSelected(), jRadioButtonI7.isSelected(), send);
		new pt.utl.ist.elab.client.webrobot.customizer.Utils.CenterFrame(this, confAddNewElement);
		confAddNewElement.show();
		final Object[] newRowData = confAddNewElement.getReturnObj();
		if (newRowData[0] != null) {
			defaultTableModel.addRow(newRowData);
		}
		reOrderTable();
	}// GEN-LAST:event_jButtonNewElemMouseClicked

	private void rowWasSelected(final javax.swing.event.ListSelectionEvent evt) {
		if (!wasDoubleClick) {
			tempListEvt = evt;
			return;
		}
		wasDoubleClick = false;

		if (listSelectionModel.isSelectionEmpty()) {
			return;
		}
		final int selectedRow = listSelectionModel.getMinSelectionIndex();
		final Object[] send = new Object[3];
		send[0] = defaultTableModel.getValueAt(selectedRow, 0);
		send[1] = defaultTableModel.getValueAt(selectedRow, 1);
		send[2] = defaultTableModel.getValueAt(selectedRow, 2);
		confAddNewElement = new pt.utl.ist.elab.client.webrobot.customizer.Comps.Configs.ConfAddNewElement(this, true,
				jRadioButtonI0.isSelected(), jRadioButtonI1.isSelected(), jRadioButtonI2.isSelected(),
				jRadioButtonI3.isSelected(), jRadioButtonI4.isSelected(), jRadioButtonI5.isSelected(),
				jRadioButtonI6.isSelected(), jRadioButtonI7.isSelected(), send);
		new pt.utl.ist.elab.client.webrobot.customizer.Utils.CenterFrame(this, confAddNewElement);
		confAddNewElement.show();
		if (confAddNewElement.getClean()) {
			defaultTableModel.removeRow(selectedRow);
			return;
		}
		final Object[] newRowData = confAddNewElement.getReturnObj();
		if (newRowData[0] != null) {
			defaultTableModel.setValueAt(newRowData[0], selectedRow, 0);
			defaultTableModel.setValueAt(newRowData[1], selectedRow, 1);
			defaultTableModel.setValueAt(newRowData[2], selectedRow, 2);
		}
		listSelectionModel.clearSelection();
		reOrderTable();
	}

	private void jTableChanged(final javax.swing.event.TableModelEvent evt) {
		jTextFieldNElems.setText("" + jTable.getRowCount());
	}

	/** Closes the dialog */
	private void closeDialog(final java.awt.event.WindowEvent evt) {// GEN-FIRST:event_closeDialog
		if (evt != null) {
			setCancel(true);
		}
		setVisible(false);
		dispose();
	}// GEN-LAST:event_closeDialog

	/**
	 * @param args the command line arguments
	 * 
	 *            public static void main(String args[]) { new ConfIVPWM(new
	 *            javax.swing.JFrame(), true).show(); }
	 */

	private void setTextFieldText(final javax.swing.JTextField jTextField, final javax.swing.JSlider jSlider) {
		try {
			if (new Integer(jTextField.getText()).intValue() < 1) {
				jTextField.setText("" + 1);
			} else if (new Integer(jTextField.getText()).intValue() > 255) {
				jTextField.setText("" + 255);
			}
			jSlider.setValue(new Integer(jTextField.getText()).intValue());
		} catch (final NumberFormatException nfe) {
		}
	}

	public void readModel() {
		jRadioButtonI0.setSelected(convertIntBoolean(model.getI0State()));
		jRadioButtonI1.setSelected(convertIntBoolean(model.getI1State()));
		jRadioButtonI2.setSelected(convertIntBoolean(model.getI2State()));
		jRadioButtonI3.setSelected(convertIntBoolean(model.getI3State()));
		jRadioButtonI4.setSelected(convertIntBoolean(model.getI4State()));
		jRadioButtonI5.setSelected(convertIntBoolean(model.getI5State()));
		jRadioButtonI6.setSelected(convertIntBoolean(model.getI6State()));
		jRadioButtonI7.setSelected(convertIntBoolean(model.getI7State()));
		jSliderI0.setValue(model.getI0Value());
		jSliderI1.setValue(model.getI1Value());
		jSliderI2.setValue(model.getI2Value());
		jSliderI3.setValue(model.getI3Value());
		jSliderI4.setValue(model.getI4Value());
		jSliderI5.setValue(model.getI5Value());
		jSliderI6.setValue(model.getI6Value());
		jSliderI7.setValue(model.getI7Value());
		jTextFieldI0.setText("" + model.getI0Value());
		jTextFieldI1.setText("" + model.getI1Value());
		jTextFieldI2.setText("" + model.getI2Value());
		jTextFieldI3.setText("" + model.getI3Value());
		jTextFieldI4.setText("" + model.getI4Value());
		jTextFieldI5.setText("" + model.getI5Value());
		jTextFieldI6.setText("" + model.getI6Value());
		jTextFieldI7.setText("" + model.getI7Value());
		if (jRadioButtonI0.isSelected()) {
			jSliderI0.setEnabled(true);
			jTextFieldI0.setEditable(true);
		} else {
			jSliderI0.setEnabled(false);
			jTextFieldI0.setEditable(false);
		}
		if (jRadioButtonI1.isSelected()) {
			jSliderI1.setEnabled(true);
			jTextFieldI1.setEditable(true);
		} else {
			jSliderI1.setEnabled(false);
			jTextFieldI1.setEditable(false);
		}
		if (jRadioButtonI2.isSelected()) {
			jSliderI2.setEnabled(true);
			jTextFieldI2.setEditable(true);
		} else {
			jSliderI2.setEnabled(false);
			jTextFieldI2.setEditable(false);
		}
		if (jRadioButtonI3.isSelected()) {
			jSliderI3.setEnabled(true);
			jTextFieldI3.setEditable(true);
		} else {
			jSliderI3.setEnabled(false);
			jTextFieldI3.setEditable(false);
		}
		if (jRadioButtonI4.isSelected()) {
			jSliderI4.setEnabled(true);
			jTextFieldI4.setEditable(true);
		} else {
			jSliderI4.setEnabled(false);
			jTextFieldI4.setEditable(false);
		}
		if (jRadioButtonI5.isSelected()) {
			jSliderI5.setEnabled(true);
			jTextFieldI5.setEditable(true);
		} else {
			jSliderI5.setEnabled(false);
			jTextFieldI5.setEditable(false);
		}
		if (jRadioButtonI6.isSelected()) {
			jSliderI6.setEnabled(true);
			jTextFieldI6.setEditable(true);
		} else {
			jSliderI6.setEnabled(false);
			jTextFieldI6.setEditable(false);
		}
		if (jRadioButtonI7.isSelected()) {
			jSliderI7.setEnabled(true);
			jTextFieldI7.setEditable(true);
		} else {
			jSliderI7.setEnabled(false);
			jTextFieldI7.setEditable(false);
		}

	}

	public boolean convertIntBoolean(final int i) {
		return (i == 0) ? true : false;
	}

	public int convertBooleanInt(final boolean b) {
		return (b) ? 0 : 1;
	}

	private void reOrderTable() {
		/**
		 * O algoritmo que eu pensei para ordenar a tabela ï¿½ basicamente assim:
		 * Primeiro comeï¿½o por criar uma tabela com os valores binarios em
		 * decimal e a escrevo ainda nessa tabela, para cada valor, a sua linha
		 * depois ordeno essa tabela em funï¿½ï¿½o dos valores De seguida vou juntar
		 * estas novas linhas criadas ao fim da tabela original e apago a tabela
		 * original...MUITO MAL EXPLICADO...MELHOR EXP: 5 linha 0 3 linha 1 4
		 * linha 2 1 linha 3 Reordenando vem: 1 linha 3 3 linha 1 4 linha 2 5
		 * linha 0 ï¿½ tabela ï¿½ entï¿½o adicionada uma primeira linha com o valor 1,
		 * que vai buscar ï¿½ linha 3 da tabela antiga, a linha seguinte vai
		 * buscar ï¿½ linha 1 antiga, depois linha 2 e linha 0 Agora que jï¿½ tenho
		 * uma nova tabela ordenada, apago a antiga
		 */

		String temp;
		int temp2 = 0;
		int temp3 = 0;
		final int[][] orderTable = new int[defaultTableModel.getRowCount()][2];
		final Object[] tempObj = new Object[3];
		for (int i = 0; i < defaultTableModel.getRowCount(); i++) {
			temp = (String) defaultTableModel.getValueAt(i, 0);
			orderTable[i][0] = new Integer(temp.substring(7, 8)).intValue() * 1
					+ new Integer(temp.substring(6, 7)).intValue() * 2 + new Integer(temp.substring(5, 6)).intValue()
					* 4 + new Integer(temp.substring(4, 5)).intValue() * 8
					+ new Integer(temp.substring(3, 4)).intValue() * 16 + new Integer(temp.substring(2, 3)).intValue()
					* 32 + new Integer(temp.substring(1, 2)).intValue() * 64
					+ new Integer(temp.substring(0, 1)).intValue() * 128;
			orderTable[i][1] = i;
		}
		for (int j = 0; j < defaultTableModel.getRowCount(); j++) {
			for (int i = 0; i < defaultTableModel.getRowCount() - 1; i++) {
				if (orderTable[i][0] > orderTable[i + 1][0]) {
					temp2 = orderTable[i + 1][0];
					orderTable[i + 1][0] = orderTable[i][0];
					orderTable[i][0] = temp2;
					temp3 = orderTable[i + 1][1];
					orderTable[i + 1][1] = orderTable[i][1];
					orderTable[i][1] = temp3;
				}
			}
		}
		final int tempRow = defaultTableModel.getRowCount();
		for (int i = 0; i < tempRow; i++) {
			tempObj[0] = defaultTableModel.getValueAt(orderTable[i][1], 0);
			tempObj[1] = defaultTableModel.getValueAt(orderTable[i][1], 1);
			tempObj[2] = defaultTableModel.getValueAt(orderTable[i][1], 2);
			defaultTableModel.addRow(tempObj);
		}
		for (int i = 0; i < tempRow; i++) {
			defaultTableModel.removeRow(tempRow - i - 1);
		}
	}

	/**
	 * Getter for property cancel.
	 * 
	 * @return Value of property cancel.
	 */
	public boolean isCancel() {
		return cancel;
	}

	/**
	 * Setter for property cancel.
	 * 
	 * @param cancel New value of property cancel.
	 */
	public void setCancel(final boolean cancel) {
		this.cancel = cancel;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel jPanelOpts;
	private javax.swing.JLabel jLabelI7;
	private javax.swing.JSlider jSliderI1;
	private javax.swing.JButton jButtonCancel;
	private javax.swing.JSlider jSliderI7;
	private javax.swing.JTextField jTextFieldI7;
	private javax.swing.JLabel jLabelRI3;
	private javax.swing.JLabel jLabelI4;
	private javax.swing.JLabel jLabelI5;
	private javax.swing.JRadioButton jRadioButtonI1;
	private javax.swing.JTextField jTextFieldI3;
	private javax.swing.JLabel jLabelRI5;
	private javax.swing.JLabel jLabelRI2;
	private javax.swing.JSlider jSliderI2;
	private javax.swing.JButton jButtonNewElem;
	private javax.swing.JLabel jLabelI3;
	private javax.swing.JRadioButton jRadioButtonI0;
	private javax.swing.JSlider jSliderI4;
	private javax.swing.JLabel jLabelI2;
	private javax.swing.JSlider jSliderI3;
	private javax.swing.JTextField jTextFieldI0;
	private javax.swing.JLabel jLabelI0;
	private javax.swing.JSlider jSliderI6;
	private javax.swing.JTextField jTextFieldI6;
	private javax.swing.JRadioButton jRadioButtonI5;
	private javax.swing.JRadioButton jRadioButtonI6;
	private javax.swing.JPanel jPanelChooseIs;
	private javax.swing.JTextField jTextFieldI4;
	private javax.swing.JPanel jPanelOkCancel;
	private javax.swing.JLabel jLabelRI6;
	private javax.swing.JRadioButton jRadioButtonI4;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JTextField jTextFieldI1;
	private javax.swing.JRadioButton jRadioButtonI2;
	private javax.swing.JLabel jLabelRI4;
	private javax.swing.JLabel jLabelRI0;
	private javax.swing.JTextField jTextFieldI2;
	private javax.swing.JSlider jSliderI5;
	private javax.swing.JRadioButton jRadioButtonI7;
	private javax.swing.JLabel jLabelI6;
	private javax.swing.JLabel jLabelNElems;
	private javax.swing.JLabel jLabelRI7;
	private javax.swing.JTable jTable;
	private javax.swing.JTextField jTextFieldI5;
	private javax.swing.JButton jButtonOk;
	private javax.swing.JSlider jSliderI0;
	private javax.swing.JPanel jPanelLeft;
	private javax.swing.JLabel jLabelRI1;
	private javax.swing.JPanel jPanelRight;
	private javax.swing.JRadioButton jRadioButtonI3;
	private javax.swing.JScrollPane jScrollPaneTable;
	private javax.swing.JPanel jPanelSliders;
	private javax.swing.JTextField jTextFieldNElems;
	private javax.swing.JLabel jLabelI1;
	// End of variables declaration//GEN-END:variables
	private final pt.utl.ist.elab.client.webrobot.customizer.Models.ModelIVPWM model;
	private pt.utl.ist.elab.client.webrobot.customizer.Comps.Configs.ConfAddNewElement confAddNewElement;
	private javax.swing.table.TableColumnModel tableColumnModel;
	private javax.swing.ListSelectionModel listSelectionModel;
	private javax.swing.table.DefaultTableModel defaultTableModel;
	private final pt.utl.ist.elab.client.webrobot.customizer.Utils.CheckTextValues checkTextValues = new pt.utl.ist.elab.client.webrobot.customizer.Utils.CheckTextValues(
			this);
	private javax.swing.event.ListSelectionEvent tempListEvt = null;// for
	// double-click
	private boolean wasDoubleClick = false;// for double click

	/** Holds value of property cancel. */
	private boolean cancel = false;
}
