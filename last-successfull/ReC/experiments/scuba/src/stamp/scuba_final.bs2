'{$STAMP BS2}
Pos	data(2)			'ultima posicao do step motor
i	var	word		'contador auxiliar
j	var	word		'contador auxiliar
x	var	word		'posicao a atingir (de 0 a 900 mm) input 0 a 900 em mm, step 10 mm erro 1mm
p	var	word		'posicao absoluta (em voltas step motor)
xini	var	word		'posicao inicial em milimetros
xfin	var	word		'posicao final em milimetros	
dx	var	word		'intervalo entre pontos	(milimetros)
npontos	var	word		'numero de pontos a adquirir (<500, e npontos<(45*(ABS(xfin-xini))
press	var	word		'valor lido pelo ADC1 no canal i (0 -> 2048 <=> 0 -> 10KPa, erro 20 Pa)
config 	var	nib		'nibble de configuração enviado aos ADCs
sk	var	byte		'Byte auxiliar (skip)
calib	var	bit		'flag utilizada pra calibrar (=1 calibra, 0 n calibra)
invert	var	bit		'Desce ou sobe consoante xfin>xini
noinvert var 	bit		' Se 1 desce se 0 sobe

convx 	con	45		'Converte posicao em steps
CLK	con	14		'linha de clock
CS1	con	13		'chip select ADC1		
CS2	con	12		'chip select ADC2
dataio	con	15
TX	con	16
RX	con	16
speed   con     16468		'16572/4800 16468/9600 16780/2400 17197/1200
 
read Pos,p
DIRC=%1111
OUTC=%0000
gosub blink
low 4
i=0
mainloop:

	SerOut TX,speed,["ready ", $D,$A]
	Serin RX,speed,10000,Parking,[wait("relay "),dec3 xini,sk,dec3 xfin,sk,dec3 npontos,sk,bin1 calib]
	xini=xini/10
	xfin=xfin/10
	pause 2000
	high 4				'liga as luzes

	If (calib = 0) then no_calib	'verifica se foi pedida uma calibração
	
	debug "A calibrar...",cr,$A
	x = 0
	gosub posi
	For j=1 to 200			'força todos os tubos para a posição zero
		outC=%0001
		pause 2
		outC=%0011
		pause 2
		outC=%0010
		pause 2
		outC=%0110
		pause 2
		outC=%0100
		pause 2
		outC=%1100
		pause 2
		outC=%1000
		pause 2
		outC=%1001
		pause 2
		pause 10
	next
	p=0
	x=100
	gosub posi
	debug "fim de calibracao", cr, $A
	pause 1000
	p = 0
	write pos,p
	OutC = %0000
no_calib:				'sem calibração. Segue o curso normal
	If Not(npontos=0) then no_zero
	npontos = 1
no_zero:
	x = convx*xini
	gosub posi
	invert=0
	noinvert=1
	if xfin>xini then desce
		invert=1	'sobe
		noinvert=0
	desce:
	dx = (convx*(ABS(xfin-xini)))/npontos 
	For j = 0 to npontos
		x=((convx*xini) + ((j*dx)*noinvert)-((j*dx)*invert))				'npontos < (1450/xini/2)
		debug "status: ",dec j," ",dec (10*x)/convx," ",dec dx," ",dec1 noinvert,cr,$A

		gosub posi
		pause 400	
		config = %1011
		low CS1							' Activate the ADC.
		shiftout dataio,CLK,lsbfirst,[config\4]			' Send config bits.
		shiftin dataio,CLK,msbpost,[press\12] 			' Get data bits.						' Deactivate the ADC.
		high CS1
		debug "P1: ",dec4 press,cr,$A
		
		config = %1111						' Mede a pressão
		low CS1 						' Activate the ADC.
		shiftout dataio,CLK,lsbfirst,[config\4]			' Send config bits.
		shiftin dataio,CLK,msbpost,[press\12] 			' Get data bits.
		high CS1		
		debug "P2: ",dec4 press,cr,$A		

		config = %1011
		low CS2 						' Activate the ADC.
		shiftout dataio,CLK,lsbfirst,[config\4]			' Send config bits.
		shiftin dataio,CLK,msbpost,[press\12] 			' Get data bits.						' Deactivate the ADC.
		high CS2
		debug "P3: ",dec4 press,cr,$A
		
		config = %1111						' Mede a pressão
		low CS2 						' Activate the ADC.
		shiftout dataio,CLK,lsbfirst,[config\4]			' Send config bits.
		shiftin dataio,CLK,msbpost,[press\12] 			' Get data bits.
		high CS2		
		debug "P4: ",dec4 press,cr,$A

	next
		
Parking:

	low 4				'desliga as luzes
goto mainloop				'volta ao inicio


'*************************************************** 
'*	coloca os sensores na altura desejada      *
'***************************************************
:Posi
if x<p then go_up
	
go_down:
for i=1 to x-p
outC=%0001
pause 2
outC=%1001
pause 2
outC=%1000
pause 2
outC=%1100
pause 2
outC=%0100
pause 2
outC=%0110
pause 2
outC=%0010
pause 2
outC=%0011
pause 2
next
p=x
write pos,p
OutC = %0000
return

go_up:
for i=1 to p-x
outC=%0001
pause 2
outC=%0011
pause 2
outC=%0010
pause 2
outC=%0110
pause 2
outC=%0100
pause 2
outC=%1100
pause 2
outC=%1000
pause 2
outC=%1001
pause 2
next
p=x
write pos,p
outC = %0000
return
:go_back
return

'********************************


'********************************
'*      Pisca o led 5 vezes	*
'********************************

:Blink
For i=0 to 4
	low 7
	pause 250
	high 7
	pause 250
	next
return
'********************************

debug "Fim"