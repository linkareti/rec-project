'{$STAMP BS2}
'{$PBASIC 2.5}
'{$PORT COM2}

'******* DEFAULT VARIABLES ********

speedCon  CON 16390 '16390/38400 16572/4800 16468/9600 16780/2400 17197/1200
spaceByte VAR Byte  'Byte auxiliar (Space)
TX    		CON 16
RX    		CON 16
CTS   		CON 3
i     		VAR Word  'variavel generica para interaccoes
nsamples  VAR Word  'numero de amostras a adquirir

'******* END DEFAULT VARIABLES *******

'******* SPECIFIC VARIABLES ********

led         PIN 8
chipsel    	PIN 9    		'pin de seleccao do ADC
clock     	PIN 11   		'pin de clock do ADC
datainout  	PIN 15   		'pin de entrada e saida de dados do ADC
altpwm      PIN 10			'pin do pwm de controlo da altura
angpwm      PIN 12      'pin do pwm de controlo do angulo inicial
leitura    	VAR Word 		'guarda a ultima leitura do ADC
media		    VAR Word(4) 'guarda as medias das ultimas leituras do ADC
config      VAR Nib  		'sequencia de configuracao do ADC
freq        VAR Byte    'frequencia de amostragem
delay       VAR Word 		'atraso necessario para a freq
altura      VAR Word
angulo      VAR Byte

'******* END SPECIFIC VARIABLES *******

Setup:
  OUTPUT led
  OUTPUT chipsel
  OUTPUT clock
  OUTPUT datainout
  OUTPUT altpwm
  OUTPUT angpwm
  LOW led

  FOR i=0 TO 3 'pisca o led 3 vezes, para indicar que houve um reset
    HIGH led
    PAUSE 500
    LOW led
    PAUSE 500
  NEXT

  LOW altpwm
  LOW angpwm
  config=%1101 'startbit, single-ended, canal 1, msbfirst
  LOW datainout
  HIGH chipsel
  FOR i=0 TO 2
  	media(i)=2048 'inicializa a media onde se espera que ela esteja
  NEXT

NoConfig:
  media(3)=media(2)
  media(2)=media(1)
  media(1)=media(0)

  FOR i=1 TO 5
    OUTPUT datainout
    LOW chipsel
    SHIFTOUT datainout, clock, MSBFIRST, [config\4]    ' Send config bits.
    INPUT datainout
    SHIFTIN datainout, clock, MSBPOST, [leitura\12]    ' Get data bits.
    HIGH chipsel
    media(0)=(media(0)*(i-1)+leitura)/i

    OUTPUT datainout
    LOW datainout
  NEXT
  SEROUT TX,speedCon,["CONFIG_START_NOT_DONE",CR] 'informa que nao foi feita a configuracao correctamente

Mainwait:
	SEROUT TX,speedCon,["ELAB_PENDULO_GRAV_STAMP_V01",CR]        ' Identifica-se
  SERIN RX,speedCon,5000,NoConfig,[WAIT("cfg "),DEC3 altura,spaceByte,DEC2 angulo,spaceByte,DEC4 nsamples,spaceByte,DEC3 freq]

  IF freq<=110 THEN Configured
    freq=110

Configured:
	delay=((1000/freq)-(1000/110))
  leitura=(media(0)+media(1)+media(2)+media(3))/4
  SEROUT TX,speedCon,[CR,"CONFIG_START_ACCEPTED",CR]  'Aceitou a configuracao
  PAUSE 1000
  SEROUT TX,speedCon,["STARTED",CR]   ' Avisa que vai arrancar a rotina de aquisicao
  PAUSE 2000
  SEROUT TX, speedCon, ["D ", DEC4 leitura, CR] 'antes de aquirir, envia o valor medio em repouso
  GOSUB SetAltura
  PAUSE 2000
  GOSUB SetAngulo
  PAUSE 2000
  GOSUB Arranca

  FOR i=1 TO nsamples
  	leitura=0
    OUTPUT datainout
    LOW chipsel
  	SHIFTOUT datainout, clock, MSBFIRST, [config\4]    ' Send config bits.
    INPUT datainout
 		SHIFTIN datainout, clock, MSBPOST, [leitura\12]    ' Get data bits.
    HIGH chipsel

 		OUTPUT datainout
    LOW datainout

  	SEROUT TX, speedCon, ["D ", DEC4 leitura, CR]
  	PAUSE delay
  NEXT

  HIGH led
  FOR i=0 TO 10 'espera durante 10 segundos, para o pendulo parar
  	PAUSE 1000
  NEXT
  LOW led

  GOTO Mainwait


SetAltura:
  LOW altpwm
  IF altura<=800 THEN AlturaOK
  altura=0
AlturaOK:
  FOR i=0 TO 30
		PULSOUT altpwm, 1300-altura
		LOW altpwm
		PAUSE 20
	NEXT
RETURN


SetAngulo:
  LOW angpwm
  IF angulo<=90 THEN AnguloOK
  angulo=0
AnguloOK:
	LOW angpwm
  FOR i=0 TO 30
		PULSOUT angpwm, 600
		LOW angpwm
		PAUSE 20
	NEXT
  'SEROUT TX, speedCon, [DEC angulo, CR]
	FOR i=0 TO angulo STEP 2 'coloca o pendulo na posicao inicial
		PULSOUT angpwm, 600+i
		LOW angpwm
		PAUSE 20
	NEXT
  LOW angpwm
  FOR i=0 TO 30
		PULSOUT angpwm, 600+angulo
		LOW angpwm
		PAUSE 20
	NEXT
RETURN


Arranca:
  LOW angpwm
  FOR i=0 TO 30
		PULSOUT angpwm, 450
		LOW angpwm
		PAUSE 20
	NEXT
RETURN