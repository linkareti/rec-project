'{$STAMP BS2}

'Nota que existe um protocolo nas mensagens:
' PC -> STAMP - minúsculas
' STAMP -> PC - maiúsculas

'******* DEFAULT VARIABLES ********

speedCon   	con     16390			'16390/38400 16572/4800 16468/9600 16780/2400 17197/1200
spaceByte	var	byte			'Byte auxiliar (Space)
TX		con	16
RX		con	16
CTS		con     3
i		var 	word
nsamples	var	word			' nº de amostras a adquirir

'******* END DEFAULT VARIABLES *******


'******* SPECIFIC VARIABLES *******

CS 		con	13 			' Selecciona o chip;	12->ADC1 ; 13->ADC2
CLK 		con 	14 			' Clock Para os ADCs.
DIO_n 		con 	15 			' Pino de I/O para os dados.
config 		var 	nib 			' Configuração para o ADC.
AD 		var 	word 			' Variável para guardar os 12 bits do ADC.
startB 		var 	config.bit0 		' Start bit para o ADC.
sglDif 		var 	config.bit1 		' Modo monocanal or diferencial.
chsel 		var 	config.bit2 		' Selecção do canal do ADC.
msbf 		var 	config.bit3 		' Lowbit para terminar a transferência.
alt		var	word			' Guarda a altura da massa do Pendulo em mm. O input pode ir de 40 a 90
teta		var 	byte			' Guarda a amplitude inicial do pendulo. vai de zero a 135.
freq		var 	word			' frequencia de sampling: máx=125 (em Hz).
delay		var	word			' atraso para a freq que se quer
status		var	nib			' config do atrito 
'******* END SPECIFIC VARIABLES *******


'********************************************
'Configuração inicial

InitConfig:	'exemplo de uma rotina de inicializacao
	DIRC = %1111
	alt = 90
	teta = 0
	'low CTS
	gosub Arranca
	pause 2000					' para fazer reset à amplitude do pendulo


'********************************************
'Reset - retorna à base...
Reset:
	gosub FlashLight 'Pisca as luzinhas em cada reset... assim sabemos que lá está...
	high 	CS 					' Deactivate ADC to begin.
	high 	DIO_n					' Set data pin for first start bit.
	chsel = 0 
	goto MainWait


'********************************************
'Não foi configurado
Not_Configured:
	gosub Amplitude
	gosub Altura
	'SerOut TX,speed,["Altura: ",dec2 alt,$D,$A] 		' Display data.
	'SerOut TX,speed,["Amplitude: ",dec3 teta,$D,$A] 	' Display data.
	'SErOut TX,speed,["status: ",bin4 outC,$D,$A]		' Display data.
	SerOut TX,speedCon,["CONFIG_START_NOT_DONE",cr]


'********************************************
'Aguarda um ConfigStart pacientemente, enquanto vai informando quem é!
MainWait:
'       high CTS
	SerOut TX,speedCon,["ELAB_PENDULO_STAMP_V02",cr]				' Identifica-se
	Serin RX,speedCon,5000,Not_Configured,[wait("cfg "),dec2 alt,spaceByte,dec3 teta,spaceByte,dec4 nsamples,spaceByte,dec3 freq,spaceByte,bin2 status]

'	low CTS ' does not low CTS?

'********************************************
'Ok, configurado! Get Ready...
Configured:

	SerOut TX,speedCon,[cr,"CONFIG_START_ACCEPTED",cr]	'Aceitou a configuracao
	pause 2000
	gosub Amplitude
	pause 20
	gosub Altura
	pause 20
	gosub Setup
	pause 20
	pause 1500
	config = %1011 				' Set all bits except oddSign.
	gosub Arranca
	delay = ((1000/freq)-(1000/125))		' calcula o atraso pretendido					'
	i=0
	goto AcqLoopEnter

	

'********************************************
'Set... Go!

AcqLoopEnter:
	SerOut TX,speedCon,["STARTED",cr]		' Avisa que vai arrancar a rotina de aquisicao

AcqLoop:
	low CS 						' Activate the ADC.
	shiftout DIO_n,CLK,lsbfirst,[config\4]		' Send config bits.
	shiftin DIO_n,CLK,msbpost,[AD\12] 		' Get data bits.
	high CS						' Deactivate the ADC.
	SerOut TX,speedCon,["D ",dec4 AD,cr]
	pause delay
	goto Continue
	'Será que não podemos mesmo parar?
	'SerOut TX, speedCon,["STOP", cr]
	'SerIn RX, speedCon,100, Continue, [Wait("stop")] 
	'SerOut TX, speedCon,[cr]
	'goto StopIt

Continue:
	i=i+1
	if i>nsamples then StopIt
	goto AcqLoop

'********************************************
'Stop It!
StopIt:
	pause 2000
	goto Reset

'********************************************
' Função faz piscar 4 vezes o led vermelho para debug
FlashLight:
	low 7
	for i=0 to 4
		out7 = 0
		pause 100
		out7 = 1
		pause 100
	next
	out7 = 0
return
'********************************************


'********************************************
'Faz o setup do atrito do pendulo, comuta os relés 
'de modo a ligar as resistencias de acordo com o input
Setup:				' pode-se por isto no ciclo principal
				' P10-50R, P11-25R
	outC = status*4		' 2 x shift para esquerda para passar dos bits 8 e9 para o 10 e 11
return	
	

'*******************************************
'Função para controlar a altura do pendulo
Altura:

	if (40<=alt) and (alt<=90) then Alt_ok:  
	alt=90

'*******************************************
Alt_ok:	
	low 8
	For i = 0 to 20
		PULSOUT 8,12*alt+120		'12*alt+120
  		Pause 20
		next
	low 8
return

'*******************************************
' Poe o pendulo na posição inicial
Amplitude:

	low 9
	For i = 0 to 20
		PULSOUT 9,730+teta
  		Pause 20
	next
	low 9
return

'*******************************************
'liberta o pendulo da posicao inicial
Arranca:

	low 9
	For i = 0 to 10
		PULSOUT 9,430
  		Pause 10
		next
	low 9
return
'********************************************
