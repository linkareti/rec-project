'{$STAMP BS2}

CS 		con	13 			' Selecciona o chip;	12->ADC1 ; 13->ADC2
CLK 		con 	14 			' Clock Para os ADCs.
DIO_n 		con 	15 		' Pino de I/O para os dados.
config 		var 	nib 		' Configuração para o ADC.
pressao 	var 	word 			' Pressão no interior da seringa.
startB 		var 	config.bit0 ' Start bit para o ADC.
sglDif 		var 	config.bit1 ' Modo monocanal or diferencial.
chsel 		var 	config.bit2 ' Selecção do canal do ADC.
msbf 		var 	config.bit3 	' Lowbit para terminar a transferência.
posi		var	word			' Posição lida pelo ADC
userposlow	var	word			' Posição inicial [0..25]
userposhigh	var	word			' Posição final [0..25]
npontos		var	word		' nº de pontos a adquirir no intervalo npontos<|userposlow-userposhigh|*20
i		var 	word			' Contador auxiliar
dt		var 	word			' Intervalo entre pontos [0..10000]
dx		var 	word			' Espaço entre pontos
sk		var	byte			' Byte auxiliar (skip)

posizero	con	450			'offset PWM para posicao inicial
Convert		con	23		'factor de conversao decimasmililitro para unidades PWM (2us)
CTS		con	3
TX		con	16
RX		con	16
speed   	con   16468			'16572/4800 16468/9600 16780/2400 17197/1200
ConvPres	con	14			' Factor conversao ADC->kPa
ConvVol		con	2		' Factor conversao ADC->Volume
VolInit		con	5000		' Volume inicial em microlitros

'********************************************
'Configuração inicial

	low 	CTS
	high 	CS 					' Deactivate ADC to begin.
	high 	DIO_n					' Set data pin for first start bit. 
	gosub 	Pisca
Parking:
	DIR8=1
	low 8
	PULSOUT 8,posizero-20
  	Pause 200
	PULSOUT 8,posizero-20
	low 8

'********************************************	


'********************************************
'Lê a posição da seringa e o valor da pressão
'********************************************

mainloop:

	high CTS
	SerOut TX,speed,["ready",$D,$A]
	Serin RX,speed,5000,Parking,[wait("relay "),dec2 userposlow,sk,dec2 userposhigh,sk,dec4 npontos,sk,dec4 dt]
	pause 1000
	userposlow=userposlow*Convert
	userposhigh=userposhigh*Convert
	dx = (userposhigh/npontos)-(userposlow/npontos)
	for i= 0 to 10
		low 8
		PULSOUT 8,posizero+userposlow
	  	low 8
		pause 20
	next

	for i = 0 to npontos
		low 8
		PULSOUT 8,posizero+userposlow+(i*dx)
  		low 8
		pause dt	
		config = %1011 					' Set all bits except oddSign.
		low CS 						' Activate the ADC.
		shiftout DIO_n,CLK,lsbfirst,[config\4]	' Send config bits.
		shiftin DIO_n,CLK,msbpost,[posi\12] 	' Get data bits.	
		high CS						' Deactivate the ADC.
		config = %1111					' Mede a pressão
		low CS 						' Activate the ADC.
		shiftout DIO_n,CLK,lsbfirst,[config\4]	' Send config bits.
		shiftin DIO_n,CLK,msbpost,[pressao\12] 	' Get data bits.
		high CS						' Deactivate the ADC.
		debug "Pressao: ",DEC ConvPres*pressao," Volume: ",DEC (VolInit-((11*posi)/17)),cr 	' Display data.
	next
pause 3000		
goto Parking

'********************************************
' Função faz piscar 4 vezes o led vermelho para debug
Pisca:
	low 7
	for i=0 to 4
		out7 = 0
		pause 400
		out7 = 1
		pause 400
		next
	return
'********************************************