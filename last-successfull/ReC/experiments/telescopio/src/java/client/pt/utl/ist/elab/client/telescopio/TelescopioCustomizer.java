/*
            Janelabeans.java vers�o 2
  Classe da Interface grafica
  Created on 19 de Outubro de 2004, 17:21
 */
package pt.utl.ist.elab.client.telescopio;

import javax.swing.ScrollPaneConstants;

import com.linkare.rec.data.config.HardwareAcquisitionConfig;
import com.linkare.rec.data.metadata.HardwareInfo;
import com.linkare.rec.impl.client.customizer.ICustomizerListener;
import com.linkare.rec.impl.i18n.ReCResourceBundle;

public class TelescopioCustomizer extends javax.swing.JPanel implements
		com.linkare.rec.impl.client.customizer.ICustomizer {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1484102371248701339L;
	final Ceu novoCeu = new Ceu();

	public TelescopioCustomizer() {

		initComponents();

		// Cria��o da Lista a partir do vector de objetos visiveis da classe Ceu
		jList1.setModel(new javax.swing.AbstractListModel() {
			/**
			 * 
			 */
			private static final long serialVersionUID = -6046558377927448130L;

			@Override
			public int getSize() {
				return Ceu.comprimentoVisivel;
			}

			@Override
			public Object getElementAt(final int i) {
				return Ceu.objectos_visiveis[i].getNome();
			}
		});

		jList1.setSelectedIndex(0);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents()// GEN-BEGIN:initComponents
	{
		java.awt.GridBagConstraints gridBagConstraints;

		buttonGroup1 = new javax.swing.ButtonGroup();
		jPanel1 = new javax.swing.JPanel();
		jPanel2 = new javax.swing.JPanel();
		jPanel4 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jList1 = new javax.swing.JList();
		jLabel3 = new javax.swing.JLabel();
		jPanel5 = new javax.swing.JPanel();
		jLabel2 = new javax.swing.JLabel();
		jLabel1 = new javax.swing.JLabel();
		jPanel6 = new javax.swing.JPanel();
		jPanel3 = new javax.swing.JPanel();
		jRadioButtonTime = new javax.swing.JRadioButton();
		jRadioButtonDefault = new javax.swing.JRadioButton();
		jComboBox1 = new javax.swing.JComboBox();
		jSlider1 = new javax.swing.JSlider();
		jTextField1 = new javax.swing.JTextField();
		jPanel7 = new javax.swing.JPanel();
		jButtonConfirm = new javax.swing.JButton();
		jButtonCancel = new javax.swing.JButton();

		setLayout(new java.awt.BorderLayout());

		setMinimumSize(new java.awt.Dimension(320, 240));
		jPanel1.setLayout(new java.awt.BorderLayout());

		jPanel1.setMaximumSize(new java.awt.Dimension(1024, 768));
		jPanel1.setMinimumSize(new java.awt.Dimension(320, 240));
		jPanel1.setPreferredSize(new java.awt.Dimension(480, 400));
		jPanel1.setAutoscrolls(true);
		jPanel1.setOpaque(false);
		jPanel2.setLayout(new java.awt.BorderLayout());

		jPanel2.setBorder(new javax.swing.border.TitledBorder(ReCResourceBundle
				.findString("telescopio$rec.exp.telescopio.lbl.panelobjs")));
		jPanel4.setLayout(new java.awt.BorderLayout());

		jScrollPane1.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		jScrollPane1.setAutoscrolls(true);
		jList1.setBorder(new javax.swing.border.EtchedBorder());
		jList1.setMaximumSize(new java.awt.Dimension(15, 15));
		jList1.setMinimumSize(new java.awt.Dimension(15, 15));
		jList1.setVisibleRowCount(3);
		jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
			@Override
			public void valueChanged(final javax.swing.event.ListSelectionEvent evt) {
				jList1ValueChanged(evt);
			}
		});

		jScrollPane1.setViewportView(jList1);

		jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

		jLabel3.setText(ReCResourceBundle.findString("telescopio$rec.exp.telescopio.lbl.chooseobj"));
		jPanel4.add(jLabel3, java.awt.BorderLayout.NORTH);

		jPanel2.add(jPanel4, java.awt.BorderLayout.WEST);

		jPanel5.setLayout(new java.awt.BorderLayout());

		jLabel2.setText(ReCResourceBundle.findString("telescopio$rec.exp.telescopio.lbl.objectinfo"));
		jPanel5.add(jLabel2, java.awt.BorderLayout.NORTH);

		jLabel1.setOpaque(true);
		jPanel5.add(jLabel1, java.awt.BorderLayout.CENTER);

		jPanel2.add(jPanel5, java.awt.BorderLayout.CENTER);

		jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

		jPanel6.setLayout(new java.awt.BorderLayout());

		jPanel3.setLayout(new java.awt.GridBagLayout());

		jPanel3.setBorder(new javax.swing.border.TitledBorder(ReCResourceBundle
				.findString("telescopio$rec.exp.telescopio.lbl.expotime")));
		jRadioButtonTime.setText(ReCResourceBundle.findString("telescopio$rec.exp.telescopio.lbl.newtime"));
		buttonGroup1.add(jRadioButtonTime);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = 5;
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.ipadx = 19;
		gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
		jPanel3.add(jRadioButtonTime, gridBagConstraints);

		jRadioButtonDefault.setSelected(true);
		jRadioButtonDefault.setText(ReCResourceBundle.findString("telescopio$rec.exp.telescopio.lbl.default"));
		buttonGroup1.add(jRadioButtonDefault);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 4;
		gridBagConstraints.ipadx = 9;
		gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
		jPanel3.add(jRadioButtonDefault, gridBagConstraints);

		jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ms", "s" }));
		jComboBox1.addItemListener(new java.awt.event.ItemListener() {
			@Override
			public void itemStateChanged(final java.awt.event.ItemEvent evt) {
				jComboBox1ItemStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 6;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.ipadx = 18;
		gridBagConstraints.ipady = -4;
		gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
		jPanel3.add(jComboBox1, gridBagConstraints);

		jSlider1.setMajorTickSpacing(200);
		jSlider1.setMaximum(1000);
		jSlider1.setPaintLabels(true);
		jSlider1.setPaintTicks(true);
		jSlider1.setValue(60);
		jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
			@Override
			public void stateChanged(final javax.swing.event.ChangeEvent evt) {
				jSlider1StateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
		gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
		jPanel3.add(jSlider1, gridBagConstraints);

		jTextField1.setColumns(6);
		jTextField1.setEditable(false);
		jTextField1.setText("60");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 7;
		gridBagConstraints.gridy = 5;
		jPanel3.add(jTextField1, gridBagConstraints);

		jPanel6.add(jPanel3, java.awt.BorderLayout.WEST);

		jPanel7.setLayout(new java.awt.GridBagLayout());

		jButtonConfirm.setText(ReCResourceBundle.findString("telescopio$rec.exp.telescopio.lbl.ok"));
		jButtonConfirm.setMaximumSize(new java.awt.Dimension(20, 10));
		jButtonConfirm.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(final java.awt.event.ActionEvent evt) {
				jButtonConfirmActionPerformed(evt);
				jButton1ActionPerformed(evt);
			}
		});

		jPanel7.add(jButtonConfirm, new java.awt.GridBagConstraints());

		jButtonCancel.setText(ReCResourceBundle.findString("telescopio$rec.exp.telescopio.lbl.cancel"));
		jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(final java.awt.event.ActionEvent evt) {
				jButtonCancelActionPerformed(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
		jPanel7.add(jButtonCancel, gridBagConstraints);

		jPanel6.add(jPanel7, java.awt.BorderLayout.CENTER);

		jPanel1.add(jPanel6, java.awt.BorderLayout.SOUTH);

		add(jPanel1, java.awt.BorderLayout.CENTER);

	}// GEN-END:initComponents

	private void jSlider1StateChanged(final javax.swing.event.ChangeEvent evt)// GEN-FIRST:event_jSlider1StateChanged
	{// GEN-HEADEREND:event_jSlider1StateChanged
		jTextField1.setText("" + jSlider1.getValue());
	}// GEN-LAST:event_jSlider1StateChanged

	private void jComboBox1ItemStateChanged(final java.awt.event.ItemEvent evt)// GEN-FIRST:event_jComboBox1ItemStateChanged
	{// GEN-HEADEREND:event_jComboBox1ItemStateChanged
		if (jComboBox1.getSelectedIndex() == 0) {
			jSlider1.setMaximum(1000);
			jSlider1.setMajorTickSpacing(200);
		} else {
			jSlider1.setMaximum(120);
			jSlider1.setMajorTickSpacing(20);
		}

		jPanel3.revalidate();
		jSlider1.repaint();
	}// GEN-LAST:event_jComboBox1ItemStateChanged

	private void jButtonCancelActionPerformed(final java.awt.event.ActionEvent evt)// GEN-FIRST:event_jButtonCancelActionPerformed
	{// GEN-HEADEREND:event_jButtonCancelActionPerformed
		fireICustomizerListenerCanceled();
	}// GEN-LAST:event_jButtonCancelActionPerformed

	private void jButton1ActionPerformed(final java.awt.event.ActionEvent evt)// GEN-FIRST:event_jButton1ActionPerformed
	{// GEN-HEADEREND:event_jButton1ActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jButton1ActionPerformed

	int tempo_escala = 1;

	private void jList1ValueChanged(final javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_jList1ValueChanged
		final int index = jList1.getSelectedIndex();
		jLabel1.setText(Ceu.objectos_visiveis[index].getComment());
	}// GEN-LAST:event_jList1ValueChanged

	private void jButtonConfirmActionPerformed(final java.awt.event.ActionEvent evt)// GEN-FIRST:event_jButtonConfirmActionPerformed
	{// GEN-HEADEREND:event_jButtonConfirmActionPerformed
		final int index = jList1.getSelectedIndex();

		switch (jComboBox1.getSelectedIndex()) {
		case 0:
			tempo_escala = 1;
			break;
		case 1:
			tempo_escala = 60;
			break;
		case 2:
			tempo_escala = 60 * 60;
			break;
		default:
			break;
		}
		int tempo = jSlider1.getValue() * tempo_escala;
		final String name = Ceu.objectos_visiveis[index].getNomeObjecto();

		if (jRadioButtonDefault.isSelected()) {
			tempo = (int) Double.parseDouble(Ceu.objectos_visiveis[index].getTempo());
		}

		acqConfig.getSelectedHardwareParameter("TempoExp").setParameterValue("" + tempo);

		acqConfig.getSelectedHardwareParameter("Comando").setParameterValue(name);

		acqConfig.setTotalSamples(1);

		fireICustomizerListenerDone();

	}// GEN-LAST:event_jButtonConfirmActionPerformed

	private void jButton2ActionPerformed(final java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_jButton2ActionPerformed

	private void jButton2MouseClicked(final java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jButton2MouseClicked

	}// GEN-LAST:event_jButton2MouseClicked

	private void jButton1MouseClicked(final java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jButton1MouseClicked
		/*
		 * int index= jList1.getSelectedIndex();
		 * tester.mandarObjecto(novoCeu.objectos_visiveis
		 * [index].getNomeObjecto());
		 */
	}// GEN-LAST:event_jButton1MouseClicked

	public static void main(final String args[]) {
		ReCResourceBundle.loadResourceBundle("telescopio",
				"recresource:///pt/utl/ist/elab/client/telescopio/resources/messages");
		final javax.swing.JFrame dummy = new javax.swing.JFrame();
		dummy.getContentPane().add(new TelescopioCustomizer());
		dummy.pack();
		dummy.show();
	}

	/** Utility field used by event firing mechanism. */
	private javax.swing.event.EventListenerList listenerList = null;

	/**
	 * Registers ICustomizerListener to receive events.
	 * 
	 * @param listener The listener to register.
	 */
	@Override
	public synchronized void addICustomizerListener(final ICustomizerListener listener) {
		if (listenerList == null) {
			listenerList = new javax.swing.event.EventListenerList();
		}
		listenerList.add(ICustomizerListener.class, listener);
	}

	/**
	 * Removes ICustomizerListener from the list of listeners.
	 * 
	 * @param listener The listener to remove.
	 */
	@Override
	public synchronized void removeICustomizerListener(final ICustomizerListener listener) {
		listenerList.remove(ICustomizerListener.class, listener);
	}

	/**
	 * Notifies all registered listeners about the event.
	 * 
	 * @param param1 Parameter #1 of the <CODE>EventObject<CODE> constructor.
	 */
	private void fireICustomizerListenerCanceled() {
		if (listenerList == null) {
			return;
		}
		final Object[] listeners = listenerList.getListenerList();
		for (int i = listeners.length - 2; i >= 0; i -= 2) {
			if (listeners[i] == ICustomizerListener.class) {
				((ICustomizerListener) listeners[i + 1]).canceled();
			}
		}
	}

	/**
	 * Notifies all registered listeners about the event.
	 * 
	 * @param param1 Parameter #1 of the <CODE>EventObject<CODE> constructor.
	 */
	private void fireICustomizerListenerDone() {
		if (listenerList == null) {
			return;
		}
		final Object[] listeners = listenerList.getListenerList();
		for (int i = listeners.length - 2; i >= 0; i -= 2) {
			if (listeners[i] == ICustomizerListener.class) {

				((ICustomizerListener) listeners[i + 1]).done();
			}
		}
	}

	private HardwareInfo hardwareInfo = null;
	private HardwareAcquisitionConfig acqConfig = null;

	@Override
	public HardwareAcquisitionConfig getAcquisitionConfig() {
		return acqConfig;
	}

	@Override
	public void setHardwareAcquisitionConfig(final HardwareAcquisitionConfig acqConfig) {
		this.acqConfig = acqConfig;
	}

	@Override
	public void setHardwareInfo(final HardwareInfo hardwareInfo) {
		this.hardwareInfo = hardwareInfo;
	}

	protected HardwareInfo getHardwareInfo() {
		return hardwareInfo;
	}

	@Override
	public javax.swing.JComponent getCustomizerComponent() {
		return this;
	}

	@Override
	public javax.swing.ImageIcon getCustomizerIcon() {
		return new javax.swing.ImageIcon(getClass().getResource(
				"/pt/utl/ist/elab/client/telescopio/resources/telescopio_iconified.png"));
	}

	@Override
	public String getCustomizerTitle() {
		return "Telescope Experiment Configuration Utility";
	}

	@Override
	public javax.swing.JMenuBar getMenuBar() {
		return null;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.ButtonGroup buttonGroup1;
	private javax.swing.JButton jButtonCancel;
	private javax.swing.JButton jButtonConfirm;
	private javax.swing.JComboBox jComboBox1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JList jList1;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel5;
	private javax.swing.JPanel jPanel6;
	private javax.swing.JPanel jPanel7;
	private javax.swing.JRadioButton jRadioButtonDefault;
	private javax.swing.JRadioButton jRadioButtonTime;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JSlider jSlider1;
	private javax.swing.JTextField jTextField1;
	// End of variables declaration//GEN-END:variables

}
