/*
 * TimeCustomizer.java
 *
 * Created on 2 de Julho de 2002, 15:57
 */

package com.linkare.rec.data.synch;

import java.beans.Beans;

/**
 * 
 * @author Jos√© Pedro Pereira - Linkare TI
 */
public class TimeCustomizer extends javax.swing.JPanel implements java.beans.Customizer {

	/** Creates new customizer TimeCustomizer */
	public TimeCustomizer() {
		initComponents();
		actualizeSelectors();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the FormEditor.
	 */
	private void initComponents()// GEN-BEGIN:initComponents
	{
		java.awt.GridBagConstraints gridBagConstraints;

		mybean = new com.linkare.rec.data.synch.Time();
		hourLbl = new javax.swing.JLabel();
		minuteLbl = new javax.swing.JLabel();
		secondLbl = new javax.swing.JLabel();
		timeShowLbl = new javax.swing.JLabel();
		milliLbl = new javax.swing.JLabel();
		microLbl = new javax.swing.JLabel();
		nanoLbl = new javax.swing.JLabel();
		picoLbl = new javax.swing.JLabel();
		hourSelector = new javax.swing.JSpinner();
		minuteSelector = new javax.swing.JSpinner();
		secondSelector = new javax.swing.JSpinner();
		miliSelector = new javax.swing.JSpinner();
		microSelector = new javax.swing.JSpinner();
		nanoSelector = new javax.swing.JSpinner();
		picoSelector = new javax.swing.JSpinner();

		setLayout(new java.awt.GridBagLayout());

		setMinimumSize(new java.awt.Dimension(400, 56));
		setPreferredSize(new java.awt.Dimension(400, 56));
		hourLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		hourLbl.setText("horas");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(hourLbl, gridBagConstraints);

		minuteLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		minuteLbl.setText("minutos");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(minuteLbl, gridBagConstraints);

		secondLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		secondLbl.setText("segundos");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(secondLbl, gridBagConstraints);

		timeShowLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		timeShowLbl.setText(mybean.toString());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = 7;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(timeShowLbl, gridBagConstraints);

		milliLbl.setText("milis");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(milliLbl, gridBagConstraints);

		microLbl.setText("micros");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 4;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(microLbl, gridBagConstraints);

		nanoLbl.setText("nanos");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 5;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(nanoLbl, gridBagConstraints);

		picoLbl.setText("picos");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 6;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(picoLbl, gridBagConstraints);

		hourSelector.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
		hourSelector.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				hourSelectorStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(hourSelector, gridBagConstraints);

		minuteSelector.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
		minuteSelector.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				minuteSelectorStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(minuteSelector, gridBagConstraints);

		secondSelector.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
		secondSelector.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				secondSelectorStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(secondSelector, gridBagConstraints);

		miliSelector.setModel(new javax.swing.SpinnerNumberModel(0, 0, 99, 1));
		miliSelector.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				miliSelectorStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(miliSelector, gridBagConstraints);

		microSelector.setModel(new javax.swing.SpinnerNumberModel(0, 0, 99, 1));
		microSelector.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				microSelectorStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 4;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(microSelector, gridBagConstraints);

		nanoSelector.setModel(new javax.swing.SpinnerNumberModel(0, 0, 99, 1));
		nanoSelector.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				nanoSelectorStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 5;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(nanoSelector, gridBagConstraints);

		picoSelector.setModel(new javax.swing.SpinnerNumberModel(0, 0, 99, 1));
		picoSelector.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				picoSelectorStateChanged(evt);
			}
		});

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 6;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		add(picoSelector, gridBagConstraints);

	}// GEN-END:initComponents

	private void minuteSelectorStateChanged(javax.swing.event.ChangeEvent evt)// GEN-FIRST:event_minuteSelectorStateChanged
	{// GEN-HEADEREND:event_minuteSelectorStateChanged
		actualizeBean();
	}// GEN-LAST:event_minuteSelectorStateChanged

	private void picoSelectorStateChanged(javax.swing.event.ChangeEvent evt)// GEN-FIRST:event_picoSelectorStateChanged
	{// GEN-HEADEREND:event_picoSelectorStateChanged
		actualizeBean();
	}// GEN-LAST:event_picoSelectorStateChanged

	private void nanoSelectorStateChanged(javax.swing.event.ChangeEvent evt)// GEN-FIRST:event_nanoSelectorStateChanged
	{// GEN-HEADEREND:event_nanoSelectorStateChanged
		actualizeBean();
	}// GEN-LAST:event_nanoSelectorStateChanged

	private void microSelectorStateChanged(javax.swing.event.ChangeEvent evt)// GEN-FIRST:event_microSelectorStateChanged
	{// GEN-HEADEREND:event_microSelectorStateChanged
		actualizeBean();
	}// GEN-LAST:event_microSelectorStateChanged

	private void miliSelectorStateChanged(javax.swing.event.ChangeEvent evt)// GEN-FIRST:event_miliSelectorStateChanged
	{// GEN-HEADEREND:event_miliSelectorStateChanged
		actualizeBean();
	}// GEN-LAST:event_miliSelectorStateChanged

	private void secondSelectorStateChanged(javax.swing.event.ChangeEvent evt)// GEN-FIRST:event_secondSelectorStateChanged
	{// GEN-HEADEREND:event_secondSelectorStateChanged
		actualizeBean();
	}// GEN-LAST:event_secondSelectorStateChanged

	private void hourSelectorStateChanged(javax.swing.event.ChangeEvent evt)// GEN-FIRST:event_hourSelectorStateChanged
	{// GEN-HEADEREND:event_hourSelectorStateChanged
		actualizeBean();
	}// GEN-LAST:event_hourSelectorStateChanged

	private void yearSelectorActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_yearSelectorActionPerformed
	{// GEN-HEADEREND:event_yearSelectorActionPerformed
		actualizeBean();
	}// GEN-LAST:event_yearSelectorActionPerformed

	private void daySelectorActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_daySelectorActionPerformed
	{// GEN-HEADEREND:event_daySelectorActionPerformed
		actualizeBean();
	}// GEN-LAST:event_daySelectorActionPerformed

	private void monthSelectorActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_monthSelectorActionPerformed
	{// GEN-HEADEREND:event_monthSelectorActionPerformed
		actualizeBean();
	}// GEN-LAST:event_monthSelectorActionPerformed

	public Time getTime() {
		return mybean;
	}

	public void setObject(Object obj) {

		if (Beans.isInstanceOf(obj, Time.class)) {
			mybean = (Time) Beans.getInstanceOf(obj, Time.class);
			actualizeSelectors();
		}
	}

	private boolean actualizingSelectors = false;

	private void actualizeSelectors() {
		actualizingSelectors = true;
		picoSelector.setValue(new Integer((int) mybean.getPicos()));
		nanoSelector.setValue(new Integer((int) mybean.getNanos()));
		microSelector.setValue(new Integer((int) mybean.getMicros()));
		miliSelector.setValue(new Integer((int) mybean.getMilis()));
		secondSelector.setValue(new Integer((int) mybean.getSeconds()));
		minuteSelector.setValue(new Integer((int) mybean.getMinutes()));
		hourSelector.setValue(new Integer((int) mybean.getHours()));
		actualizingSelectors = false;
	}

	private void actualizeBean() {
		if (actualizingSelectors)
			return;

		try {
			Time oldbean = new Time(mybean);

			int picos = ((Integer) picoSelector.getValue()).intValue();
			int nanos = ((Integer) nanoSelector.getValue()).intValue();
			int micros = ((Integer) microSelector.getValue()).intValue();
			int milis = ((Integer) miliSelector.getValue()).intValue();
			int seconds = ((Integer) secondSelector.getValue()).intValue();
			int minutes = ((Integer) minuteSelector.getValue()).intValue();
			int hours = ((Integer) hourSelector.getValue()).intValue();

			// TODO
			mybean.setPicos((short) picos);
			mybean.setNanos((short) nanos);
			mybean.setMicros((short) micros);
			mybean.setMilis((short) milis);
			mybean.setSeconds((byte) seconds);
			mybean.setMinutes((byte) minutes);
			mybean.setHours((byte) hours);

			firePropertyChange("object", oldbean, mybean);
			firePropertyChange("picos", oldbean.getPicos(), mybean.getPicos());
			firePropertyChange("nanos", oldbean.getNanos(), mybean.getNanos());
			firePropertyChange("micros", oldbean.getMicros(), mybean.getMicros());
			firePropertyChange("milis", oldbean.getMilis(), mybean.getMilis());
			firePropertyChange("seconds", oldbean.getSeconds(), mybean.getSeconds());
			firePropertyChange("minutes", oldbean.getMinutes(), mybean.getMinutes());
			firePropertyChange("hours", oldbean.getHours(), mybean.getHours());

			actualizeSelectors();

			timeShowLbl.setText(mybean.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JSpinner nanoSelector;
	private javax.swing.JSpinner secondSelector;
	private javax.swing.JLabel hourLbl;
	private javax.swing.JLabel timeShowLbl;
	private javax.swing.JLabel milliLbl;
	private javax.swing.JSpinner picoSelector;
	private javax.swing.JSpinner hourSelector;
	private javax.swing.JLabel nanoLbl;
	private javax.swing.JLabel secondLbl;
	private com.linkare.rec.data.synch.Time mybean;
	private javax.swing.JSpinner miliSelector;
	private javax.swing.JSpinner minuteSelector;
	private javax.swing.JLabel microLbl;
	private javax.swing.JLabel picoLbl;
	private javax.swing.JSpinner microSelector;
	private javax.swing.JLabel minuteLbl;
	// End of variables declaration//GEN-END:variables

}
