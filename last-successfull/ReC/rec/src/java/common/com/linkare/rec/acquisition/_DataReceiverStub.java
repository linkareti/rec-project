package com.linkare.rec.acquisition;

/**
 * com/linkare/rec/acquisition/_DataReceiverStub.java . Generated by the
 * IDL-to-Java compiler (portable), version "3.1" from
 * I:/Projects/REC/IdlCompile/ReC7.idl Sabado, 17 de Janeiro de 2004 19H00m GMT
 */

public class _DataReceiverStub extends org.omg.CORBA.portable.ObjectImpl implements
		com.linkare.rec.acquisition.DataReceiver {

	// Version 7.0 Changed this... we must only inform of the largest packet
	// known... all the packets before should be there
	@Override
	public void newSamples(final int largestNumPacket) {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			final org.omg.CORBA.portable.OutputStream $out = _request("newSamples", true);
			$out.write_long(largestNumPacket);
			$in = _invoke($out);
			return;
		} catch (final org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			final String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (final org.omg.CORBA.portable.RemarshalException $rm) {
			newSamples(largestNumPacket);
		} finally {
			_releaseReply($in);
		}
	} // newSamples

	// Version 7.0 Changed this... now we may inform of changes in state
	@Override
	public void stateChanged(final com.linkare.rec.acquisition.DataProducerState newState) {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			final org.omg.CORBA.portable.OutputStream $out = _request("stateChanged", true);
			com.linkare.rec.acquisition.DataProducerStateHelper.write($out, newState);
			$in = _invoke($out);
			return;
		} catch (final org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			final String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (final org.omg.CORBA.portable.RemarshalException $rm) {
			stateChanged(newState);
		} finally {
			_releaseReply($in);
		}
	} // stateChanged

	// Version 7.0 Changed this... now we may inform of changes in clientsList
	@Override
	public void clientsListChanged() {
		org.omg.CORBA.portable.InputStream $in = null;
		try {
			final org.omg.CORBA.portable.OutputStream $out = _request("clientsListChanged", true);
			$in = _invoke($out);
			return;
		} catch (final org.omg.CORBA.portable.ApplicationException $ex) {
			$in = $ex.getInputStream();
			final String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (final org.omg.CORBA.portable.RemarshalException $rm) {
			clientsListChanged();
		} finally {
			_releaseReply($in);
		}
	} // clientsListChanged

	// Type-specific CORBA::Object operations
	private static String[] __ids = { "IDL:com/linkare/rec/acquisition/DataReceiver:1.0" };

	@Override
	public String[] _ids() {
		return _DataReceiverStub.__ids.clone();
	}

	private void readObject(final java.io.ObjectInputStream s) throws java.io.IOException {
		final String str = s.readUTF();
		final String[] args = null;
		final java.util.Properties props = null;
		final org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init(args, props).string_to_object(str);
		final org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate();
		_set_delegate(delegate);
	}

	private void writeObject(final java.io.ObjectOutputStream s) throws java.io.IOException {
		final String[] args = null;
		final java.util.Properties props = null;
		final String str = org.omg.CORBA.ORB.init(args, props).object_to_string(this);
		s.writeUTF(str);
	}
} // class _DataReceiverStub
