<?xml version="1.0" encoding="UTF-8"?>
<!--
		=======================================================
		============ 2009/03/29 Build Rec - Elab ==============
		=======================================================
	-->

<project name="ReC Module - build system" default="help" basedir=".">
	<description>
		Compile, package, sign and run the project ReC and each of the experiments.
	</description>

	<property file="build.properties" description="general properties for building project" />

	<import file="generaldefinitions.xml"/>
	
	<!--
		=====================================================
		====================== Generic ======================
		=====================================================
	-->

	<target name="help" description="General usage of the build system, it shows a description of each target, and how to use them">
		<echo>ReC - eBab build system</echo>
	</target>
	
	<!--
		=====================================================
		==================== REC Common =====================
		=====================================================
	-->

	<target name="clean.rec.common" description="Delete the build folder containing the common shared compiled code.">
		<delete dir="${rec.common.classes.dir}" />
		<delete file="${build.dir.compile}/ReCCommon.jar" />
		<delete file="${build.dir.compile}/ReCCommon_sig.jar" />
	</target>

	<target name="compile.rec.common" description="Compile the common part of the ReC project independently.">
		<mkdir dir="${rec.common.classes.dir}" />
		<mkdir dir="${rec.common.classes.dir}/META-INF" />

		<javac srcdir="${rec.common.src.java.dir}" destdir="${rec.common.classes.dir}" encoding="${javac.encoding}" debug="${javac.debug}" optimize="${javac.optimize}" source="${javac.sourcelevel}" target="${javac.sourcelevel}" deprecation="yes">
			<include name="**/*.java" />
			<classpath refid="rec.common.libs.classpath" />
			<compilerarg value="-Xlint:unchecked, cast, -serial" />
		</javac>
		
		<copy todir="${rec.common.classes.dir}" overwrite="true">
			<fileset dir="${rec.common.src.java.dir}">
				<exclude name="**/*.java" />
				<exclude name="**/*.form" />
			</fileset>
		</copy>

		<manifest file="${rec.common.classes.dir}/META-INF/MANIFEST.MF">
			<section name="common">
				<attribute name="Specification-Title" value="${com.linkare.rec.spec.title}" />
				<attribute name="Specification-Version" value="${com.linkare.rec.spec.version}" />
				<attribute name="Specification-Vendor" value="${com.linkare.rec.spec.title}" />
				<attribute name="Implementation-Title" value="${com.linkare.rec.impl.title}" />
				<attribute name="Implementation-Version" value="${com.linkare.rec.impl.version} ${timestamp}" />
				<attribute name="Implementation-Vendor" value="${com.linkare.rec.impl.vendor}" />
			</section>
		</manifest>
		
	</target>

	<target name="jar.rec.common">
		<create.jar destination.folder="${common.build.dir}" jar.name="ReCCommon.jar" source.basedir="${rec.common.classes.dir}"/>
	</target>
	
	<target name="sign.rec.common">
		<sign.jar.rec folder="${common.build.dir}" jar.name="ReCCommon.jar" />
	</target>
	
	<!--target name="pack.jar.rec.common" description="Packages and compresses the jar for p200 distribution.">
		<pack.200.single.jar destination.directory="${common.build.dir}" source.directory="${build.dir.compile}" source.jar.without.extension="ReCCommon"/>
	</target-->

	<target name="build.rec.common" depends="clean.rec.common,compile.rec.common, jar.rec.common, sign.rec.common">

	</target>
	
	<!--
		=====================================================
		==================== ReC Client =====================
		=====================================================
	-->

	<target name="clean.rec.client" description="Delete the build folder containing the common shared compiled code.">
		<delete dir="${rec.client.classes.dir}" />
		<delete file="${build.dir.compile}/ReCClient.jar" />
		<delete file="${build.dir.compile}/ReCClient_sig.jar" />
	</target>

	<target name="compile.rec.client">
		<mkdir dir="${rec.client.classes.dir}" />
		<mkdir dir="${rec.client.classes.dir}/META-INF" />

		<javac srcdir="${rec.client.src.java.dir}" destdir="${rec.client.classes.dir}" encoding="${javac.encoding}" debug="${javac.debug}" optimize="${javac.optimize}" source="${javac.sourcelevel}" target="${javac.sourcelevel}" deprecation="yes">
			<include name="**/*.java" />
			<classpath refid="rec.compile.client.classpath" />
			<compilerarg value="-Xlint:unchecked, cast, -serial" />
		</javac>
		
		<copy todir="${rec.client.classes.dir}" overwrite="true">
			<fileset dir="${rec.client.src.java.dir}">
				<exclude name="**/*.java" />
				<exclude name="**/*.form" />
			</fileset>
		</copy>

		<javac srcdir="${rec.ui.src.java.dir}" destdir="${rec.client.classes.dir}" encoding="${javac.encoding}" debug="${javac.debug}" optimize="${javac.optimize}" source="${javac.sourcelevel}" target="${javac.sourcelevel}" deprecation="yes">
			<include name="**/*.java" />
			<classpath refid="rec.compile.client.classpath" />
			<compilerarg value="-Xlint:unchecked, cast, -serial" />
		</javac>
		
		<copy todir="${rec.client.classes.dir}" overwrite="true">
			<fileset dir="${rec.ui.src.java.dir}">
				<exclude name="**/*.java" />
				<exclude name="**/*.form" />
			</fileset>
		</copy>

		<manifest file="${rec.client.classes.dir}/META-INF/MANIFEST.MF">
			<section name="common">
				<attribute name="Specification-Title" value="${com.linkare.rec.spec.title}" />
				<attribute name="Specification-Version" value="${com.linkare.rec.spec.version}" />
				<attribute name="Specification-Vendor" value="${com.linkare.rec.spec.title}" />
				<attribute name="Implementation-Title" value="${com.linkare.rec.impl.title}" />
				<attribute name="Implementation-Version" value="${com.linkare.rec.impl.version} ${timestamp}" />
				<attribute name="Implementation-Vendor" value="${com.linkare.rec.impl.vendor}" />
			</section>
		</manifest>
		
		<copy file="${templates.dir.openorb}/OpenORBClientTemplate.xml" overwrite="yes" tofile="${rec.client.classes.dir}/openorb.xml" />
		<replace file="${rec.client.classes.dir}/openorb.xml" propertyFile="build.properties">
			<replacefilter token="@multicast.controller.host@" property="multicast.controller.host" />
			<replacefilter token="@multicast.controller.port@" property="multicast.controller.port" />
		</replace>
		
	</target>

		<target name="jar.rec.client">
			<create.jar destination.folder="${client.build.dir}" jar.name="ReCClient.jar" source.basedir="${rec.client.classes.dir}"/>
		</target>
		
		<target name="sign.rec.client">
			<sign.jar.rec folder="${client.build.dir}" jar.name="ReCClient.jar" />
		</target>
	
	<!--target name="pack.jar.rec.client" description="Packages and compresses the jar for p200 distribution.">
		<pack.200.single.jar destination.directory="${client.build.dir}" source.directory="${build.dir.compile}" source.jar.without.extension="ReCClient"/>
	</target-->
	
	<target name="build.rec.client" depends="clean.rec.client,compile.rec.client,jar.rec.client,sign.rec.client">
		
		<sign.jars.in.directory source.dir.name="${rec.common.lib.dir}" destination.dir.name="${client.build.dir}/lib"/>
		<sign.jars.in.directory source.dir.name="${rec.client.lib.dir}" destination.dir.name="${client.build.dir}/lib"/>
	
		<copy file="${common.build.dir}/ReCCommon_sig.jar" todir="${client.build.dir}"></copy>
		
		<copy file="${templates.dir.openorb}/OpenORBClientTemplate.xml" overwrite="yes" tofile="${client.build.dir}/etc/openorb.xml" />
			<replace file="${client.build.dir}/etc/openorb.xml" propertyFile="build.properties">
			<replacefilter token="@multicast.controller.host@" property="multicast.controller.host" />
			<replacefilter token="@multicast.controller.port@" property="multicast.controller.port" />
		</replace>
		
	</target>

	<!--
		=====================================================
		================ ReC Hardware Server ================
		=====================================================
	-->

	<target name="clean.rec.hardwareserver">
		<delete dir="${rec.hardwareserver.classes.dir}" />
	</target>

	<target name="compile.rec.hardwareserver">
		<mkdir dir="${rec.hardwareserver.classes.dir}" />
		<mkdir dir="${rec.hardwareserver.classes.dir}/META-INF" />

		<javac srcdir="${rec.hardwareserver.src.java.dir}" destdir="${rec.hardwareserver.classes.dir}" encoding="${javac.encoding}" debug="${javac.debug}" optimize="${javac.optimize}" source="${javac.sourcelevel}" target="${javac.sourcelevel}" deprecation="yes">
			<include name="**/*.java" />
			<classpath refid="rec.compile.hardwareserver.classpath" />
			<compilerarg value="-Xlint:unchecked, cast, -serial" />
		</javac>
		
		<copy todir="${rec.hardwareserver.classes.dir}" overwrite="true">
			<fileset dir="${rec.hardwareserver.classes.dir}">
				<exclude name="**/*.java" />
				<exclude name="**/*.form" />
			</fileset>
		</copy>

		<manifest file="${rec.hardwareserver.classes.dir}/META-INF/MANIFEST.MF">
			<section name="common">
				<attribute name="Specification-Title" value="${com.linkare.rec.spec.title}" />
				<attribute name="Specification-Version" value="${com.linkare.rec.spec.version}" />
				<attribute name="Specification-Vendor" value="${com.linkare.rec.spec.title}" />
				<attribute name="Implementation-Title" value="${com.linkare.rec.impl.title}" />
				<attribute name="Implementation-Version" value="${com.linkare.rec.impl.version} ${timestamp}" />
				<attribute name="Implementation-Vendor" value="${com.linkare.rec.impl.vendor}" />
			</section>
		</manifest>
		
		<copy file="${templates.dir.openorb}/OpenORBHardwareTemplate.xml" overwrite="yes" tofile="${rec.hardwareserver.classes.dir}/openorb.xml" />
		<replace file="${rec.hardwareserver.classes.dir}/openorb.xml" propertyFile="build.properties">
			<replacefilter token="@multicast.controller.host@" property="multicast.controller.host" />
			<replacefilter token="@multicast.controller.port@" property="multicast.controller.port" />
		</replace>
		
	</target>

	<target name="jar.rec.hardwareserver">
		<create.jar destination.folder="${hardwareserver.build.dir}" jar.name="ReCHardwareServer.jar" source.basedir="${rec.hardwareserver.classes.dir}"/>
	</target>

	<target name="build.rec.hardwareserver" depends="clean.rec.hardwareserver,compile.rec.hardwareserver,jar.rec.hardwareserver">
		
		<copy todir="${hardwareserver.build.dir}/lib" overwrite="true">
			<fileset dir="${rec.common.lib.dir}">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${rec.hardwareserver.lib.dir}">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		
		<copy file="${common.build.dir}/ReCCommon.jar" todir="${hardwareserver.build.dir}"></copy>
		
		<copy file="${templates.dir.openorb}/OpenORBHardwareTemplate.xml" overwrite="yes" tofile="${hardwareserver.build.dir}/etc/openorb.xml" />
			<replace file="${hardwareserver.build.dir}/etc/openorb.xml" propertyFile="build.properties">
			<replacefilter token="@multicast.controller.host@" property="multicast.controller.host" />
			<replacefilter token="@multicast.controller.port@" property="multicast.controller.port" />
		</replace>
				
	</target>

	<!--
		=====================================================
		============= ReC Multicast Controller===============
		=====================================================
	-->

	<target name="clean.rec.multicastcontroller">
		<delete dir="${rec.multicast.classes.dir}" />
	</target>

	<target name="compile.rec.multicastcontroller">
		<mkdir dir="${rec.multicast.classes.dir}" />
		<mkdir dir="${rec.multicast.classes.dir}/META-INF" />

		<javac srcdir="${rec.multicast.src.java.dir}" destdir="${rec.multicast.classes.dir}" encoding="${javac.encoding}" debug="${javac.debug}" optimize="${javac.optimize}" source="${javac.sourcelevel}" target="${javac.sourcelevel}" deprecation="yes">
			<include name="**/*.java" />
			<classpath refid="rec.compile.multicastcontroller.classpath" />
			<compilerarg value="-Xlint:unchecked, cast, -serial" />
		</javac>
		
		<copy todir="${rec.multicast.classes.dir}" overwrite="true">
			<fileset dir="${rec.multicast.src.java.dir}">
				<exclude name="**/*.java" />
				<exclude name="**/*.form" />
			</fileset>
		</copy>

		<manifest file="${rec.multicast.classes.dir}/META-INF/MANIFEST.MF">
			<attribute name="Main-Class" value="${multicast.main-class}" />
			<section name="common">
				<attribute name="Specification-Title" value="${com.linkare.rec.spec.title}" />
				<attribute name="Specification-Version" value="${com.linkare.rec.spec.version}" />
				<attribute name="Specification-Vendor" value="${com.linkare.rec.spec.title}" />
				<attribute name="Implementation-Title" value="${com.linkare.rec.impl.title}" />
				<attribute name="Implementation-Version" value="${com.linkare.rec.impl.version} ${timestamp}" />
				<attribute name="Implementation-Vendor" value="${com.linkare.rec.impl.vendor}" />
			</section>
		</manifest>
		
		<copy file="${templates.dir.openorb}/OpenORBMultiCastTemplate.xml" overwrite="yes" tofile="${rec.multicast.classes.dir}/openorb.xml" />
		<replace file="${rec.multicast.classes.dir}/openorb.xml" propertyFile="build.properties">
			<replacefilter token="@multicast.controller.host@" property="multicast.controller.host" />
			<replacefilter token="@multicast.controller.port@" property="multicast.controller.port" />
		</replace>		
	</target>

	<target name="jar.rec.multicastcontroller">
		<create.jar destination.folder="${multicast.build.dir}" jar.name="ReCMulticastController.jar" source.basedir="${rec.multicast.classes.dir}"/>
	</target>

	<target name="build.rec.multicastcontroller" depends="clean.rec.multicastcontroller,compile.rec.multicastcontroller,jar.rec.multicastcontroller">
	
		<copy todir="${multicast.build.dir}/lib" overwrite="true">
			<fileset dir="${rec.common.lib.dir}">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${rec.multicast.lib.dir}">
				<include name="**/*.jar" />
			</fileset>
		</copy>

		<copy file="${common.build.dir}/ReCCommon.jar" todir="${multicast.build.dir}"></copy>
		
	<copy file="${templates.dir.openorb}/OpenORBMultiCastTemplate.xml" overwrite="yes" tofile="${multicast.build.dir}/etc/openorb.xml" />
		<replace file="${multicast.build.dir}/etc/openorb.xml" propertyFile="build.properties">
		<replacefilter token="@multicast.controller.host@" property="multicast.controller.host" />
		<replacefilter token="@multicast.controller.port@" property="multicast.controller.port" />
	</replace>
		
	</target>

	<target name="run.rec.multicast">
		<java classname="${multicast.main-class}" fork="true" failonerror="true" maxmemory="${max.memory}">
			<arg value="-h" />
			<!--bootclasspath location=" TODO /openorb/openorb_orb_omg-1.4.0_sig.jar"/-->
			<classpath refid="run.multicastcontroller.classpath" />
			<jvmarg value="-Xms${min.memory}" />
			<jvmarg value="-Xmx${max.memory}" />
			<sysproperty key="rec.multicastcontroller.bindname" value="${rec.multicastcontroller.bindname}" />
			<sysproperty key="rec.multicastcontroller.initref" value="${rec.multicastcontroller.initref}" />
			<sysproperty key="java.util.logging.config.file" value="${java.util.logging.config.file}" />
			<sysproperty key="openorb.profile" value="${multicast.openorb.profile}" />
			<sysproperty key="rec.multicast.securitymanager" value="${rec.multicast.securitymanager}" />
			<sysproperty key="rec.multicastcontroller.MAX_CLIENTS_PER_HARDWARE" value="${rec.multicastcontroller.MAX_CLIENTS_PER_HARDWARE}" />
			<sysproperty key="org.omg.CORBA.ORBClass" value="${org.omg.CORBA.ORBClass}" />
			<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="${org.omg.CORBA.ORBSingletonClass}" />
			<sysproperty key="com.sun.CORBA.ORBDynamicStubFactoryFactoryClass" value="${com.sun.CORBA.ORBDynamicStubFactoryFactoryClass}" />
			<sysproperty key="openorb.config" value="${rec.multicast.classes.dir}/openorb.xml" />
		</java>
	</target>

	<target name="debug.rec.multicast">
		<java classname="com.linkare.rec.impl.multicast.startup.MultiCastControllerMain" fork="true" failonerror="true" maxmemory="${max.memory}">
			<arg value="-h" />
			<!--bootclasspath location=" TODO /openorb/openorb_orb_omg-1.4.0_sig.jar"/-->
			<classpath refid="run.multicastcontroller.classpath" />
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=${multicast.debug.address.port},server=y,suspend=y" />
			<jvmarg value="-Xms${min.memory}" />
			<jvmarg value="-Xmx${max.memory}" />
			<sysproperty key="rec.multicastcontroller.bindname" value="${rec.multicastcontroller.bindname}" />
			<sysproperty key="rec.multicastcontroller.initref" value="${rec.multicastcontroller.initref}" />
			<sysproperty key="java.util.logging.config.file" value="${java.util.logging.config.file}" />
			<sysproperty key="openorb.profile" value="${multicast.openorb.profile}" />
			<sysproperty key="rec.multicast.securitymanager" value="${rec.multicast.securitymanager}" />
			<sysproperty key="rec.multicastcontroller.MAX_CLIENTS_PER_HARDWARE" value="${rec.multicastcontroller.MAX_CLIENTS_PER_HARDWARE}" />
			<sysproperty key="org.omg.CORBA.ORBClass" value="${org.omg.CORBA.ORBClass}" />
			<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="${org.omg.CORBA.ORBSingletonClass}" />
			<sysproperty key="com.sun.CORBA.ORBDynamicStubFactoryFactoryClass" value="${com.sun.CORBA.ORBDynamicStubFactoryFactoryClass}" />
			<sysproperty key="openorb.config" value="${rec.multicast.classes.dir}/openorb.xml" />
		</java>
	</target>
	
	<target name="clean.all" depends="clean.rec.common,clean.rec.client,clean.rec.hardwareserver,clean.rec.multicastcontroller" />
	
	<target name="build.all" depends="build.rec.common,build.rec.client,build.rec.hardwareserver,build.rec.multicastcontroller" />

	<target name="javadoc.rec">
		<javadoc destdir="${build.dir}/javadocs/rec" author="true" version="true" use="true" windowtitle="ReC - Javadocs" >
		    <packageset dir="${rec.common.src.java.dir}" defaultexcludes="yes" >
		    	<include name="com/linkare/rec/**"/>
		    </packageset>
		 	<classpath refid="rec.common.libs.classpath" />
		 	<packageset dir="${rec.client.src.java.dir}" defaultexcludes="yes" >
		 		<include name="com/linkare/**"/>
		    </packageset>
			 <packageset dir="${rec.ui.src.java.dir}" defaultexcludes="yes" >
				<include name="com/linkare/rec/impl**"/>
		    </packageset>
		 	<classpath refid="rec.client.libs.classpath" />
		 	<packageset dir="${rec.multicast.src.java.dir}" defaultexcludes="yes" >
		 		<include name="com/linkare/rec/impl/**"/>
		    </packageset>
		 	<classpath refid="rec.multicastcontroller.libs.classpath" />
			 <packageset dir="${rec.hardwareserver.src.java.dir}" defaultexcludes="yes" >
				<include name="com/linkare/rec/impl/**"/>
		    </packageset>
		 	<classpath refid="rec.hardwareserver.libs.classpath" />
		    <doctitle>ReC  <![CDATA[<h1>Package Overview</h1>]]></doctitle>
		    <bottom><![CDATA[<i>Copyright &#169; 2010 Linkare TI All Rights Reserved.</i>]]></bottom>
		    <tag name="todo" scope="all" description="To do:"/>
		    <link href="http://java.sun.com/javase/6/docs/api/"/>
	  </javadoc>
	</target>
	

	<target name="clean.javadocs">
		<delete dir="${build.dir}/javadocs/rec" />
	</target>	
	
</project>