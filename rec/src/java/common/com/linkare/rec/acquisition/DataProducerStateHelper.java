package com.linkare.rec.acquisition;

/**
 * IdlCompile/com/linkare/rec/acquisition/DataProducerStateHelper.java .
 * Generated by the IDL-to-Java compiler (portable), version "3.1" from
 * I:/Projects/REC/IdlCompile/ReC7.idl Segunda-feira, 29 de Dezembro de 2003
 * 16H55m GMT
 */

// Version 7.0 Change - added state to DataProducer... simpler to maintain
abstract public class DataProducerStateHelper {
	private static String _id = "IDL:com/linkare/rec/acquisition/DataProducerState:1.0";

	public static void insert(final org.omg.CORBA.Any a, final com.linkare.rec.acquisition.DataProducerState that) {
		final org.omg.CORBA.portable.OutputStream out = a.create_output_stream();
		a.type(DataProducerStateHelper.type());
		DataProducerStateHelper.write(out, that);
		a.read_value(out.create_input_stream(), DataProducerStateHelper.type());
	}

	public static com.linkare.rec.acquisition.DataProducerState extract(final org.omg.CORBA.Any a) {
		return DataProducerStateHelper.read(a.create_input_stream());
	}

	private static org.omg.CORBA.TypeCode __typeCode = null;

	synchronized public static org.omg.CORBA.TypeCode type() {
		if (DataProducerStateHelper.__typeCode == null) {
			DataProducerStateHelper.__typeCode = org.omg.CORBA.ORB.init()
					.create_enum_tc(
							com.linkare.rec.acquisition.DataProducerStateHelper.id(),
							"DataProducerState",
							new String[] { "DP_WAITING", "DP_STARTED_NODATA", "DP_STARTED", "DP_ENDED", "DP_STOPED",
									"DP_ERROR" });
		}
		return DataProducerStateHelper.__typeCode;
	}

	public static String id() {
		return DataProducerStateHelper._id;
	}

	public static com.linkare.rec.acquisition.DataProducerState read(final org.omg.CORBA.portable.InputStream istream) {
		return new com.linkare.rec.acquisition.DataProducerState(istream.read_octet());
	}

	public static void write(final org.omg.CORBA.portable.OutputStream ostream,
			final com.linkare.rec.acquisition.DataProducerState value) {
		ostream.write_octet(value.getValue());
	}

}
