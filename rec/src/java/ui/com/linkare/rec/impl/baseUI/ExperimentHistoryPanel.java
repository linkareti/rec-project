/*
 * ExperimentHistoryCell.java
 *
 * Created on 02 May 2003, 01:25
 */

package com.linkare.rec.impl.baseUI;


import java.util.logging.LogManager;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

import com.linkare.rec.impl.client.experiment.ExpHistory;
import com.linkare.rec.impl.i18n.ReCResourceBundle;
/**
 *
 * @author  Josï¿½ Pedro Pereira
 */
public class ExperimentHistoryPanel extends javax.swing.JPanel
{
    private static String UI_CLIENT_LOGGER="ReC.baseUI";
    
    static
    {
	Logger l=LogManager.getLogManager().getLogger(UI_CLIENT_LOGGER);
	if(l==null)
	{
	    LogManager.getLogManager().addLogger(Logger.getLogger(UI_CLIENT_LOGGER));
	}
    }
    
    private ExpHistory value=null;
    private ExpHistoryPanelNew panelExp=null;
    
    private static final String EXP_STR = ReCResourceBundle.findStringOrDefault("ReCBaseUI$rec.bui.lbl.experiment", "Experiment");
    private static final String CONFIRM_STR = ReCResourceBundle.findStringOrDefault("ReCBaseUI$rec.bui.lbl.confirmDeleteData", "Are you sure you want to delete this experiment from the history?");

    private ImageIcon ICON_COUNT = null;
    private ImageIcon ICON_EXP = null;
    private ImageIcon ICON_PLAY = null;
    private ImageIcon ICON_DELETE = null;
    
    /** Creates new form ExperimentHistoryCell */
    public ExperimentHistoryPanel(ExpHistoryPanelNew panelExp,ExpHistoryUINode value)
    {
	super();		
	
	this.panelExp=panelExp;
	this.value=value;
	initComponents();
	lblCount.setText(""+this.value.getExpCount()+".");
	lblCount.setToolTipText(EXP_STR + " " +this.value.getExpCount()+" ["+this.value.getApparatusName()+"]");
	if(value.getApparatusIcon()!=null)
	    lblCount.setIcon(value.getApparatusIcon());
	
	if(value.isLocallyOwned())
	{
	    //Logger.getLogger(UI_CLIENT_LOGGER).log(Level.INFO, "Current experiment is owned by me... Should appear in color: "+UIManager.getColor("Table.focusCellBackground"));
	    setOpaque(true);
	    setBackground(UIManager.getColor("Table.selectionBackground"));
	    repaint();
   	}        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents()//GEN-BEGIN:initComponents
    {
        lblCount = new javax.swing.JLabel();
        btnExpInfo = new javax.swing.JButton();
        btnExpPlay = new javax.swing.JButton();
        btnExpDelete = new javax.swing.JButton();

        setLayout(new java.awt.GridLayout(1, 4, 2, 0));

        setMaximumSize(new java.awt.Dimension(32767, 20));
        setMinimumSize(new java.awt.Dimension(83, 20));
        setPreferredSize(new java.awt.Dimension(83, 20));
        setOpaque(false);
        lblCount.setIcon(ReCResourceBundle.findImageIconOrDefault("ReCBaseUI$rec.bui.icon.apparatus", new ImageIcon(getClass().getResource("/com/linkare/rec/impl/baseUI/resources/hcontrol16.gif"))));
        lblCount.setText("1.");
        add(lblCount);

        btnExpInfo.setIcon(ReCResourceBundle.findImageIconOrDefault("ReCBaseUI$rec.bui.icon.hwInfo", new ImageIcon(getClass().getResource("/com/linkare/rec/impl/baseUI/resources/hwinfo16.gif"))));
        btnExpInfo.setToolTipText(ReCResourceBundle.findStringOrDefault("ReCBaseUI$rec.bui.tip.infoData", "Information about the experiment"));
        btnExpInfo.setBorder(null);
        btnExpInfo.setBorderPainted(false);
        btnExpInfo.setMargin(new java.awt.Insets(1, 1, 1, 1));
        btnExpInfo.setMaximumSize(new java.awt.Dimension(17, 17));
        btnExpInfo.setMinimumSize(new java.awt.Dimension(17, 17));
        btnExpInfo.setPreferredSize(new java.awt.Dimension(17, 17));
        btnExpInfo.setRolloverEnabled(true);
        btnExpInfo.setOpaque(false);
        btnExpInfo.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnExpInfoActionPerformed(evt);
            }
        });

        add(btnExpInfo);

        btnExpPlay.setIcon(ReCResourceBundle.findImageIconOrDefault("ReCBaseUI$rec.bui.icon.openExp", new ImageIcon(getClass().getResource("/com/linkare/rec/impl/baseUI/resources/openExperiment16.gif"))));
        btnExpPlay.setToolTipText(ReCResourceBundle.findStringOrDefault("ReCBaseUI$rec.bui.tip.downloadData", "Get the experiment data!"));
        btnExpPlay.setBorder(null);
        btnExpPlay.setBorderPainted(false);
        btnExpPlay.setMargin(new java.awt.Insets(1, 2, 1, 1));
        btnExpPlay.setMaximumSize(new java.awt.Dimension(17, 17));
        btnExpPlay.setMinimumSize(new java.awt.Dimension(17, 17));
        btnExpPlay.setPreferredSize(new java.awt.Dimension(17, 17));
        btnExpPlay.setRolloverEnabled(true);
        btnExpPlay.setOpaque(false);
        btnExpPlay.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnExpPlayActionPerformed(evt);
            }
        });

        add(btnExpPlay);

        btnExpDelete.setIcon(ReCResourceBundle.findImageIconOrDefault("ReCBaseUI$rec.bui.icon.delete", new ImageIcon(getClass().getResource("/com/linkare/rec/impl/baseUI/resources/Delete16.gif"))));
        btnExpDelete.setToolTipText(ReCResourceBundle.findStringOrDefault("ReCBaseUI$rec.bui.tip.deleteData", "Delete experiment from history!"));
        btnExpDelete.setBorder(null);
        btnExpDelete.setBorderPainted(false);
        btnExpDelete.setMargin(new java.awt.Insets(1, 1, 1, 1));
        btnExpDelete.setMaximumSize(new java.awt.Dimension(17, 17));
        btnExpDelete.setMinimumSize(new java.awt.Dimension(17, 17));
        btnExpDelete.setPreferredSize(new java.awt.Dimension(17, 17));
        btnExpDelete.setRolloverEnabled(true);
        btnExpDelete.setOpaque(false);
        btnExpDelete.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnExpDeleteActionPerformed(evt);
            }
        });

        add(btnExpDelete);

    }//GEN-END:initComponents
	
    private void btnExpDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnExpDeleteActionPerformed
    {//GEN-HEADEREND:event_btnExpDeleteActionPerformed
	if(JOptionPane.showConfirmDialog(this,CONFIRM_STR)==JOptionPane.OK_OPTION)
	  panelExp.removeExpHistory(this);
    }//GEN-LAST:event_btnExpDeleteActionPerformed
    
    private void btnExpPlayActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnExpPlayActionPerformed
    {//GEN-HEADEREND:event_btnExpPlayActionPerformed
	value.startExperiment();
    }//GEN-LAST:event_btnExpPlayActionPerformed
    
    private void btnExpInfoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnExpInfoActionPerformed
    {//GEN-HEADEREND:event_btnExpInfoActionPerformed
	value.showExperimentHeader();
    }//GEN-LAST:event_btnExpInfoActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExpDelete;
    private javax.swing.JButton btnExpInfo;
    private javax.swing.JButton btnExpPlay;
    private javax.swing.JLabel lblCount;
    // End of variables declaration//GEN-END:variables

}
