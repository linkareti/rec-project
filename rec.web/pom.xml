<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>parent</artifactId>
		<groupId>com.linkare.maven</groupId>
		<version>1.0.1</version>
	</parent>
	<groupId>com.linkare</groupId>
	<artifactId>rec.web</artifactId>
	<packaging>war</packaging>
	<name>rec.web</name>
	<description>Module containing the web interface of the ReC project, containing also an integration with Moodle</description>
	<version>1.0.0-SNAPSHOT</version>
	<scm>
		<connection>scm:svn:https://svn.linkare.com/internal/rec-project/rec/branches/jdk11-migration/rec.web</connection>
		<developerConnection>scm:svn:https://svn.linkare.com/internal/rec-project/rec/branches/jdk11-migration/rec.web</developerConnection>
		<url>https://sventon.linkare.com/repos/svnroot/list/internal/rec-project/rec/branches/jdk11-migration/rec.web</url>
	</scm>
	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- To set the jboss.home environment variable the Maven way, set the 
			jboss.home property in an active profile in the Maven 2 settings.xml file -->
		<jboss.home>${env.JBOSS_HOME}</jboss.home>
		<jboss.domain>default</jboss.domain>
		<!-- The version of Weld extensions in use-->
		<weld.extensions.version>1.0.0-CR2</weld.extensions.version>
                <aspectj.version>1.8.2</aspectj.version>
		<aspectj-maven-plugin.version>1.8</aspectj-maven-plugin.version>
                <maven.compiler.source>11</maven.compiler.source>
                <maven.compiler.target>11</maven.compiler.target>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Import scope will provide versions for dependencies below. -->
			<dependency>
				<groupId>org.jboss.weld</groupId>
				<artifactId>weld-extensions-bom</artifactId>
				<version>${weld.extensions.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- CDI (JSR-299) -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- EJB -->
		<dependency>
			<groupId>org.jboss.ejb3</groupId>
			<artifactId>jboss-ejb3-api</artifactId>
			<scope>provided</scope>
			<version>3.1.0</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<!-- Common annotations (e.g., @PostConstruct, @PreDestroy, @Generated, 
			@Resource) -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Bean Validation (JSR-303) -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Bean Validation Implementation -->
		<!-- Provides portable constraints such as @NotEmpty, @Email and @Url -->
		<!-- Hibernate Validator is only the JSR-303 implementation at the moment, 
			so we can assume it's provided -->
		<!-- Declaring the necessary dependencies in order to deploy in Glassfish -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>3.3.2.GA</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.5.10</version><!--$NO-MVN-MAN-VER$-->
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8</version><!--$NO-MVN-MAN-VER$-->
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<version>2.2</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>2.2</version><!--$NO-MVN-MAN-VER$-->
		</dependency>	

		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>3.2</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.java-persistence</groupId>
			<artifactId>jpa-api</artifactId>
			<version>2.0-cr-1</version>
		</dependency>

		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.0.2-FCS</version><!--$NO-MVN-MAN-VER$-->
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>2.0.2-FCS</version><!--$NO-MVN-MAN-VER$-->
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>6.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.linkare</groupId>
			<artifactId>ws.moodle</artifactId>
			<version>1.0.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.dozer</groupId>
			<artifactId>dozer</artifactId>
			<version>5.3.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.linkare</groupId>
			<artifactId>jpa.security</artifactId>
			<version>1.0.0</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>mail</artifactId>
					<groupId>javax.mail</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.linkare</groupId>
			<artifactId>jpa</artifactId>
			<version>1.0.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>1.6</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.linkare.common</groupId>
			<artifactId>i18n</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.linkare</groupId>
			<artifactId>rec.web-api</artifactId>
			<version>1.1.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.linkare</groupId>
			<artifactId>jsf-comps</artifactId>
			<version>1.0.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.linkare</groupId>
			<artifactId>zas-impl</artifactId>
			<version>2.0.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.linkare</groupId>
			<artifactId>zas-api</artifactId>
			<version>2.0.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.3.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>20040616</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>oro</groupId>
			<artifactId>oro</artifactId>
			<version>2.0.8</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>2.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>1.0.b2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.linkare</groupId>
			<artifactId>pointcuts</artifactId>
			<version>1.0.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
    <groupId>fish.payara.arquillian</groupId>
    <artifactId>payara-client-ee7</artifactId>
    <version>2.2</version>
    <exclusions>
				<exclusion>
					<groupId>org.glassfish.jersey.core</groupId>
					<artifactId> jersey-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.glassfish.jersey.ext.microprofile</groupId>
					<artifactId>jersey-mp-rest-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.glassfish.jersey.media</groupId>
					<artifactId>jersey-media-json-jackson</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.glassfish.jersey.media</groupId>
					<artifactId>jersey-media-json-processing</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.glassfish.jersey.media</groupId>
					<artifactId>jersey-media-jaxb</artifactId>
				</exclusion>
			</exclusions>
</dependency>

<dependency>
					<groupId>org.glassfish.jersey.core</groupId>
					<artifactId> jersey-client</artifactId>
					<version>2.30.1</version>
				</dependency>
				<dependency>
					<groupId>org.glassfish.jersey.ext.microprofile</groupId>
					<artifactId>jersey-mp-rest-client</artifactId>
					<version>2.30.1</version>
				</dependency>
				<dependency>
					<groupId>org.glassfish.jersey.media</groupId>
					<artifactId>jersey-media-json-jackson</artifactId>
					<version>2.30.1</version>
				</dependency>
				<dependency>
					<groupId>org.glassfish.jersey.media</groupId>
					<artifactId>jersey-media-json-processing</artifactId>
					<version>2.30.1</version>
				</dependency>
				<dependency>
					<groupId>org.glassfish.jersey.media</groupId>
					<artifactId>jersey-media-jaxb</artifactId>
					<version>2.30.1</version>
				</dependency>




		<!-- dependency>
			<groupId>org.glassfish.appclient</groupId>
			<artifactId>gf-client</artifactId>
			<version>3.2-b06</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.eclipse.persistence</groupId>
					<artifactId>org.eclipse.persistence.core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.persistence</groupId>
					<artifactId>javax.persistence</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.persistence</groupId>
					<artifactId>org.eclipse.persistence.jpa</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.persistence</groupId>
					<artifactId>org.eclipse.persistence.jpa.modelgen</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.persistence</groupId>
					<artifactId>org.eclipse.persistence.oracle</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.persistence</groupId>
					<artifactId>org.eclipse.persistence.antlr</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse.persistence</groupId>
					<artifactId>org.eclipse.persistence.asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency-->
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-logger</artifactId>
			<version>1.0.0-CR2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>1.5.9.RC1</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.3.2.GA</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-collections</artifactId>
					<groupId>commons-collections</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
				<exclusion>
					<artifactId>ehcache</artifactId>
					<groupId>net.sf.ehcache</groupId>
				</exclusion>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
			<optional>false</optional>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>3.4.0.GA</version>
			<exclusions>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
				<exclusion>
					<artifactId>ejb3-persistence</artifactId>
					<groupId>org.hibernate</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
			<optional>false</optional>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>3.4.0.GA</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
				<exclusion>
					<artifactId>ejb3-persistence</artifactId>
					<groupId>org.hibernate</groupId>
				</exclusion>
				<exclusion>
					<artifactId>javassist</artifactId>
					<groupId>jboss</groupId>
				</exclusion>
			</exclusions>
			<optional>false</optional>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>3.1.0.GA</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-collections</artifactId>
					<groupId>commons-collections</groupId>
				</exclusion>
			</exclusions>
			<optional>false</optional>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search</artifactId>
			<version>3.1.1.GA</version>
			<exclusions>
				<exclusion>
					<artifactId>hsqldb</artifactId>
					<groupId>hsqldb</groupId>
				</exclusion>
			</exclusions>
			<optional>false</optional>
		</dependency>
                
                <!-- AspectJ dependencies -->
                <dependency>
                    <groupId>org.aspectj</groupId>
                    <artifactId>aspectjrt</artifactId>
                    <version>${aspectj.version}</version>
                </dependency>
	</dependencies>
	<organization>
		<name>Linkare TI</name>
		<url>http://www.linkare.com</url>
	</organization>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>META-INF/persistence.xml</include>
					<include>liquibase.properties</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>META-INF/persistence.xml</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources-rec</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<finalName>${project.artifactId}</finalName>
		<plugins>


<plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>versions-maven-plugin</artifactId>
    <version>2.7</version>
    <configuration>
        <generateBackupPoms>false</generateBackupPoms>
    </configuration>
</plugin>


			<!-- Compiler plugin enforces Java 1.6 compatiblity -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<executions>
				     <execution>
						<id>default-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<fork>true</fork>
							<executable>${JAVA_11_HOME}/bin/javac</executable>
							<compilerVersion>11</compilerVersion>
				    	</configuration>
					</execution>
						<execution>
							<id>default-testCompile</id>
							<phase>test-compile</phase>
							<goals>
								<goal>testCompile</goal>
							</goals>
							<configuration>
								<fork>true</fork>
								<executable>${JAVA_11_HOME}/bin/javac</executable>
								<compilerVersion>11</compilerVersion>
						    </configuration>
						</execution>
				</executions>
			     
			</plugin>
			<!-- Eclipse plugin can force download of source and JavaDoc jars -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<wtpversion>2.0</wtpversion>
					<!-- <downloadSources>true</downloadSources> <downloadJavadocs>true</downloadJavadocs> -->
				</configuration>
			</plugin>
			<!-- Configure the JBoss AS Maven deploy plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jboss-maven-plugin</artifactId>
				<version>1.5.0</version>
				<configuration>
					<jbossHome>${jboss.home}</jbossHome>
					<serverName>${jboss.domain}</serverName>
					<fileNames>
						<fileName>${project.build.directory}/${project.build.finalName}.war
						</fileName>
					</fileNames>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<fork>true</fork>
					<executable>${JAVA_11_HOME}/bin/javac</executable>
					<compilerVersion>11</compilerVersion>
			        </configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>

				<dependencies>
					<!-- MySQL JDBC driver -->
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.6</version>
					</dependency>
				</dependencies>
				<!-- common configuration shared by all executions -->
				<configuration>
					<driver>com.mysql.jdbc.Driver</driver>
					<url>jdbc:mysql://localhost:3306/rec</url>

					<!-- You can comment out username/password configurations and have maven 
						to look them up in your settings.xml using ${settingsKey} -->
					<!--username>username</username -->
					<!--password>password</password -->
					<settingsKey>mysql</settingsKey>

					<!--all executions are ignored if -Dmaven.test.skip=true -->
					<skip>${maven.test.skip}</skip>
				</configuration>
				<executions>
					<!-- <execution> <id>drop-db-before-test-if-any</id> <phase>process-test-resources</phase> 
						<goals> <goal>execute</goal> </goals> <configuration> need another database 
						to drop the targeted one <url>jdbc:mysql://localhost:3306/mysql</url> <autocommit>true</autocommit> 
						<sqlCommand>drop database rec</sqlCommand> ignore error when database 
						is not avaiable <onError>continue</onError> </configuration> </execution> -->

					<!-- <execution> <id>create-db</id> <phase>process-test-resources</phase> 
						<goals> <goal>execute</goal> </goals> <configuration> <url>jdbc:mysql://localhost:3306</url> 
						no transaction <autocommit>true</autocommit> <sqlCommand>create database 
						rec</sqlCommand> <onError>continue</onError> </configuration> </execution> -->

					<!-- <execution> <id>create-schema</id> <phase>process-test-resources</phase> 
						<goals> <goal>execute</goal> </goals> <configuration> <autocommit>true</autocommit> 
						<srcFiles> <srcFile>src/main/sql/create-am-schema.sql</srcFile> </srcFiles> 
						<onError>continue</onError> </configuration> </execution> <execution> <id>create-data</id> 
						<phase>process-test-resources</phase> <goals> <goal>execute</goal> </goals> 
						<configuration> <orderFile>ascending</orderFile> <fileset> <basedir>${basedir}</basedir> 
						<includes> <include>src/main/sql/data-initialization.sql</include> </includes> 
						</fileset> <onError>continue</onError> </configuration> </execution> -->

				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.3</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src</directory>
							<targetPath>WEB-INF</targetPath>
							<includes>
								<include>jax-ws-catalog.xml</include>
								<include>wsdl/**</include>
							</includes>
						</resource>
						<resource>
							<directory>src/main/skins/${rec.web.skin.name}</directory>
							<targetPath>resources</targetPath>
							<includes>
								<include>**</include>
							</includes>
						</resource>
					</webResources>
					<fork>true</fork>
					<executable>${JAVA_11_HOME}/bin/javac</executable>
					<compilerVersion>11</compilerVersion>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.nickwongdev</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.12.1</version>
				
				<!-- <executions>
					<execution>
						<goals>
							<goal>compile</goal>       use this goal to weave all your main classes
							<goal>test-compile</goal>  use this goal to weave all your test classes
						</goals>
					</execution>
				</executions>
                                <dependencies>
                                <dependency>
                                    <groupId>org.aspectj</groupId>
                                    <artifactId>aspectjtools</artifactId>
                                    <version>${aspectj.version}</version>
                                </dependency>
                    </dependencies> -->
			</plugin>
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>3.0.0-M1</version>
				<configuration>
					<tagNameFormat>rel-web-@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>3.8.8</version>
				<inherited>false</inherited>
				<configuration>
					<propertyFileWillOverride>true</propertyFileWillOverride>
					<propertyFile>target/classes/liquibase.properties</propertyFile>
					<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
					<migrationSqlOutputFile>target/classes/migrate.sql</migrationSqlOutputFile>
					<verbose>true</verbose>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.6</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-toolchains-plugin</artifactId>
				<version>1.0</version>
				<executions>
				  <execution>
				    <phase>validate</phase>
				    <goals>
				      <goal>toolchain</goal>
				    </goals>
				  </execution>
				</executions>
				<configuration>
				  <toolchains>
				    <jdk>
				      <version>11.0</version>
				      <vendor>openjdk</vendor>
				    </jdk>
				  </toolchains>
				</configuration>
				</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.liquibase</groupId>
										<artifactId>
											liquibase-maven-plugin
										</artifactId>
										<versionRange>
											[2.0.3,)
										</versionRange>
										<goals>
											<goal>update</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											aspectj-maven-plugin
										</artifactId>
										<version>
											${aspectj-maven-plugin.version}
										</version>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- Profiles skin.empty and skin.default are duplicates since maven doesn't 
			allow multiples of the "property" tag in a single "activation" tag -->
		<profile>
			<id>skin.empty</id>
			<activation>
				<property>
					<name>!skin</name>
				</property>
			</activation>
			<properties>
				<rec.web.skin.name>default</rec.web.skin.name>
			</properties>
		</profile>
		<profile>
			<id>skin.default</id>
			<activation>
				<property>
					<name>skin</name>
					<value>default</value>
				</property>
			</activation>
			<properties>
				<rec.web.skin.name>default</rec.web.skin.name>
			</properties>
		</profile>
		<profile>
			<id>skin.alternate</id>
			<activation>
				<property>
					<name>skin</name>
					<value>alternate</value>
				</property>
			</activation>
			<properties>
				<rec.web.skin.name>alternate</rec.web.skin.name>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<targetenv.hibernate.show_sql>true</targetenv.hibernate.show_sql>
				<targetenv.hibernate.hbm2ddl.auto>update</targetenv.hibernate.hbm2ddl.auto>
				<db.driver>com.mysql.jdbc.Driver</db.driver>
				<db.url>jdbc:mysql://localhost:3306/rec</db.url>
				<db.user>root</db.user>
				<db.pass />
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<targetenv.hibernate.show_sql>false</targetenv.hibernate.show_sql>
				<targetenv.hibernate.hbm2ddl.auto>validate</targetenv.hibernate.hbm2ddl.auto>
				<db.driver>com.mysql.jdbc.Driver</db.driver>
				<!-- This profile has to be executed in the own server -->
				<db.url>jdbc:mysql://localhost:3306/rec</db.url>
				<db.user>rec</db.user>
				<db.pass>rec</db.pass>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>process-resources</phase>
								<goals>
									<goal>updateSQL</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>${aspectj-maven-plugin.version}</version>
				<configuration>
					<verbose>true</verbose>
					<privateScope>true</privateScope>
					<complianceLevel>11</complianceLevel>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>aspectj-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>
