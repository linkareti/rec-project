/*
 * RadioactividadeCustomizer.java
 *
 * Created on 16 de Maio de 2003, 10:11
 */


package pt.utl.ist.elab.virtual.client.dpendulum;

import com.linkare.rec.data.metadata.HardwareInfo;
import com.linkare.rec.data.config.HardwareAcquisitionConfig;
import com.linkare.rec.impl.client.customizer.*;
import com.linkare.rec.data.synch.*;
import java.util.Hashtable;
import javax.swing.JLabel;
import javax.swing.text.NumberFormatter;
import java.text.DecimalFormat;
/**
 *
 * @author  Andr√©
 */


public class DPendulumCustomizer extends javax.swing.JPanel implements com.linkare.rec.impl.client.customizer.ICustomizer
{
    
    private DecimalFormat df = new DecimalFormat();
    
    /** Creates new form RadioactividadeCustomizer */
    public DPendulumCustomizer()
    {
	initComponents();
        btnDefaultsActionPerformed(null);
        df.setMaximumFractionDigits(1);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel7 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jSliderTBS = new javax.swing.JSlider();
        jTextFieldTBS = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jSliderNumSamples = new javax.swing.JSlider();
        jTextFieldSamples = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jSliderAng1 = new javax.swing.JSlider();
        jTextFieldAng1 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jSliderL1 = new javax.swing.JSlider();
        jTextFieldL1 = new javax.swing.JTextField();
        jPanel84 = new javax.swing.JPanel();
        jSliderW1 = new javax.swing.JSlider();
        jTextFieldW1 = new javax.swing.JTextField();
        jPanel842 = new javax.swing.JPanel();
        jSliderM1 = new javax.swing.JSlider();
        jTextFieldM1 = new javax.swing.JTextField();
        jPanel42 = new javax.swing.JPanel();
        jPanel81 = new javax.swing.JPanel();
        jSliderAng2 = new javax.swing.JSlider();
        jTextFieldAng2 = new javax.swing.JTextField();
        jPanel51 = new javax.swing.JPanel();
        jSliderL2 = new javax.swing.JSlider();
        jTextFieldL2 = new javax.swing.JTextField();
        jPanel841 = new javax.swing.JPanel();
        jSliderW2 = new javax.swing.JSlider();
        jTextFieldW2 = new javax.swing.JTextField();
        jPanel843 = new javax.swing.JPanel();
        jSliderM2 = new javax.swing.JSlider();
        jTextFieldM2 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnDefaults = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        setMinimumSize(new java.awt.Dimension(600, 460));
        setPreferredSize(new java.awt.Dimension(600, 670));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel7.setMinimumSize(new java.awt.Dimension(600, 650));
        jPanel7.setPreferredSize(new java.awt.Dimension(600, 650));
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.Y_AXIS));

        jPanel3.setMinimumSize(new java.awt.Dimension(350, 160));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Tempo entre amostras (ms)"));
        jPanel1.setMinimumSize(new java.awt.Dimension(250, 80));
        jPanel1.setPreferredSize(new java.awt.Dimension(250, 80));
        jSliderTBS.setMajorTickSpacing(20);
        jSliderTBS.setMinimum(10);
        jSliderTBS.setPaintLabels(true);
        jSliderTBS.setPaintTicks(true);
        jSliderTBS.setValue(10);
        jSliderTBS.setMaximumSize(new java.awt.Dimension(1000, 32767));
        jSliderTBS.setMinimumSize(new java.awt.Dimension(400, 200));
        jSliderTBS.setPreferredSize(new java.awt.Dimension(400, 200));
        jSliderTBS.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderTBSStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 10.0;
        jPanel1.add(jSliderTBS, gridBagConstraints);

        jTextFieldTBS.setColumns(4);
        jTextFieldTBS.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTBS.setText("10");
        jTextFieldTBS.setMaximumSize(new java.awt.Dimension(35, 16));
        jTextFieldTBS.setMinimumSize(new java.awt.Dimension(35, 16));
        jTextFieldTBS.setPreferredSize(new java.awt.Dimension(44, 16));
        jTextFieldTBS.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldTBSFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jTextFieldTBS, gridBagConstraints);

        jPanel3.add(jPanel1);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(new javax.swing.border.TitledBorder("N\u00famero de pontos"));
        jPanel6.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        jPanel6.setMinimumSize(new java.awt.Dimension(250, 80));
        jPanel6.setPreferredSize(new java.awt.Dimension(250, 80));
        jSliderNumSamples.setMajorTickSpacing(200);
        jSliderNumSamples.setMaximum(1000);
        jSliderNumSamples.setPaintLabels(true);
        jSliderNumSamples.setPaintTicks(true);
        jSliderNumSamples.setValue(500);
        jSliderNumSamples.setMaximumSize(new java.awt.Dimension(1000, 32767));
        jSliderNumSamples.setMinimumSize(new java.awt.Dimension(400, 200));
        jSliderNumSamples.setPreferredSize(new java.awt.Dimension(400, 200));
        jSliderNumSamples.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderNumSamplesStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 10.0;
        jPanel6.add(jSliderNumSamples, gridBagConstraints);

        jTextFieldSamples.setColumns(4);
        jTextFieldSamples.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldSamples.setText("500");
        jTextFieldSamples.setMaximumSize(new java.awt.Dimension(48, 16));
        jTextFieldSamples.setMinimumSize(new java.awt.Dimension(35, 16));
        jTextFieldSamples.setPreferredSize(new java.awt.Dimension(44, 16));
        jTextFieldSamples.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldSamplesFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(jTextFieldSamples, gridBagConstraints);

        jPanel3.add(jPanel6);

        jPanel7.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(new javax.swing.border.TitledBorder("P\u00eandulo 1"));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jPanel8.setBorder(new javax.swing.border.TitledBorder("\u00c2ngulo inicial (\u00ba)"));
        jPanel8.setMinimumSize(new java.awt.Dimension(380, 100));
        jPanel8.setPreferredSize(new java.awt.Dimension(380, 100));
        jSliderAng1.setMajorTickSpacing(45);
        jSliderAng1.setMaximum(360);
        jSliderAng1.setPaintLabels(true);
        jSliderAng1.setPaintTicks(true);
        jSliderAng1.setValue(0);
        jSliderAng1.setMinimumSize(new java.awt.Dimension(300, 80));
        jSliderAng1.setPreferredSize(new java.awt.Dimension(300, 80));
        jSliderAng1.setOpaque(false);
        jSliderAng1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderAng1StateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 10.0;
        jPanel8.add(jSliderAng1, gridBagConstraints);

        jTextFieldAng1.setColumns(3);
        jTextFieldAng1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldAng1.setText("0");
        jTextFieldAng1.setMinimumSize(new java.awt.Dimension(33, 16));
        jTextFieldAng1.setPreferredSize(new java.awt.Dimension(33, 16));
        jTextFieldAng1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldAng1FocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel8.add(jTextFieldAng1, gridBagConstraints);

        jPanel4.add(jPanel8, new java.awt.GridBagConstraints());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(new javax.swing.border.TitledBorder("Comprimento do fio (cm)"));
        jPanel5.setMinimumSize(new java.awt.Dimension(380, 100));
        jPanel5.setPreferredSize(new java.awt.Dimension(380, 100));
        jSliderL1.setMajorTickSpacing(25);
        jSliderL1.setMaximum(150);
        jSliderL1.setPaintLabels(true);
        jSliderL1.setPaintTicks(true);
        jSliderL1.setValue(0);
        jSliderL1.setMinimumSize(new java.awt.Dimension(300, 80));
        jSliderL1.setPreferredSize(new java.awt.Dimension(300, 80));
        jSliderL1.setOpaque(false);
        jSliderL1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderL1StateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 10.0;
        jPanel5.add(jSliderL1, gridBagConstraints);

        jTextFieldL1.setColumns(3);
        jTextFieldL1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldL1.setText("0");
        jTextFieldL1.setMinimumSize(new java.awt.Dimension(33, 16));
        jTextFieldL1.setPreferredSize(new java.awt.Dimension(33, 16));
        jTextFieldL1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldL1FocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel5.add(jTextFieldL1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel4.add(jPanel5, gridBagConstraints);

        jPanel84.setLayout(new java.awt.GridBagLayout());

        jPanel84.setBorder(new javax.swing.border.TitledBorder("W inicial (rad/s)"));
        jPanel84.setMinimumSize(new java.awt.Dimension(100, 160));
        jPanel84.setPreferredSize(new java.awt.Dimension(100, 160));
        jSliderW1.setMajorTickSpacing(1);
        jSliderW1.setMaximum(10);
        jSliderW1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderW1.setPaintLabels(true);
        jSliderW1.setPaintTicks(true);
        jSliderW1.setValue(0);
        jSliderW1.setMinimumSize(new java.awt.Dimension(100, 160));
        jSliderW1.setPreferredSize(new java.awt.Dimension(100, 160));
        jSliderW1.setOpaque(false);
        jSliderW1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderW1StateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 10.0;
        jPanel84.add(jSliderW1, gridBagConstraints);

        jTextFieldW1.setColumns(3);
        jTextFieldW1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldW1.setText("0");
        jTextFieldW1.setMinimumSize(new java.awt.Dimension(33, 16));
        jTextFieldW1.setPreferredSize(new java.awt.Dimension(33, 16));
        jTextFieldW1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldW1FocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel84.add(jTextFieldW1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel4.add(jPanel84, gridBagConstraints);

        jPanel842.setLayout(new java.awt.GridBagLayout());

        jPanel842.setBorder(new javax.swing.border.TitledBorder("Massa (g)"));
        jPanel842.setMinimumSize(new java.awt.Dimension(100, 160));
        jPanel842.setPreferredSize(new java.awt.Dimension(100, 160));
        jSliderM1.setMajorTickSpacing(100);
        jSliderM1.setMaximum(1000);
        jSliderM1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderM1.setPaintLabels(true);
        jSliderM1.setPaintTicks(true);
        jSliderM1.setValue(0);
        jSliderM1.setMinimumSize(new java.awt.Dimension(100, 160));
        jSliderM1.setPreferredSize(new java.awt.Dimension(100, 160));
        jSliderM1.setOpaque(false);
        jSliderM1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderM1StateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 10.0;
        jPanel842.add(jSliderM1, gridBagConstraints);

        jTextFieldM1.setColumns(3);
        jTextFieldM1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldM1.setText("0");
        jTextFieldM1.setMinimumSize(new java.awt.Dimension(33, 16));
        jTextFieldM1.setPreferredSize(new java.awt.Dimension(33, 16));
        jTextFieldM1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldM1FocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel842.add(jTextFieldM1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel4.add(jPanel842, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel10.add(jPanel4, gridBagConstraints);

        jPanel42.setLayout(new java.awt.GridBagLayout());

        jPanel42.setBorder(new javax.swing.border.TitledBorder("P\u00eandulo 2"));
        jPanel81.setLayout(new java.awt.GridBagLayout());

        jPanel81.setBorder(new javax.swing.border.TitledBorder("\u00c2ngulo inicial (\u00ba)"));
        jPanel81.setMinimumSize(new java.awt.Dimension(380, 100));
        jPanel81.setPreferredSize(new java.awt.Dimension(380, 100));
        jSliderAng2.setMajorTickSpacing(45);
        jSliderAng2.setMaximum(360);
        jSliderAng2.setPaintLabels(true);
        jSliderAng2.setPaintTicks(true);
        jSliderAng2.setValue(0);
        jSliderAng2.setMinimumSize(new java.awt.Dimension(300, 80));
        jSliderAng2.setPreferredSize(new java.awt.Dimension(300, 80));
        jSliderAng2.setOpaque(false);
        jSliderAng2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderAng2StateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 10.0;
        jPanel81.add(jSliderAng2, gridBagConstraints);

        jTextFieldAng2.setColumns(3);
        jTextFieldAng2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldAng2.setText("0");
        jTextFieldAng2.setMinimumSize(new java.awt.Dimension(33, 16));
        jTextFieldAng2.setPreferredSize(new java.awt.Dimension(33, 16));
        jTextFieldAng2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldAng2FocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel81.add(jTextFieldAng2, gridBagConstraints);

        jPanel42.add(jPanel81, new java.awt.GridBagConstraints());

        jPanel51.setLayout(new java.awt.GridBagLayout());

        jPanel51.setBorder(new javax.swing.border.TitledBorder("Comprimento do fio (cm)"));
        jPanel51.setMinimumSize(new java.awt.Dimension(380, 100));
        jPanel51.setPreferredSize(new java.awt.Dimension(380, 100));
        jSliderL2.setMajorTickSpacing(25);
        jSliderL2.setMaximum(150);
        jSliderL2.setPaintLabels(true);
        jSliderL2.setPaintTicks(true);
        jSliderL2.setValue(0);
        jSliderL2.setMinimumSize(new java.awt.Dimension(300, 80));
        jSliderL2.setPreferredSize(new java.awt.Dimension(300, 80));
        jSliderL2.setOpaque(false);
        jSliderL2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderL2StateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 10.0;
        jPanel51.add(jSliderL2, gridBagConstraints);

        jTextFieldL2.setColumns(3);
        jTextFieldL2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldL2.setText("0");
        jTextFieldL2.setMinimumSize(new java.awt.Dimension(33, 16));
        jTextFieldL2.setPreferredSize(new java.awt.Dimension(33, 16));
        jTextFieldL2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldL2FocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel51.add(jTextFieldL2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel42.add(jPanel51, gridBagConstraints);

        jPanel841.setLayout(new java.awt.GridBagLayout());

        jPanel841.setBorder(new javax.swing.border.TitledBorder("W inicial (rad/s)"));
        jPanel841.setMinimumSize(new java.awt.Dimension(100, 160));
        jPanel841.setPreferredSize(new java.awt.Dimension(100, 160));
        jSliderW2.setMajorTickSpacing(1);
        jSliderW2.setMaximum(10);
        jSliderW2.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderW2.setPaintLabels(true);
        jSliderW2.setPaintTicks(true);
        jSliderW2.setValue(0);
        jSliderW2.setMinimumSize(new java.awt.Dimension(100, 160));
        jSliderW2.setPreferredSize(new java.awt.Dimension(100, 160));
        jSliderW2.setOpaque(false);
        jSliderW2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderW2StateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 10.0;
        jPanel841.add(jSliderW2, gridBagConstraints);

        jTextFieldW2.setColumns(3);
        jTextFieldW2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldW2.setText("0");
        jTextFieldW2.setMinimumSize(new java.awt.Dimension(33, 16));
        jTextFieldW2.setPreferredSize(new java.awt.Dimension(33, 16));
        jTextFieldW2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldW2FocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel841.add(jTextFieldW2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel42.add(jPanel841, gridBagConstraints);

        jPanel843.setLayout(new java.awt.GridBagLayout());

        jPanel843.setBorder(new javax.swing.border.TitledBorder("Massa (g)"));
        jPanel843.setMinimumSize(new java.awt.Dimension(100, 160));
        jPanel843.setPreferredSize(new java.awt.Dimension(100, 160));
        jSliderM2.setMajorTickSpacing(100);
        jSliderM2.setMaximum(1000);
        jSliderM2.setOrientation(javax.swing.JSlider.VERTICAL);
        jSliderM2.setPaintLabels(true);
        jSliderM2.setPaintTicks(true);
        jSliderM2.setValue(0);
        jSliderM2.setMinimumSize(new java.awt.Dimension(100, 160));
        jSliderM2.setPreferredSize(new java.awt.Dimension(100, 160));
        jSliderM2.setOpaque(false);
        jSliderM2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderM2StateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 10.0;
        jPanel843.add(jSliderM2, gridBagConstraints);

        jTextFieldM2.setColumns(3);
        jTextFieldM2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldM2.setText("0");
        jTextFieldM2.setMinimumSize(new java.awt.Dimension(33, 16));
        jTextFieldM2.setPreferredSize(new java.awt.Dimension(33, 16));
        jTextFieldM2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldM2FocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel843.add(jTextFieldM2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel42.add(jPanel843, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel10.add(jPanel42, gridBagConstraints);

        jPanel7.add(jPanel10, java.awt.BorderLayout.NORTH);

        add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setMinimumSize(new java.awt.Dimension(350, 42));
        jPanel2.setPreferredSize(new java.awt.Dimension(350, 42));
        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel2.add(btnOK, gridBagConstraints);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel2.add(btnCancel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 10.0;
        jPanel2.add(jLabel1, gridBagConstraints);

        btnDefaults.setText("Default Config");
        btnDefaults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefaultsActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel2.add(btnDefaults, gridBagConstraints);

        add(jPanel2, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents

    private void jTextFieldAng2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAng2FocusLost
        String strAng2 = jTextFieldAng2.getText();
        
        if(strAng2.trim().equals("")) return;
        try 
        {
            int Ang2 = Integer.parseInt(strAng2);
            if(Ang2<=jSliderAng2.getMaximum() && Ang2>=jSliderAng2.getMinimum())
                jSliderAng2.setValue(Ang2);
            else
                jTextFieldAng2.setText("" + jSliderAng2.getValue());            
        }
        catch(Exception e) {
            jTextFieldAng2.setText("" + jSliderAng2.getValue());
        }
    }//GEN-LAST:event_jTextFieldAng2FocusLost

    private void jSliderAng2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderAng2StateChanged
        jTextFieldAng2.setText("" + jSliderAng2.getValue());
    }//GEN-LAST:event_jSliderAng2StateChanged

    private void jTextFieldL2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldL2FocusLost
        String strL2 = jTextFieldL2.getText();
        
        if(strL2.trim().equals("")) return;
        try 
        {
            int L2 = Integer.parseInt(strL2);
            if(L2<=jSliderL2.getMaximum() && L2>=jSliderL2.getMinimum())
                jSliderL2.setValue(L2);
            else
                jTextFieldL2.setText("" + jSliderL2.getValue());            
        }
        catch(Exception e) {
            jTextFieldL2.setText("" + jSliderL2.getValue());
        }
    }//GEN-LAST:event_jTextFieldL2FocusLost

    private void jSliderL2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderL2StateChanged
        if(jSliderL2.getValue() < 10)
        {
            jSliderL2.setValue(10);
        }        
        jTextFieldL2.setText("" + jSliderL2.getValue());
    }//GEN-LAST:event_jSliderL2StateChanged

    private void jTextFieldM2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldM2FocusLost
        String strM2 = jTextFieldM2.getText();
        
        if(strM2.trim().equals("")) return;
        try 
        {
            int M2 = Integer.parseInt(strM2);
            if(M2<=jSliderM2.getMaximum() && M2>=jSliderM2.getMinimum())
                jSliderM2.setValue(M2);
            else
                jTextFieldM2.setText("" + jSliderM2.getValue());            
        }
        catch(Exception e) {
            jTextFieldM2.setText("" + jSliderM2.getValue());
        }
    }//GEN-LAST:event_jTextFieldM2FocusLost

    private void jSliderM2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderM2StateChanged
        if(jSliderM2.getValue() < 10)
        {
            jSliderM2.setValue(10);
        }        
        jTextFieldM2.setText("" + jSliderM2.getValue());
    }//GEN-LAST:event_jSliderM2StateChanged

    private void jTextFieldW2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldW2FocusLost
        String strW2 = jTextFieldW2.getText();
        
        if(strW2.trim().equals("")) return;
        try 
        {
            int W2 = Integer.parseInt(strW2);
            if(W2<=jSliderW2.getMaximum() && W2>=jSliderW2.getMinimum())
                jSliderW2.setValue(W2);
            else
                jTextFieldW2.setText("" + jSliderW2.getValue());            
        }
        catch(Exception e) {
            jTextFieldW2.setText("" + jSliderW2.getValue());
        }
    }//GEN-LAST:event_jTextFieldW2FocusLost

    private void jSliderW2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderW2StateChanged
        jTextFieldW2.setText("" + jSliderW2.getValue());
    }//GEN-LAST:event_jSliderW2StateChanged

    private void jTextFieldM1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldM1FocusLost
        String strM1 = jTextFieldM1.getText();
        
        if(strM1.trim().equals("")) return;
        try 
        {
            int M1 = Integer.parseInt(strM1);
            if(M1<=jSliderM1.getMaximum() && M1>=jSliderM1.getMinimum())
                jSliderM1.setValue(M1);
            else
                jTextFieldM1.setText("" + jSliderM1.getValue());            
        }
        catch(Exception e) {
            jTextFieldM1.setText("" + jSliderM1.getValue());
        }
    }//GEN-LAST:event_jTextFieldM1FocusLost

    private void jSliderM1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderM1StateChanged
        if(jSliderM1.getValue() < 10)
        {
            jSliderM1.setValue(10);
        }        
        jTextFieldM1.setText("" + jSliderM1.getValue());
    }//GEN-LAST:event_jSliderM1StateChanged

    private void jTextFieldW1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldW1FocusLost
        String strW1 = jTextFieldW1.getText();
        
        if(strW1.trim().equals("")) return;
        try 
        {
            int W1 = Integer.parseInt(strW1);
            if(W1<=jSliderW1.getMaximum() && W1>=jSliderW1.getMinimum())
                jSliderW1.setValue(W1);
            else
                jTextFieldW1.setText("" + jSliderW1.getValue());            
        }
        catch(Exception e) {
            jTextFieldW1.setText("" + jSliderW1.getValue());
        }
    }//GEN-LAST:event_jTextFieldW1FocusLost

    private void jSliderW1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderW1StateChanged
        jTextFieldW1.setText("" + jSliderW1.getValue());
    }//GEN-LAST:event_jSliderW1StateChanged

    private void jTextFieldAng1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAng1FocusLost
        String strAng1 = jTextFieldAng1.getText();
        
        if(strAng1.trim().equals("")) return;
        try {
            float Ang1 = Float.parseFloat(strAng1)*1000;
            if(Ang1<=jSliderAng1.getMaximum() && Ang1>=jSliderAng1.getMinimum())
                jSliderAng1.setValue((int)Ang1);
            else
                jTextFieldAng1.setText("" + jSliderAng1.getValue());
            
        }catch(Exception e) {
            jTextFieldAng1.setText("" + jSliderAng1.getValue());
        }
    }//GEN-LAST:event_jTextFieldAng1FocusLost

    private void jSliderAng1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderAng1StateChanged
        jTextFieldAng1.setText("" + jSliderAng1.getValue());
    }//GEN-LAST:event_jSliderAng1StateChanged

    private void jTextFieldL1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldL1FocusLost
        String strL1 = jTextFieldL1.getText();
        
        if(strL1.trim().equals("")) return;
        try {
            float L1 = Float.parseFloat(strL1);
            if(L1<=jSliderL1.getMaximum() && L1>=jSliderL1.getMinimum())
                jSliderL1.setValue((int)L1);
            else
                jTextFieldL1.setText("" + jSliderL1.getValue());
            
        }catch(Exception e) {
            jTextFieldL1.setText("" + jSliderL1.getValue());
        }
    }//GEN-LAST:event_jTextFieldL1FocusLost

    private void jTextFieldSamplesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSamplesFocusLost
	String strNumSamples=jTextFieldSamples.getText();
	if(strNumSamples.trim().equals("")) return;
	try
	{
	    int numSamples=Integer.parseInt(strNumSamples);
	    if(numSamples<=jSliderNumSamples.getMaximum() && numSamples>=jSliderNumSamples.getMinimum())
		jSliderNumSamples.setValue(numSamples);
	    else
		jTextFieldSamples.setText(""+jSliderNumSamples.getValue());
	}catch(Exception e)
	{
	    jTextFieldSamples.setText(""+jSliderNumSamples.getValue());
	}
    }//GEN-LAST:event_jTextFieldSamplesFocusLost

    private void jTextFieldTBSFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldTBSFocusLost
	String strFreq=jTextFieldTBS.getText();
	if(strFreq.trim().equals("")) return;
	try
	{
	    int Freq=Integer.parseInt(strFreq);
	    if(Freq<=jSliderTBS.getMaximum() && Freq>=jSliderTBS.getMinimum())
		jSliderTBS.setValue(Freq);
	    else
		jTextFieldTBS.setText(""+jSliderTBS.getValue());
	}catch(Exception e)
	{
	    jTextFieldTBS.setText(""+jSliderTBS.getValue());
	}
    }//GEN-LAST:event_jTextFieldTBSFocusLost
        
    private void jSliderL1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderL1StateChanged
        if(jSliderL1.getValue() < 10)
        {
            jSliderL1.setValue(10);
        }        
        jTextFieldL1.setText("" + jSliderL1.getValue());
    }//GEN-LAST:event_jSliderL1StateChanged
                
    private void jSliderTBSStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderTBSStateChanged
        if(jSliderTBS.getValue() == 0)
        {
            jSliderTBS.setValue(1);
        }
        jTextFieldTBS.setText("" + jSliderTBS.getValue());        
    }//GEN-LAST:event_jSliderTBSStateChanged
        
    private void jSliderNumSamplesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderNumSamplesStateChanged
	
	if(jSliderNumSamples.getValue()==0)
	{
	    jSliderNumSamples.setValue(1);
	    
	}
	jTextFieldSamples.setText(""+jSliderNumSamples.getValue());
	
    }//GEN-LAST:event_jSliderNumSamplesStateChanged
    
	private void btnDefaultsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnDefaultsActionPerformed
	{//GEN-HEADEREND:event_btnDefaultsActionPerformed
	    jSliderNumSamples.setValue(500);
	    jTextFieldSamples.setText("500");
            jSliderTBS.setValue(10);
            jTextFieldTBS.setText("10");
            jSliderAng1.setValue(90);
            jTextFieldAng1.setText("90");
            jSliderAng2.setValue(0);
            jTextFieldAng2.setText("0");
            jSliderL1.setValue(50);
            jTextFieldL1.setText("50");
            jSliderL2.setValue(50);
            jTextFieldL2.setText("50");
            jSliderM1.setValue(500);
            jTextFieldM1.setText("500");
            jSliderM2.setValue(800);
            jTextFieldM2.setText("800");
            jSliderW1.setValue(0);
            jTextFieldW1.setText("0");
            jSliderW2.setValue(0);
            jTextFieldW2.setText("0");
	}//GEN-LAST:event_btnDefaultsActionPerformed
	
	private void btnCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelActionPerformed
	{//GEN-HEADEREND:event_btnCancelActionPerformed
	    fireICustomizerListenerCanceled();
	}//GEN-LAST:event_btnCancelActionPerformed
	
	private void btnOKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnOKActionPerformed
	{//GEN-HEADEREND:event_btnOKActionPerformed
	    acqConfig.setTotalSamples(jSliderNumSamples.getValue());            

            acqConfig.setSelectedFrequency(new Frequency((double)jSliderTBS.getValue(),hardwareInfo.getHardwareFrequencies(0).getMinimumFrequency().getMultiplier(),hardwareInfo.getHardwareFrequencies(0).getMinimumFrequency().getFrequencyDefType()));
            
            acqConfig.getSelectedHardwareParameter("P1 ini angle").setParameterValue("" + jSliderAng1.getValue());
            acqConfig.getSelectedHardwareParameter("P2 ini angle").setParameterValue("" + jSliderAng2.getValue());
            acqConfig.getSelectedHardwareParameter("P1 length").setParameterValue("" + jSliderL1.getValue());
            acqConfig.getSelectedHardwareParameter("P2 length").setParameterValue("" + jSliderL2.getValue());
            acqConfig.getSelectedHardwareParameter("P1 Mass").setParameterValue("" + jSliderM1.getValue());
            acqConfig.getSelectedHardwareParameter("P2 Mass").setParameterValue("" + jSliderM2.getValue());
            acqConfig.getSelectedHardwareParameter("P1 vel ang ini").setParameterValue("" + jSliderW1.getValue());
            acqConfig.getSelectedHardwareParameter("P2 vel ang ini").setParameterValue("" + jSliderW2.getValue());            
                        
	    fireICustomizerListenerDone();
	}//GEN-LAST:event_btnOKActionPerformed
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextFieldL2;
    private javax.swing.JTextField jTextFieldL1;
    private javax.swing.JPanel jPanel841;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextFieldW1;
    private javax.swing.JSlider jSliderW2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel843;
    private javax.swing.JTextField jTextFieldSamples;
    private javax.swing.JSlider jSliderAng1;
    private javax.swing.JTextField jTextFieldAng1;
    private javax.swing.JSlider jSliderNumSamples;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextFieldM1;
    private javax.swing.JSlider jSliderTBS;
    private javax.swing.JButton btnDefaults;
    private javax.swing.JSlider jSliderM1;
    private javax.swing.JSlider jSliderL1;
    private javax.swing.JPanel jPanel81;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JSlider jSliderW1;
    private javax.swing.JSlider jSliderM2;
    private javax.swing.JTextField jTextFieldM2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jTextFieldTBS;
    private javax.swing.JButton btnOK;
    private javax.swing.JSlider jSliderL2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField jTextFieldW2;
    private javax.swing.JButton btnCancel;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JSlider jSliderAng2;
    private javax.swing.JPanel jPanel84;
    private javax.swing.JTextField jTextFieldAng2;
    private javax.swing.JPanel jPanel842;
    // End of variables declaration//GEN-END:variables
	
	
	/** Utility field used by event firing mechanism. */
	private javax.swing.event.EventListenerList listenerList =  null;
	
	
	/** Registers ICustomizerListener to receive events.
	 * @param listener The listener to register.
	 */
	public synchronized void addICustomizerListener(ICustomizerListener listener)
	{
	    if (listenerList == null )
	    {
		listenerList = new javax.swing.event.EventListenerList();
	    }
	    listenerList.add(ICustomizerListener.class, listener);
	}
	
	/** Removes ICustomizerListener from the list of listeners.
	 * @param listener The listener to remove.
	 */
	public synchronized void removeICustomizerListener(ICustomizerListener listener)
	{
	    listenerList.remove(ICustomizerListener.class, listener);
	}
	
	/** Notifies all registered listeners about the event.
	 *
	 * @param param1 Parameter #1 of the <CODE>EventObject<CODE> constructor.
	 */
	private void fireICustomizerListenerCanceled()
	{
	    if (listenerList == null) return;
	    Object[] listeners = listenerList.getListenerList();
	    for (int i = listeners.length-2; i>=0; i-=2)
	    {
		if (listeners[i]==ICustomizerListener.class)
		{
		    ((ICustomizerListener)listeners[i+1]).canceled();
		}
	    }
	}
	
	/** Notifies all registered listeners about the event.
	 *
	 * @param param1 Parameter #1 of the <CODE>EventObject<CODE> constructor.
	 */
	private void fireICustomizerListenerDone()
	{
	    if (listenerList == null) return;
	    Object[] listeners = listenerList.getListenerList();
	    for (int i = listeners.length-2; i>=0; i-=2)
	    {
		if (listeners[i]==ICustomizerListener.class)
		{
		    
		    ((ICustomizerListener)listeners[i+1]).done();
		}
	    }
	}
	
	
	private HardwareInfo hardwareInfo=null;
	private HardwareAcquisitionConfig acqConfig=null;
	
	public HardwareAcquisitionConfig getAcquisitionConfig()
	{
	    return acqConfig;
	}
	
	public void setHardwareAcquisitionConfig(HardwareAcquisitionConfig acqConfig)
	{
	    this.acqConfig=acqConfig;
	    if(acqConfig!=null)
	    {
                jSliderNumSamples.setValue(acqConfig.getTotalSamples());
		jTextFieldSamples.setText(""+acqConfig.getTotalSamples());
		
		int freq = (int)acqConfig.getSelectedFrequency().getFrequency();
		jSliderTBS.setValue(freq);
		jTextFieldTBS.setText("" + freq);
		                
		int a1 = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("P1 ini angle"));                
		jSliderAng1.setValue(a1);
		jTextFieldAng1.setText("" + a1);
                
		int a2 = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("P2 ini angle"));                
		jSliderAng2.setValue(a2);
		jTextFieldAng2.setText("" + a2);                
                
		int l1 = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("P1 length"));                
		jSliderL1.setValue(l1);
		jTextFieldL1.setText("" + l1);
                
		int l2 = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("P2 length"));                
		jSliderL2.setValue(l2);
		jTextFieldL2.setText("" + l2);                
                
		int m1 = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("P1 Mass"));                
		jSliderM1.setValue(m1);
		jTextFieldM1.setText("" + m1);
                
		int m2 = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("P2 Mass"));                
		jSliderM2.setValue(m2);
		jTextFieldM2.setText("" + m2);           

		int w1 = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("P1 vel ang ini"));                
		jSliderW1.setValue(w1);
		jTextFieldW1.setText("" + w1);
                
		int w2 = Integer.parseInt(acqConfig.getSelectedHardwareParameterValue("P2 vel ang ini"));                
		jSliderW2.setValue(w2);
		jTextFieldW2.setText("" + w2);                                                           
            }                                
	}
	
	public void setHardwareInfo(HardwareInfo hardwareInfo)
	{
	    this.hardwareInfo=hardwareInfo;
	}
	
	protected HardwareInfo getHardwareInfo()
	{
	    return this.hardwareInfo;
	}
	
	public javax.swing.JComponent getCustomizerComponent()
	{
	    return this;
	}
	
	public javax.swing.ImageIcon getCustomizerIcon()
	{
	    return new javax.swing.ImageIcon(getClass().getResource("/pt/utl/ist/elab/virtual/client/dpendulum/resources/dp_iconified.gif"));
	}
	
	public String getCustomizerTitle()
	{
	    return "PÍndulo duplo";
	}
	
	public javax.swing.JMenuBar getMenuBar()
	{
	    return null;
	}
	
        public static void main(String args[])
        {
            javax.swing.JFrame jf = new javax.swing.JFrame();
            DPendulumCustomizer mom = new DPendulumCustomizer();
            jf.getContentPane().add(mom,java.awt.BorderLayout.CENTER);
            jf.pack();
            jf.show();
        }
}

