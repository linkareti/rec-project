<?xml version="1.0" encoding="UTF-8"?>
<!--
		=======================================================
		=== 2009/03/29 Build Rec - Elab General Definitions ===
		=======================================================
	-->

<project name="ReC - general definitions" default="help" basedir=".">
	<description>
		Compile, package, sign and run the project ReC and each of the experiments.
	</description>

	<property file="build.properties" description="general properties for building project" />

	<!--
		=====================================================
		====================== Generic ======================
		=====================================================
	-->

	<property name="build.dir.compile" value="${basedir}/${build.dir}/compile" />
	<property name="build.dir.dist" value="${basedir}/${build.dir}/dist" />
	
  	<tstamp>
		<format property="timestamp" pattern="dd-MM-yyyy hh:mm" locale="en,UK"/>
	</tstamp>
	
	<tstamp>
		<format property="today" pattern="dd-MM-yyyy" locale="en,UK"/>
	</tstamp>
	
		<macrodef name="process.list">
		<attribute name="list" />
		<attribute name="task" />
		<attribute name="attribute.name" />

		<sequential>
			<script language="javascript">
				<![CDATA[
					var list="@{list}";
					var task="@{task}";
					var attribute_name="@{attribute.name}";
				    var splitVars=list.split(",");
					
				    for(var i=0;i<splitVars.length;i++)
				    {    
						var oTask=project.createTask(task);
						oTask.init();
						oTask.setDynamicAttribute(attribute_name,splitVars[i]);
						oTask.execute();
					}
				]]>
			</script>
		</sequential>
	</macrodef>
	
	<!--
		=====================================================
		==================== REC Common =====================
		=====================================================
	-->

	<property name="rec.common.classes.dir" value="${build.dir.compile}/classes/rec/common" />
	<property name="common.build.dir" value="${build.dir.dist}/common" />

	<property name="rec.common.src.java.dir" value="${basedir}/rec/src/java/common" />
	
	<property name="rec.lib.dir" value="${basedir}/rec/lib" />
		
	<property name="rec.common.lib.dir" value="${rec.lib.dir}/java/common/" />

	<path id="rec.common.lib.path">
		<fileset dir="${rec.common.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="rec.common.compile.lib.path">
		<fileset dir="${rec.lib.dir}/compile/common/">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="rec.common.libs.classpath">
		<path refid="rec.common.lib.path" />
		<path refid="rec.common.compile.lib.path" />
	</path>
	
	<!--
		=====================================================
		==================== ReC Client =====================
		=====================================================
	-->

	<property name="rec.client.classes.dir" value="${build.dir.compile}/classes/rec/client" />
	<property name="client.build.dir" value="${build.dir.dist}/client" />

	<property name="rec.client.src.java.dir" value="${basedir}/rec/src/java/client" />
	<property name="rec.ui.src.java.dir" value="${basedir}/rec/src/java/ui" />
	
	<property name="rec.client.lib.dir" value="${rec.lib.dir}/java/client/" />

	<path id="rec.client.lib.path">
		<fileset dir="${rec.client.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="rec.client.compile.lib.path">
		<fileset dir="${rec.lib.dir}/compile/client/">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="rec.client.libs.classpath">
		<path refid="rec.client.lib.path" />
		<path refid="rec.client.compile.lib.path" />
	</path>

	<path id="rec.compile.client.dependencies.classpath">
		<pathelement location="${rec.common.classes.dir}/" />
		<path refid="rec.common.libs.classpath" />
	</path>

	<path id="rec.compile.client.classpath">
		<path refid="rec.client.libs.classpath" />
		<path refid="rec.compile.client.dependencies.classpath" />
	</path>

	<!--
		=====================================================
		================ ReC Hardware Server ================
		=====================================================
	-->

	<property name="rec.hardwareserver.classes.dir" value="${build.dir.compile}/classes/rec/hardwareserver" />
	<property name="hardwareserver.build.dir" value="${build.dir.dist}/hardwareserver" />

	<property name="rec.hardwareserver.src.java.dir" value="${basedir}/rec/src/java/hardwareserver" />
	
	<property name="rec.hardwareserver.lib.dir" value="${rec.lib.dir}/java/hardwareserver/" />

	<path id="rec.hardwareserver.lib.path">
		<fileset dir="${rec.hardwareserver.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="rec.hardwareserver.compile.lib.path">
		<fileset dir="${rec.lib.dir}/compile/hardwareserver/">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="rec.hardwareserver.libs.classpath">
		<path refid="rec.hardwareserver.lib.path" />
		<path refid="rec.hardwareserver.compile.lib.path" />
	</path>

	<path id="rec.compile.hardwareserver.dependencies.classpath">
		<pathelement location="${rec.common.classes.dir}/" />
		<path refid="rec.common.libs.classpath" />
	</path>

	<path id="rec.compile.hardwareserver.classpath">
		<path refid="rec.hardwareserver.libs.classpath" />
		<path refid="rec.compile.hardwareserver.dependencies.classpath" />
	</path>

	<!--
		=====================================================
		============= ReC Multicast Controller===============
		=====================================================
	-->

	<property name="rec.multicast.classes.dir" value="${build.dir.compile}/classes/rec/multicast" />
	<property name="multicast.build.dir" value="${build.dir.dist}/multicast" />

	<property name="rec.multicast.src.java.dir" value="${basedir}/rec/src/java/multicast" />
	
	<property name="rec.multicast.lib.dir" value="${rec.lib.dir}/java/multicast/" />

	<path id="rec.multicast.lib.path">
		<fileset dir="${rec.multicast.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="rec.multicast.compile.lib.path">
		<fileset dir="${rec.lib.dir}/compile/multicast/">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="rec.multicastcontroller.libs.classpath">
		<path refid="rec.multicast.lib.path" />
		<path refid="rec.multicast.compile.lib.path" />
	</path>

	<path id="rec.compile.multicastcontroller.dependencies.classpath">
		<pathelement location="${rec.common.classes.dir}/" />
		<path refid="rec.common.libs.classpath" />
	</path>

	<path id="rec.compile.multicastcontroller.classpath">
		<path refid="rec.multicastcontroller.libs.classpath" />
		<path refid="rec.compile.multicastcontroller.dependencies.classpath" />
	</path>


	<path id="run.multicastcontroller.classpath">
		<path refid="rec.common.lib.path" />
		<path refid="rec.multicast.lib.path" />
		<pathelement location="${rec.common.classes.dir}/" />
		<pathelement location="${rec.multicast.classes.dir}/" />
	</path>

	<!--
		=====================================================
		=================== Elab Client =====================
		=====================================================
	-->

	<property name="elab.client.classes.dir" value="${build.dir.compile}/classes/elab/client" />

	<property name="elab.client.src.java.dir" value="${basedir}/elab/src/java/client" />
	<property name="elab.ui.src.java.dir" value="${basedir}/elab/src/java/ui" />

	<property name="elab.lib.dir" value="${basedir}/elab/lib" />
	
	<property name="elab.client.lib.dir" value="${elab.lib.dir}/java/client/" />

	<path id="elab.client.lib.path">
		<fileset dir="${elab.client.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="elab.client.compile.lib.path">
		<fileset dir="${elab.lib.dir}/compile/client/">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="elab.client.libs.classpath">
		<path refid="elab.client.lib.path" />
		<path refid="elab.client.compile.lib.path" />
	</path>

	<path id="elab.compile.client.dependencies.classpath">
		<path refid="rec.client.libs.classpath" />
		<pathelement location="${rec.client.classes.dir}/" />
		<path refid="rec.common.libs.classpath" />
		<pathelement location="${rec.common.classes.dir}/" />
	</path>

	<path id="elab.compile.client.classpath">
		<path refid="elab.client.libs.classpath" />
		<path refid="elab.compile.client.dependencies.classpath" />
	</path>

	<!--
		=====================================================
		=================== Elab driver =====================
		=====================================================
	-->

	<property name="elab.hardwareserver.classes.dir" value="${build.dir.compile}/classes/elab/hardwareserver" />

	<property name="elab.hardwareserver.src.java.dir" value="${basedir}/elab/src/java/driver" />
	
	<property name="elab.hardwareserver.lib.dir" value="${elab.lib.dir}/java/driver/" />


	<path id="elab.hardwareserver.lib.path">
		<fileset dir="${elab.hardwareserver.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="elab.hardwareserver.compile.lib.path">
		<fileset dir="${elab.lib.dir}/compile/driver/">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="elab.hardwareserver.libs.classpath">
		<path refid="elab.hardwareserver.lib.path" />
		<path refid="elab.hardwareserver.compile.lib.path" />
	</path>

	<path id="elab.compile.hardwareserver.dependencies.classpath">
		<pathelement location="${rec.hardwareserver.classes.dir}/" />
		<path refid="rec.hardwareserver.libs.classpath" />
		<pathelement location="${rec.common.classes.dir}/" />
		<path refid="rec.common.libs.classpath" />
	</path>

	<path id="elab.compile.hardwareserver.classpath">
		<path refid="elab.hardwareserver.libs.classpath" />
		<path refid="elab.compile.hardwareserver.dependencies.classpath" />
	</path>

	<!--
		=====================================================
		=========== Elab Multicast Controller ===============
		=====================================================
	-->

	<property name="elab.multicast.classes.dir" value="${build.dir.compile}/classes/elab/multicast" />

	<property name="elab.multicast.src.java.dir" value="${basedir}/elab/src/java/multicast" />
	
	<property name="elab.multicast.lib.dir" value="${elab.lib.dir}/java/multicast/" />

	<path id="elab.multicast.lib.path">
		<fileset dir="${elab.multicast.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="elab.multicast.compile.lib.path">
		<fileset dir="${elab.lib.dir}/compile/multicast/">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="elab.multicastcontroller.libs.classpath">
		<path refid="elab.multicast.lib.path" />
		<path refid="elab.multicast.compile.lib.path" />
	</path>

	<path id="elab.compile.multicastcontroller.dependencies.classpath">
		<path refid="rec.common.libs.classpath" />
		<pathelement location="${rec.common.classes.dir}/" />
		<path refid="rec.multicastcontroller.libs.classpath" />
		<pathelement location="${rec.multicast.classes.dir}/" />
	</path>

	<path id="elab.compile.multicastcontroller.classpath">
		<path refid="elab.multicastcontroller.libs.classpath" />
		<path refid="elab.compile.multicastcontroller.dependencies.classpath" />
	</path>

	<!--
		=====================================================
		===============ReC Entire Project====================
		=====================================================
	-->

	<macrodef name="create.jnlp.full.client.compile">
		<attribute name="codebase"/>
		<sequential>
			<copy file="${template.file}" overwrite="yes" tofile="${build.dir.compile}/ELabFullClient.jnlp" />
			<replace file="${build.dir.compile}/ELabFullClient.jnlp" token="@codebase@" value="@{codebase}"/>
			<replace file="${build.dir.compile}/ELabFullClient.jnlp" propertyFile="build.properties">
				<replacefilter token="@href@" property="href" />
				<replacefilter token="@title@" property="title" />
				<replacefilter token="@vendor@" property="vendor" />
				<replacefilter token="@homepage@" property="homepage" />
				<replacefilter token="@one-line@" property="one-line" />
				<replacefilter token="@tootip@" property="tootip" />
				<replacefilter token="@short@" property="short" />
				<replacefilter token="@j2se-version@" property="j2se-version" />
				<replacefilter token="@main-class@" property="main-class" />
			</replace>
			<replace file="${build.dir.compile}/ELabFullClient.jnlp" token="&lt;!-- Jar eLab Client --&gt;" value="&lt;jar href=&quot;ELabClient_sig.jar&quot; main=&quot;true&quot; /&gt;"/>
			<replace file="${build.dir.compile}/ELabFullClient.jnlp" token="&lt;!-- Jar ReC Client --&gt;" value="&lt;jar href=&quot;ReCClient_sig.jar&quot;/&gt;"/>
			<replace file="${build.dir.compile}/ELabFullClient.jnlp" token="&lt;!-- Jar ReC Common --&gt;" value="&lt;jar href=&quot;ReCCommon_sig.jar&quot;/&gt;"/>
				
			<process.list task="add.experiment.to.full.jnlp.compile" list="${experiment.list}" attribute.name="experiment.name" />
		</sequential>
	</macrodef>

	<macrodef name="add.experiment.to.full.jnlp.compile">
		<attribute name="experiment.name" />
		<sequential>
			<replace file="${build.dir.compile}/ELabFullClient.jnlp" token="&lt;!--End Experiment Jars--&gt;" >
				<replacevalue><![CDATA[<jar href="@temporary.experiment.jar@"/>
	<!--End Experiment Jars-->]]></replacevalue>
			</replace>
			<replace file="${build.dir.compile}/ELabFullClient.jnlp" token="@temporary.experiment.jar@" value="@{experiment.name}Client_sig.jar"/>
		</sequential>
	</macrodef>
	
	<macrodef name="create.jnlp.full.client.build">
		<attribute name="codebase"/>
		<sequential>
			<copy file="${template.file}" overwrite="yes" tofile="${client.build.dir}/ELabFullClient.jnlp" />
			<replace file="${client.build.dir}/ELabFullClient.jnlp" propertyFile="build.properties">
				<replacefilter token="@codebase@" property="codebase" />
				<replacefilter token="@href@" property="href" />
				<replacefilter token="@title@" property="title" />
				<replacefilter token="@vendor@" property="vendor" />
				<replacefilter token="@homepage@" property="homepage" />
				<replacefilter token="@one-line@" property="one-line" />
				<replacefilter token="@tootip@" property="tootip" />
				<replacefilter token="@short@" property="short" />
				<replacefilter token="@j2se-version@" property="j2se-version" />
				<replacefilter token="@main-class@" property="main-class" />
			</replace>
			<replace file="${client.build.dir}/ELabFullClient.jnlp" token="&lt;!-- Jar eLab Client --&gt;" value="&lt;jar href=&quot;ELabClient_sig.jar&quot; main=&quot;true&quot; /&gt;"/>
			<replace file="${client.build.dir}/ELabFullClient.jnlp" token="&lt;!-- Jar ReC Client --&gt;" value="&lt;jar href=&quot;ReCClient_sig.jar&quot;/&gt;"/>
			<replace file="${client.build.dir}/ELabFullClient.jnlp" token="&lt;!-- Jar ReC Common --&gt;" value="&lt;jar href=&quot;ReCCommon_sig.jar&quot;/&gt;"/>
				
			<process.list task="add.experiment.to.full.jnlp.build" list="${experiment.list}" attribute.name="experiment.name" />
		</sequential>
	</macrodef>
	
	<macrodef name="add.experiment.to.full.jnlp.build">
		<attribute name="experiment.name" />
		<attribute name="location" />
		<sequential>
			<replace file="${client.build.dir}/ELabFullClient.jnlp" token="&lt;!--End Experiment Jars--&gt;" >
				<replacevalue><![CDATA[<jar href="client/@temporary.experiment.jar@"/>
		<!--End Experiment Jars-->]]></replacevalue>
			</replace>
			<replace file="${client.build.dir}/ELabFullClient.jnlp" token="@temporary.experiment.jar@" value="client/@{experiment.name}Client_sig.jar"/>
		</sequential>
	</macrodef>

	<!--
		=====================================================
		================ReC Experiments======================
		=====================================================
	-->

	<property name="experiments.classes.dir" value="${build.dir.compile}/classes/experiments" />
	<property name="experiments.build.dir" value="${build.dir.dist}/experiments" />

	<property name="template.file" value="${basedir}/templates/jnlp/template.xml" />

	<!--MACROS-->

	<macrodef name="process.list">
		<attribute name="list" />
		<attribute name="task" />
		<attribute name="attribute.name" />

		<sequential>
			<script language="javascript">
				<![CDATA[
					var list="@{list}";
					var task="@{task}";
					var attribute_name="@{attribute.name}";
				    var splitVars=list.split(",");
					
				    for(var i=0;i<splitVars.length;i++)
				    {    
						var oTask=project.createTask(task);
						oTask.init();
						oTask.setDynamicAttribute(attribute_name,splitVars[i]);
						oTask.execute();
					}
				]]>
			</script>
		</sequential>
	</macrodef>

	<macrodef name="clean.experiment">
		<attribute name="experiment.name" />
		<sequential>
			<delete dir="${experiments.classes.dir}/@{experiment.name}" />
			<delete file="${build.dir.compile}/@{experiment.name}Client.jar"/>
			<delete file="${build.dir.compile}/@{experiment.name}Client_sig.jar"/>
		</sequential>
	</macrodef>

	<path id="compile.experiment.client.classpath">
		<pathelement location="${rec.common.classes.dir}" />
		<path refid="rec.common.libs.classpath" />
		<pathelement location="${rec.client.classes.dir}" />
		<pathelement location="${rec.ui.classes.dir}" />
		<path refid="rec.client.libs.classpath" />
		<pathelement location="${elab.client.classes.dir}" />
		<path refid="elab.client.libs.classpath" />
	</path>

	<path id="compile.experiment.driver.classpath">
		<pathelement location="${rec.common.classes.dir}" />
		<path refid="rec.common.libs.classpath" />
		<pathelement location="${rec.hardwareserver.classes.dir}" />
		<path refid="rec.hardwareserver.libs.classpath" />
		<pathelement location="${elab.hardwareserver.classes.dir}" />
		<path refid="elab.hardwareserver.libs.classpath" />
	</path>

	<macrodef name="compile.experiment.client">
		<attribute name="experiment.name" />
		<sequential>

			<mkdir dir="${experiments.classes.dir}/@{experiment.name}/client" />
			<mkdir dir="${experiments.classes.dir}/@{experiment.name}/client/META-INF" />
			<echo>Compiling experiment client: @{experiment.name}</echo>

			<ant antfile="build.xml" dir="experiments/@{experiment.name}/etc" target="pre-compile" />

			<javac srcdir="experiments/@{experiment.name}/src/java/client" destdir="${experiments.classes.dir}/@{experiment.name}/client" encoding="${javac.encoding}" debug="${javac.debug}" optimize="${javac.optimize}" source="${javac.sourcelevel}" target="${javac.sourcelevel}" deprecation="yes">
				<include name="**/*.java" />
				<classpath>
					<path refid="compile.experiment.client.classpath" />
					<fileset dir="experiments/@{experiment.name}/lib/java/client">
						<include name="**/*.jar" />
					</fileset>
				</classpath>
				<compilerarg value="-Xlint:unchecked, cast, -serial" />
			</javac>

			<copy todir="${experiments.classes.dir}/@{experiment.name}/client" overwrite="true">
				<fileset dir="experiments/@{experiment.name}/src/java/client">
					<exclude name="**/*.java" />
					<exclude name="**/*.form" />
				</fileset>
			</copy>

			<manifest file="${experiments.classes.dir}/@{experiment.name}/client/META-INF/MANIFEST.MF">
				<section name="common">
					<attribute name="Specification-Title" value="${com.linkare.rec.spec.title}" />
					<attribute name="Specification-Version" value="${com.linkare.rec.spec.version}" />
					<attribute name="Specification-Vendor" value="${com.linkare.rec.spec.title}" />
					<attribute name="Implementation-Title" value="${com.linkare.rec.impl.title}" />
					<attribute name="Implementation-Version" value="${com.linkare.rec.impl.version} ${today}" />
					<attribute name="Implementation-Vendor" value="${com.linkare.rec.impl.vendor}" />
				</section>
			</manifest>

			<jar.experiment.client experiment.name="@{experiment.name}" destination="${build.dir.compile}"/>
			
			<sign.jar jar.name="@{experiment.name}Client.jar" folder="${build.dir.compile}"/>
			
			<ant antfile="build.xml" dir="experiments/@{experiment.name}/etc" target="post-compile" />

		</sequential>
	</macrodef>

	<macrodef name="compile.experiment.driver">
		<attribute name="experiment.name" />
		<sequential>

			<mkdir dir="${experiments.classes.dir}/@{experiment.name}/server" />
			<mkdir dir="${experiments.classes.dir}/@{experiment.name}/server/META-INF" />
			<echo>Compiling experiment driver: @{experiment.name}</echo>

			<ant antfile="build.xml" dir="experiments/@{experiment.name}/etc" target="pre-compile" />

			<javac srcdir="experiments/@{experiment.name}/src/java/server" destdir="${experiments.classes.dir}/@{experiment.name}/server" encoding="${javac.encoding}" debug="${javac.debug}" optimize="${javac.optimize}" source="${javac.sourcelevel}" target="${javac.sourcelevel}" deprecation="yes">
				<include name="**/*.java" />
				<classpath>
					<path refid="compile.experiment.driver.classpath" />
					<fileset dir="experiments/@{experiment.name}/lib/java/server">
						<include name="**/*.jar" />
					</fileset>
				</classpath>
				<compilerarg value="-Xlint:unchecked, cast, -serial" />
			</javac>

			<copy todir="${experiments.classes.dir}/@{experiment.name}/server" overwrite="true">
				<fileset dir="experiments/@{experiment.name}/src/java/server">
					<exclude name="**/*.java" />
					<exclude name="**/*.form" />
				</fileset>
			</copy>

			<manifest file="${experiments.classes.dir}/@{experiment.name}/server/META-INF/MANIFEST.MF">
				<section name="common">
					<attribute name="Specification-Title" value="${com.linkare.rec.spec.title}" />
					<attribute name="Specification-Version" value="${com.linkare.rec.spec.version}" />
					<attribute name="Specification-Vendor" value="${com.linkare.rec.spec.title}" />
					<attribute name="Implementation-Title" value="${com.linkare.rec.impl.title}" />
					<attribute name="Implementation-Version" value="${com.linkare.rec.impl.version} ${TODAY}" />
					<attribute name="Implementation-Vendor" value="${com.linkare.rec.impl.vendor}" />
				</section>
			</manifest>

			<ant antfile="build.xml" dir="experiments/@{experiment.name}/etc" target="post-compile" />

		</sequential>
	</macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: name          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="jar.experiment.client">
        <attribute name="experiment.name" />
    	<attribute name="destination"/>
        <sequential>
            <mkdir dir="@{destination}"/>
        	
        	<ant antfile="build.xml" dir="experiments/@{experiment.name}/etc" target="pre-jar" />
        	
        	<jar destfile="@{destination}/@{experiment.name}Client.jar" basedir="${experiments.classes.dir}/@{experiment.name}/client"/>
        	
        	<ant antfile="build.xml" dir="experiments/@{experiment.name}/etc" target="post-jar" />
        	
        </sequential>
    </macrodef>

	<macrodef name="jar.experiment.driver">
		<attribute name="experiment.name" />
		<attribute name="destination"/>
		<sequential>
			<mkdir dir="@{destination}" />

			<ant antfile="build.xml" dir="experiments/@{experiment.name}/etc" target="pre-jar" />

			<jar destfile="@{destination}/@{experiment.name}Driver.jar" basedir="${experiments.classes.dir}/@{experiment.name}/server">
			</jar>

			<ant antfile="build.xml" dir="experiments/@{experiment.name}/etc" target="post-jar" />

		</sequential>
	</macrodef>
	
	<macrodef name="build.experiment">
		<attribute name="experiment.name" />
		<sequential>
			<clean.experiment experiment.name="@{experiment.name}" />
			<compile.experiment.client experiment.name="@{experiment.name}" />
			<compile.experiment.driver experiment.name="@{experiment.name}" />
			<!--jar.experiment.client experiment.name="@{experiment.name}" /-->
			<jar.experiment.driver experiment.name="@{experiment.name}" destination="${hardwareserver.build.dir}"/>
			<!--sign. experiment.name="@{experiment.name}" />
			<create.jnlp.for.experiment experiment.name="@{experiment.name}" /-->
		</sequential>
	</macrodef>

	<macrodef name="dist.experiment">
		<attribute name="experiment.name" />
		<sequential>
			<build.experiment experiment.name="@{experiment.name}" />
			<zip destfile="${dist.dir}/elab-@{experiment.name}-client.zip" update="true" comment="eLab @{experiment.name} Client">
				<fileset file="${experiments.build.dir.client}/@{experiment.name}/@{experiment.name}Client_sig.jar" />
			</zip>
			<zip destfile="${dist.dir}/elab-@{experiment.name}-hwserver.zip" update="true" comment="eLab @{experiment.name} Driver">
				<fileset file="${experiments.build.dir.server}/@{experiment.name}/@{experiment.name}Driver.jar" />
			</zip>
			<zip destfile="${dist.dir}/elab-@{experiment.name}.zip" update="true" comment="eLab @{experiment.name} Complete Distribution">
				<fileset file="${experiments.build.dir.client}/@{experiment.name}/@{experiment.name}Client_sig.jar" />
				<fileset file="${experiments.build.dir.server}/@{experiment.name}/@{experiment.name}Driver.jar" />
			</zip>
		</sequential>
	</macrodef>
	
	<macrodef name="create.jnlp.for.experiment">
		<attribute name="experiment.name" />
		<sequential>
			<copy file="${template.file}" overwrite="yes" tofile="${experiments.build.dir}/@{experiment.name}/${experiment.name}.jnlp" />
			<replace file="${experiments.build.dir}/@{experiment.name}/${experiment.name}.jnlp" propertyFile="experiments/@{experiment.name}/etc/build.properties">
				<replacefilter token="@codebase@" property="@{experiment.name}.codebase" />
				<replacefilter token="@href@" property="@{experiment.name}.href" />
				<replacefilter token="@title@" property="@{experiment.name}.title" />
				<replacefilter token="@vendor@" property="@{experiment.name}.vendor" />
				<replacefilter token="@homepage@" property="@{experiment.name}.homepage" />
				<replacefilter token="@one-line@" property="@{experiment.name}.one-line" />
				<replacefilter token="@tootip@" property="@{experiment.name}.tootip" />
				<replacefilter token="@short@" property="@{experiment.name}.short" />
				<replacefilter token="@j2se-version@" property="@{experiment.name}.j2se-version" />
				<replacefilter token="@main-class@" property="@{experiment.name}.main-class" />
			</replace>
			<replace file="${experiments.build.dir}/@{experiment.name}/${experiment.name}.jnlp" token="&lt;!-- Jar eLab Client --&gt;" value="&lt;jar href=&quot;ELabClient_sig.jar&quot;/&gt;"/>
			<replace file="${experiments.build.dir}/@{experiment.name}/${experiment.name}.jnlp" token="&lt;!-- Jar ReC Client --&gt;" value="&lt;jar href=&quot;ReCClient_sig.jar&quot;/&gt;"/>
			<replace file="${experiments.build.dir}/@{experiment.name}/${experiment.name}.jnlp" token="&lt;!-- Jar ReC Common --&gt;" value="&lt;jar href=&quot;ReCCommon_sig.jar&quot;/&gt;"/>
			<replace file="${experiments.build.dir}/@{experiment.name}/${experiment.name}.jnlp" token="&lt;!--End Experiment Jars--&gt;" >
				<replacevalue><![CDATA[<jar href="client/@temporary.experiment.jar@" main="true"/>
		<!--End Experiment Jars-->]]></replacevalue>
			</replace>
		<replace file="${experiments.build.dir}/@{experiment.name}/${experiment.name}.jnlp" token="@temporary.experiment.jar@" value="client/@{experiment.name}Client_sig.jar"/>
		
		</sequential>
	</macrodef>

	<macrodef name="run.experiment.client">
		<attribute name="experiment.name" />
		<sequential>
			<java classname="pt.utl.ist.elab.client.@{experiment.name}.ClientMain" fork="true" failonerror="true">
				<arg value="-h" />
				<classpath>
					<fileset dir="lib/">
						<include name="**/*.jar" />
					</fileset>
					<fileset dir="experiments/@{experiment.name}/lib/java/client/">
						<include name="**/*.jar" />
					</fileset>
					<path refid="rec.common.lib.path" />
					<path refid="rec.client.lib.path" />
					<pathelement location="${rec.common.classes.dir}" />
					<pathelement location="${rec.client.classes.dir}" />
					<pathelement location="${rec.ui.classes.dir}" />
					<pathelement location="${experiments.classes.dir}/@{experiment.name}/client/" />
				</classpath>
				<jvmarg value="-Xms${min.memory}" />
				<jvmarg value="-Xmx${max.memory}" />
				<sysproperty key="rec.multicastcontroller.bindname" value="${rec.multicastcontroller.bindname}" />
				<sysproperty key="rec.multicastcontroller.initref" value="${rec.multicastcontroller.initref}" />
				<sysproperty key="java.util.logging.config.file" value="${java.util.logging.config.file}" />
				<sysproperty key="openorb.profile" value="${experiment.openorb.profile}" />
				<sysproperty key="eLab.@{experiment.name}.HardwareInfo" value="${experiment.eLab.HardwareInfo}" />
				<sysproperty key="org.omg.CORBA.ORBClass" value="${org.omg.CORBA.ORBClass}" />
				<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="${org.omg.CORBA.ORBSingletonClass}" />
				<sysproperty key="com.sun.CORBA.ORBDynamicStubFactoryFactoryClass" value="${com.sun.CORBA.ORBDynamicStubFactoryFactoryClass}" />
				<sysproperty key="openorb.config" value="${openorb.config}" />
				<sysproperty key="openorb.config.virtual" value="${openorb.config.virtual}" />
			</java>
		</sequential>
	</macrodef>

	<macrodef name="run.experiment.driver">
		<attribute name="experiment.name" />
		<sequential>
			<echo>starting @{experiment.name} driver</echo>
			<java classname="pt.utl.ist.elab.driver.@{experiment.name}.ServerMain" fork="true" failonerror="true">
				<arg value="-h" />
				<classpath>
					<fileset dir="lib/">
						<include name="**/*.jar" />
					</fileset>
					<fileset dir="experiments/@{experiment.name}/lib/java/server/">
						<include name="**/*.jar" />
					</fileset>
					<path refid="rec.common.lib.path" />
					<pathelement location="${rec.common.classes.dir}" />
					<pathelement location="${rec.hardwareserver.classes.dir}" />
					<pathelement location="${experiments.classes.dir}/@{experiment.name}/server/" />
				</classpath>
				<jvmarg value="-Xms${min.memory}" />
				<jvmarg value="-Xmx${max.memory}" />
				<sysproperty key="rec.multicastcontroller.bindname" value="${rec.multicastcontroller.bindname}" />
				<sysproperty key="rec.multicastcontroller.initref" value="${rec.multicastcontroller.initref}" />
				<sysproperty key="java.util.logging.config.file" value="${java.util.logging.config.file}" />
				<sysproperty key="openorb.profile" value="${experiment.openorb.profile}" />
				<sysproperty key="eLab.@{experiment.name}.HardwareInfo" value="${experiment.eLab.HardwareInfo}" />
				<sysproperty key="org.omg.CORBA.ORBClass" value="${org.omg.CORBA.ORBClass}" />
				<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="${org.omg.CORBA.ORBSingletonClass}" />
				<sysproperty key="com.sun.CORBA.ORBDynamicStubFactoryFactoryClass" value="${com.sun.CORBA.ORBDynamicStubFactoryFactoryClass}" />
				<sysproperty key="openorb.config" value="${openorb.config}" />
				<sysproperty key="openorb.config.virtual" value="${openorb.config.virtual}" />
			</java>
		</sequential>
	</macrodef>


	<macrodef name="debug.experiment.driver">
		<attribute name="experiment.name" />
		<sequential>
			<echo>starting @{experiment.name} driver</echo>
			<java classname="pt.utl.ist.elab.driver.@{experiment.name}.ServerMain" fork="true" failonerror="true">
				<arg value="-h" />
				<classpath>
					<fileset dir="lib/">
						<include name="**/*.jar" />
					</fileset>
					<fileset dir="experiments/@{experiment.name}/lib/java/server/">
						<include name="**/*.jar" />
					</fileset>
					<path refid="rec.common.lib.path" />
					<pathelement location="${rec.common.classes.dir}" />
					<pathelement location="${rec.hardwareserver.classes.dir}" />
					<pathelement location="${experiments.classes.dir}/@{experiment.name}/server/" />
				</classpath>
				<jvmarg value="-Xms${min.memory}" />
				<jvmarg value="-Xmx${max.memory}" />
				<jvmarg value="-Xdebug" />
				<jvmarg value="-Xrunjdwp:transport=dt_socket,address=${experiment.driver.debug.address.port},server=y,suspend=y" />
				<sysproperty key="rec.multicastcontroller.bindname" value="${rec.multicastcontroller.bindname}" />
				<sysproperty key="rec.multicastcontroller.initref" value="${rec.multicastcontroller.initref}" />
				<sysproperty key="java.util.logging.config.file" value="${java.util.logging.config.file}" />
				<sysproperty key="openorb.profile" value="${experiment.openorb.profile}" />
				<sysproperty key="eLab.@{experiment.name}.HardwareInfo" value="${experiment.eLab.HardwareInfo}" />
				<sysproperty key="org.omg.CORBA.ORBClass" value="${org.omg.CORBA.ORBClass}" />
				<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="${org.omg.CORBA.ORBSingletonClass}" />
				<sysproperty key="com.sun.CORBA.ORBDynamicStubFactoryFactoryClass" value="${com.sun.CORBA.ORBDynamicStubFactoryFactoryClass}" />
				<sysproperty key="openorb.config" value="${openorb.config}" />
				<sysproperty key="openorb.config.virtual" value="${openorb.config.virtual}" />
			</java>
		</sequential>
	</macrodef>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: create.jar          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="create.jar">
        <attribute name="destination.folder" />
        <attribute name="jar.name" />
        <attribute name="source.basedir" />

    	<sequential>
    		<mkdir dir="@{destination.folder}" />
    			<jar destfile="@{destination.folder}/@{jar.name}" basedir="@{source.basedir}">
					<manifest>
    					<section name="common">
    						<attribute name="Specification-Title" value="${com.linkare.rec.spec.title}" />
    						<attribute name="Specification-Version" value="${com.linkare.rec.spec.version}" />
    						<attribute name="Specification-Vendor" value="${com.linkare.rec.spec.title}" />
    						<attribute name="Implementation-Title" value="${com.linkare.rec.impl.title}" />
    						<attribute name="Implementation-Version" value="${com.linkare.rec.impl.version} ${TODAY}" />
    						<attribute name="Implementation-Vendor" value="${com.linkare.rec.impl.vendor}" />
    					</section>
    				</manifest>
    			</jar>    
        </sequential>
    </macrodef>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: sign.jar          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="sign.jar">
        <attribute name="folder" />
        <attribute name="jar.name" />
        <sequential>
    		<signjar storetype="${storetype}" destDir="@{folder}" keystore="${keystore}" keypass="${keypass}" storepass="${storepass}" alias="${alias}">
    			<fileset dir="@{folder}" includes="@{jar.name}" excludes="*_sig.jar" />
    			<globmapper from="*.jar" to="*_sig.jar" />
    		</signjar>            
        </sequential>
    </macrodef>

	
	<!--/MACROS-->

	<!--
		================================================================
		========================== Libraries ===========================
		================================================================
		-->

	<macrodef name="sign.jars.in.directory">
		<attribute name="source.dir.name" />
		<attribute name="destination.dir.name" />
		<sequential>
			<mkdir dir="@{destination.dir.name}" />
			<signjar storetype="${storetype}" destDir="@{destination.dir.name}" keystore="${keystore}" keypass="${keypass}" storepass="${storepass}" alias="${alias}">
				<fileset dir="@{source.dir.name}" includes="*.jar" excludes="*_sig.jar" />
				<globmapper from="*.jar" to="*_sig.jar" />
			</signjar>
		</sequential>
	</macrodef>	

	<!--
		================================================================
		========================== Javadocs ============================
		================================================================
		-->

	<taskdef name="p200ant" classname="de.matthiasmann.p200ant.P200AntTask" classpath="${rec.lib.dir}/compile/common/p200ant.jar" />

	
	<macrodef name="pack.200.all.jar.in.dir">
		<attribute name="source.directory" />
		<attribute name="destination.directory"/>
		<sequential>
			<delete failonerror="false">
				<fileset dir="@{destination.directory}"> 
					<include name="**/*_sig.jar" />
					<include name="**/*_sig.jar.pack.gz" />
				</fileset>
			</delete>

			<mkdir dir="@{destination.directory}" />

			<copy todir="@{destination.directory}">
				<fileset dir="@{source.directory}"> 
					<include name="**/*.jar" />
				</fileset>
			</copy>

			<p200ant repack="true">
				<fileset dir="@{destination.directory}"> 
					<include name="**/*.jar" />
				</fileset>
			</p200ant>

			<signjar destDir="@{destination.directory}" keystore="${keystore}" storepass="${keypass}" alias="${alias}" storetype="${storetype}">
				<fileset dir="@{destination.directory}" includes="**/*.jar" excludes="*_sig.jar" />
				<globmapper from="*.jar" to="*_sig.jar" />
			</signjar>

			<delete failonerror="false">
				<fileset dir="@{destination.directory}" includes="**/*.jar" excludes="**/*_sig.jar" />
			</delete>

			<p200ant destdir="@{destination.directory}">
				<fileset dir="@{destination.directory}"> 
					<include name="**/*_sig.jar" />
				</fileset>
			</p200ant>

		</sequential>
	</macrodef>

	
	<macrodef name="pack.200.single.jar">
		<attribute name="source.jar.without.extension" />
		<attribute name="source.directory"/>
		<attribute name="destination.directory"/>
		<sequential>
			<delete failonerror="false">
				<fileset dir="@{destination.directory}"> 
					<include name="@{source.jar.without.extension}_sig.jar"/> 
					<include name="@{source.jar.without.extension}_sig.jar.pack.gz"/>
				</fileset>
			</delete>
			<mkdir dir="@{destination.directory}" />
			<copy file="@{source.directory}/@{source.jar.without.extension}.jar" todir="@{destination.directory}" overwrite="true"/>
			<p200ant repack="true" srcfile="@{destination.directory}/@{source.jar.without.extension}.jar" />
			<signjar destDir="@{destination.directory}" keystore="${keystore}" storepass="${keypass}" alias="${alias}" storetype="${storetype}">
				<fileset file="@{destination.directory}/@{source.jar.without.extension}.jar" />
				<globmapper from="*.jar" to="*_sig.jar" />
			</signjar>
			<delete failonerror="false">
				<fileset dir="@{destination.directory}" includes="**/*.jar" excludes="**/*_sig.jar" />
			</delete>
			<p200ant repack="false" destdir="@{destination.directory}" srcfile="@{destination.directory}/@{source.jar.without.extension}_sig.jar" />

		</sequential>
	</macrodef>

</project>